[{"/Users/Tolulopeodueke/Developer/jumga-client/src/index.js":"1","/Users/Tolulopeodueke/Developer/jumga-client/src/App.js":"2","/Users/Tolulopeodueke/Developer/jumga-client/src/reportWebVitals.js":"3","/Users/Tolulopeodueke/Developer/jumga-client/src/i18n.js":"4","/Users/Tolulopeodueke/Developer/jumga-client/src/routes/allRoutes.js":"5","/Users/Tolulopeodueke/Developer/jumga-client/src/routes/middleware/UserMiddleware.js":"6","/Users/Tolulopeodueke/Developer/jumga-client/src/components/NonAuthLayout.js":"7","/Users/Tolulopeodueke/Developer/jumga-client/src/components/StoreLayout.js":"8","/Users/Tolulopeodueke/Developer/jumga-client/src/routes/middleware/NonAuthMiddleware.js":"9","/Users/Tolulopeodueke/Developer/jumga-client/src/routes/middleware/Storemiddleware.js":"10","/Users/Tolulopeodueke/Developer/jumga-client/src/routes/middleware/StoreAuthmiddleware.js":"11","/Users/Tolulopeodueke/Developer/jumga-client/src/routes/middleware/Authmiddleware.js":"12","/Users/Tolulopeodueke/Developer/jumga-client/src/containers/index.js":"13","/Users/Tolulopeodueke/Developer/jumga-client/src/components/Layout/index.js":"14","/Users/Tolulopeodueke/Developer/jumga-client/src/components/UserLayout/index.js":"15","/Users/Tolulopeodueke/Developer/jumga-client/src/containers/provider.js":"16","/Users/Tolulopeodueke/Developer/jumga-client/src/App.constant.js":"17","/Users/Tolulopeodueke/Developer/jumga-client/src/components/StoreHeader.js":"18","/Users/Tolulopeodueke/Developer/jumga-client/src/pages/Authentication/Create.js":"19","/Users/Tolulopeodueke/Developer/jumga-client/src/pages/Home/Home.js":"20","/Users/Tolulopeodueke/Developer/jumga-client/src/pages/Authentication/Login.js":"21","/Users/Tolulopeodueke/Developer/jumga-client/src/pages/Authentication/LoginX.js":"22","/Users/Tolulopeodueke/Developer/jumga-client/src/pages/Store/store-checkout.js":"23","/Users/Tolulopeodueke/Developer/jumga-client/src/pages/Store/StoreAddProduct.js":"24","/Users/Tolulopeodueke/Developer/jumga-client/src/pages/Store/StoreDetails.js":"25","/Users/Tolulopeodueke/Developer/jumga-client/src/pages/Store/StoreProductDetails.js":"26","/Users/Tolulopeodueke/Developer/jumga-client/src/pages/Authentication/CreateX.js":"27","/Users/Tolulopeodueke/Developer/jumga-client/src/pages/Store/StoreListing.js":"28","/Users/Tolulopeodueke/Developer/jumga-client/src/pages/Store/Cart.js":"29","/Users/Tolulopeodueke/Developer/jumga-client/src/pages/Store/GeneralStoreProducts.js":"30","/Users/Tolulopeodueke/Developer/jumga-client/src/pages/Store/StoreProducts.js":"31","/Users/Tolulopeodueke/Developer/jumga-client/src/pages/Utility/comin-soon.js":"32","/Users/Tolulopeodueke/Developer/jumga-client/src/pages/Store/Checkout.js":"33","/Users/Tolulopeodueke/Developer/jumga-client/src/pages/Utility/payment-close.js":"34","/Users/Tolulopeodueke/Developer/jumga-client/src/containers/MasterContainer.js":"35","/Users/Tolulopeodueke/Developer/jumga-client/src/containers/LayoutContainer.js":"36","/Users/Tolulopeodueke/Developer/jumga-client/src/config.js":"37","/Users/Tolulopeodueke/Developer/jumga-client/src/containers/PaymentContainer.js":"38","/Users/Tolulopeodueke/Developer/jumga-client/src/containers/UserContainer.js":"39","/Users/Tolulopeodueke/Developer/jumga-client/src/components/Layout/Footer.js":"40","/Users/Tolulopeodueke/Developer/jumga-client/src/components/Layout/Sidebar.js":"41","/Users/Tolulopeodueke/Developer/jumga-client/src/components/Layout/Header.js":"42","/Users/Tolulopeodueke/Developer/jumga-client/src/components/UserLayout/Header.js":"43","/Users/Tolulopeodueke/Developer/jumga-client/src/components/Common/Breadcrumb.js":"44","/Users/Tolulopeodueke/Developer/jumga-client/src/components/CommonForBoth/TopbarDropdown/ProfileMenu.js":"45","/Users/Tolulopeodueke/Developer/jumga-client/src/components/CommonForBoth/TopbarDropdown/NotificationDropdown.js":"46","/Users/Tolulopeodueke/Developer/jumga-client/src/components/Layout/SidebarContent.js":"47","/Users/Tolulopeodueke/Developer/jumga-client/src/helpers/axiosly.js":"48","/Users/Tolulopeodueke/Developer/jumga-client/src/pages/Store/CreateStore.js":"49","/Users/Tolulopeodueke/Developer/jumga-client/src/components/Common/ErrorMessage.js":"50","/Users/Tolulopeodueke/Developer/jumga-client/src/pages/Store/card-store-checkout.js":"51"},{"size":495,"mtime":1610037918562,"results":"52","hashOfConfig":"53"},{"size":2462,"mtime":1610037918413,"results":"54","hashOfConfig":"53"},{"size":362,"mtime":1610037918569,"results":"55","hashOfConfig":"53"},{"size":1077,"mtime":1610037918561,"results":"56","hashOfConfig":"53"},{"size":2699,"mtime":1610037918569,"results":"57","hashOfConfig":"53"},{"size":917,"mtime":1610037918570,"results":"58","hashOfConfig":"53"},{"size":706,"mtime":1610037918558,"results":"59","hashOfConfig":"53"},{"size":835,"mtime":1610037918559,"results":"60","hashOfConfig":"53"},{"size":418,"mtime":1610037918570,"results":"61","hashOfConfig":"53"},{"size":1131,"mtime":1610037918570,"results":"62","hashOfConfig":"53"},{"size":1154,"mtime":1610037918570,"results":"63","hashOfConfig":"53"},{"size":1129,"mtime":1610037918570,"results":"64","hashOfConfig":"53"},{"size":427,"mtime":1610037918561,"results":"65","hashOfConfig":"53"},{"size":3892,"mtime":1610037918558,"results":"66","hashOfConfig":"53"},{"size":818,"mtime":1610037918559,"results":"67","hashOfConfig":"53"},{"size":612,"mtime":1610037918561,"results":"68","hashOfConfig":"53"},{"size":530,"mtime":1610037918413,"results":"69","hashOfConfig":"53"},{"size":8090,"mtime":1610037918558,"results":"70","hashOfConfig":"53"},{"size":22667,"mtime":1610037918564,"results":"71","hashOfConfig":"53"},{"size":801,"mtime":1610037918564,"results":"72","hashOfConfig":"53"},{"size":12517,"mtime":1610037918564,"results":"73","hashOfConfig":"53"},{"size":12506,"mtime":1610037918564,"results":"74","hashOfConfig":"53"},{"size":12459,"mtime":1610037918567,"results":"75","hashOfConfig":"53"},{"size":24546,"mtime":1610037918566,"results":"76","hashOfConfig":"53"},{"size":2574,"mtime":1610037918566,"results":"77","hashOfConfig":"53"},{"size":25270,"mtime":1610037918567,"results":"78","hashOfConfig":"53"},{"size":22656,"mtime":1610037918564,"results":"79","hashOfConfig":"53"},{"size":8400,"mtime":1610037918566,"results":"80","hashOfConfig":"53"},{"size":13786,"mtime":1610037918565,"results":"81","hashOfConfig":"53"},{"size":17266,"mtime":1610037918566,"results":"82","hashOfConfig":"53"},{"size":13156,"mtime":1610054239469,"results":"83","hashOfConfig":"53"},{"size":1824,"mtime":1610037918568,"results":"84","hashOfConfig":"53"},{"size":46534,"mtime":1610037918565,"results":"85","hashOfConfig":"53"},{"size":1552,"mtime":1610037918569,"results":"86","hashOfConfig":"53"},{"size":4535,"mtime":1610037918560,"results":"87","hashOfConfig":"53"},{"size":4972,"mtime":1610037918560,"results":"88","hashOfConfig":"53"},{"size":1814,"mtime":1610037918559,"results":"89","hashOfConfig":"53"},{"size":2839,"mtime":1610037918560,"results":"90","hashOfConfig":"53"},{"size":10786,"mtime":1610037918560,"results":"91","hashOfConfig":"53"},{"size":768,"mtime":1610037918557,"results":"92","hashOfConfig":"53"},{"size":845,"mtime":1610037918558,"results":"93","hashOfConfig":"53"},{"size":3949,"mtime":1610037918557,"results":"94","hashOfConfig":"53"},{"size":3211,"mtime":1610037918559,"results":"95","hashOfConfig":"53"},{"size":1087,"mtime":1610037918555,"results":"96","hashOfConfig":"53"},{"size":3342,"mtime":1610037918557,"results":"97","hashOfConfig":"53"},{"size":5093,"mtime":1610037918556,"results":"98","hashOfConfig":"53"},{"size":4865,"mtime":1610037918558,"results":"99","hashOfConfig":"53"},{"size":562,"mtime":1610037918561,"results":"100","hashOfConfig":"53"},{"size":10637,"mtime":1610037918565,"results":"101","hashOfConfig":"53"},{"size":415,"mtime":1610037918555,"results":"102","hashOfConfig":"53"},{"size":555,"mtime":1610037918567,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"1iwqjtr",{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"106"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"106"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"106"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"106"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"106"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"106"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"106"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"106"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"106"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"106"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"106"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"106"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"106"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"106"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"106"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"106"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"106"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"106"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"106"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"106"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"106"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"106"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"106"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"106"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"106"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"106"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"106"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"106"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"106"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"106"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"/Users/Tolulopeodueke/Developer/jumga-client/src/index.js",[],["237","238"],"/Users/Tolulopeodueke/Developer/jumga-client/src/App.js",["239","240","241"],"import React, { Component, useEffect } from 'react';\nimport { Switch, BrowserRouter as Router,Route } from \"react-router-dom\";\nimport { Provider, Subscribe } from \"unstated\";\n\nimport allStores from './containers';\nimport { userRoutes , authRoutes, storeRoutes, storeAuthRoutes, userAuthRoutes } from \"./routes/allRoutes\";\nimport Authmiddleware from \"./routes/middleware/Authmiddleware\";\nimport Storemiddleware from \"./routes/middleware/Storemiddleware\";\nimport NonAuthmiddleware from \"./routes/middleware/NonAuthMiddleware\";\nimport NonAuthLayout from './components/NonAuthLayout';\nimport StoreLayout from './components/StoreLayout';\nimport Layout from \"./components/Layout\";\nimport UserLayout from \"./components/UserLayout\";\n\nimport \"./assets/scss/theme.scss\";\nimport StoreAuthmiddleware from './routes/middleware/StoreAuthmiddleware';\nimport UserMiddleware from './routes/middleware/UserMiddleware';\n// import TestingSpeech from './components/TestingSpeech';\n\nclass App extends Component{\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.layoutStore = allStores[0];\n\t\tthis.userStore = allStores[2];\n\t\tthis.masterStore = allStores[3];\n\t\tthis.paymentStore = allStores[4];\n\t}\n\n\tappScreen = (layout) => \n\t\t<React.Fragment>\n\t\t\t<Router>\n\t\t\t\t<Switch>\n\t\t\t\t\t{userAuthRoutes.map((route, idx) => (\n\t\t\t\t\t\t<NonAuthmiddleware\n\t\t\t\t\t\t\tpath={route.path}\n\t\t\t\t\t\t\tcomponent={route.component}\n\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\tlayout={NonAuthLayout}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t\t\n\t\t\t\t\t{authRoutes.map((route, idx) => (\n\t\t\t\t\t\t<NonAuthmiddleware\n\t\t\t\t\t\t\tpath={route.path}\n\t\t\t\t\t\t\tcomponent={route.component}\n\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\tlayout={NonAuthLayout}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\n\t\t\t\t\t{storeAuthRoutes.map((route, idx) => (\n\t\t\t\t\t\t<StoreAuthmiddleware\n\t\t\t\t\t\t\tpath={route.path}\n\t\t\t\t\t\t\tcomponent={route.component}\n\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\tlayout={Layout}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\n\t\t\t\t\t{storeRoutes.map((route, idx) => (\n\t\t\t\t\t\t<Storemiddleware\n\t\t\t\t\t\t\tpath={route.path}\n\t\t\t\t\t\t\tcomponent={route.component}\n\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\tlayout={StoreLayout}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\n\t\t\t\t\t{userRoutes.map((route, idx) => (\n\t\t\t\t\t\t<UserMiddleware\n\t\t\t\t\t\t\tpath={route.path}\n\t\t\t\t\t\t\tcomponent={route.component}\n\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\tlayout={UserLayout}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t</React.Fragment>\n\n\trender() {\n\t\treturn (\n\t\t\t<Provider inject={allStores}>\n\t\t\t\t<Subscribe to={[this.layoutStore]}>\n\t\t\t\t\t{layoutStore => (\n\t\t\t\t\t\tthis.appScreen(layoutStore)\n\t\t\t\t\t)}\n\t\t\t\t</Subscribe>\n\t\t\t</Provider>\n\t\t)\n\t}\n}\n\nexport default App;\n","/Users/Tolulopeodueke/Developer/jumga-client/src/reportWebVitals.js",[],"/Users/Tolulopeodueke/Developer/jumga-client/src/i18n.js",[],"/Users/Tolulopeodueke/Developer/jumga-client/src/routes/allRoutes.js",["242","243","244"],"import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport Home from \"../pages/Home/Home\";\nimport Login from \"../pages/Authentication/Login\";\nimport Create from \"../pages/Authentication/Create\";\nimport StoreCheckout from \"../pages/Store/store-checkout\";\nimport Store from \"../pages/Store/StoreListing\";\nimport StoreDetails from \"../pages/Store/StoreDetails\";\nimport PaymentClose from \"../pages/Utility/payment-close\";\nimport ComingSoon from \"../pages/Utility/comin-soon\";\nimport StoreAddProduct from \"../pages/Store/StoreAddProduct\";\nimport StoreProductDetails from \"../pages/Store/StoreProductDetails\";\nimport StoreProducts from \"../pages/Store/StoreProducts\";\nimport GeneralStoreProducts from \"../pages/Store/GeneralStoreProducts\";\nimport Cart from \"../pages/Store/Cart\";\nimport Checkout from \"../pages/Store/Checkout\";\nimport LoginX from \"../pages/Authentication/LoginX\";\nimport CreateX from \"../pages/Authentication/CreateX\";\n\n\nconst userRoutes = [\n\t{ path: \"/search/:id\", component: GeneralStoreProducts}, //TODO:\n\t{ path: \"/search/\", component: GeneralStoreProducts}, //TODO:\n\t{ path: \"/categories/:id\", component: ComingSoon}, //TODO:\n\t{ path: \"/cart\", component: Cart}, //TODO:\n\t{ path: \"/checkout/:id\", component: Checkout}, //TODO:\n\t{ path: \"/:productId\", component: StoreProductDetails}, //TODO: //View a particular product\n\t{ path: \"/\", exact: true, component: Home } //TODO:\n];\n\nconst storeRoutes  = [\n\t{ path: \"/store/front\", component: Store},\n];\n\nconst storeAuthRoutes = [\n\t{ path: \"/store/front/:id/overview\", component: ComingSoon}, //TODO: \n\t{ path: \"/store/front/:id/analysis\", component: ComingSoon}, //TODO: \n\t{ path: \"/store/front/:id/account\", component: ComingSoon}, //TODO: \n\t{ path: \"/store/front/:id/settings\", component: ComingSoon}, //TODO: \n\t{ path: \"/store/front/:id/customers\", component: ComingSoon},  //TODO: \n\t{ path: \"/store/front/:id/orders\", component: ComingSoon}, //TODO: \n\t{ path: \"/store/front/:id/add-products\", component: StoreAddProduct}, //Add product\n\t{ path: \"/store/front/:id/products\", component: StoreProducts},  //TODO: //View all product\n\t{ path: \"/store/front/:id\", component: StoreDetails}, //Home\n];\n\nconst authRoutes = [\n\t{ path: \"/store/login\", component: Login },\n\t{ path: \"/store/get-approved/:id\", component: StoreCheckout},\n\t{ path: \"/store/register\", component: Create},\n\t{ path: \"/payment/close\", component: PaymentClose},\n];\n\nconst userAuthRoutes = [\n\t{ path: \"/login\", component: LoginX },\n\t{ path: \"/register\", component: CreateX},\n];\n\nconst jumgaAdmminRoutes = [\n\t{ path: \"/dispatch-rider-display\" },\n\t{ path: \"/categories\"}\n]\n\nexport { userRoutes, authRoutes, storeRoutes, storeAuthRoutes, userAuthRoutes };\n","/Users/Tolulopeodueke/Developer/jumga-client/src/routes/middleware/UserMiddleware.js",["245","246","247","248","249","250"],"import React, { useEffect } from \"react\";\nimport { Route,Redirect,withRouter } from \"react-router-dom\";\nimport { withTranslation } from 'react-i18next';\nimport * as _ from 'lodash';\nimport stateWrapper from \"../../containers/provider\";\nimport firebase from \"firebase/app\";\nimport { v4 as uuidv4 } from 'uuid';\n\n// Add the Firebase products that you want to use\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/functions\";\nimport \"firebase/storage\";\nimport \"firebase/remote-config\";\nimport CONSTANTS from '../../App.constant';\n\nconst UserMiddleware = (superProps) => {\n\tconst Layout = superProps?.layout;\n\tconst Component = superProps?.component;\n\tconst path = superProps?.path;\n\treturn (\n\t\t<Route\n\t\t\tpath={path}\n\t\t\trender={(props) => {\n\t\t\t\treturn <Layout>\n\t\t\t\t\t<Component {...props} />\n\t\t\t\t</Layout>;\n\t\t\t}}\n\t\t/>\n\t);\n}\n\nexport default withRouter(withTranslation()(stateWrapper(UserMiddleware)));\n\n","/Users/Tolulopeodueke/Developer/jumga-client/src/components/NonAuthLayout.js",[],"/Users/Tolulopeodueke/Developer/jumga-client/src/components/StoreLayout.js",[],"/Users/Tolulopeodueke/Developer/jumga-client/src/routes/middleware/NonAuthMiddleware.js",["251","252","253"],"import React, { useEffect } from \"react\";\nimport { Route,Redirect,withRouter } from \"react-router-dom\";\nimport CONSTANTS from '../../App.constant';\n\nconst NonAuthmiddleware = ({\n\tcomponent: Component,\n\tlayout: Layout,\n\tpath\n}) => {\n\treturn (\n\t\t<Route\n\t\t\tpath={path}\n\t\t\trender={props => {\n\t\t\t\treturn <Layout>\n\t\t\t\t\t<Component {...props} />\n\t\t\t\t</Layout>;\n\t\t\t}}\n\t\t/>\n\t);\n}\n\nexport default withRouter(NonAuthmiddleware);\n\n","/Users/Tolulopeodueke/Developer/jumga-client/src/routes/middleware/Storemiddleware.js",["254","255","256","257"],"import React, { useEffect } from \"react\";\nimport { Route,Redirect,withRouter } from \"react-router-dom\";\nimport { withTranslation } from 'react-i18next';\nimport * as _ from 'lodash';\nimport stateWrapper from \"../../containers/provider\";\nimport firebase from \"firebase/app\";\nimport { v4 as uuidv4 } from 'uuid';\n\n// Add the Firebase products that you want to use\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/functions\";\nimport \"firebase/storage\";\nimport \"firebase/remote-config\";\nimport CONSTANTS from '../../App.constant';\n\nconst Storemiddleware = (superProps) => {\n\tconst Layout = superProps?.layout;\n\tconst Component = superProps?.component;\n\tconst path = superProps?.path;\n\treturn (\n\t\t<Route\n\t\t\tpath={path}\n\t\t\trender={(props) => {\n\t\t\t\n\t\t\t\t// here you can apply condition\n\t\t\t\tif (!localStorage.getItem(CONSTANTS.SESSIONSTORE)) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Redirect to={{ pathname: \"/store/login\", state: { from: props.location } }} />\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn <Layout>\n\t\t\t\t\t<Component {...props} />\n\t\t\t\t</Layout>;\n\t\t\t}}\n\t\t/>\n\t);\n}\n\nexport default withRouter(withTranslation()(stateWrapper(Storemiddleware)));\n\n","/Users/Tolulopeodueke/Developer/jumga-client/src/routes/middleware/StoreAuthmiddleware.js",["258","259","260","261","262"],"import React, { useEffect, useState } from \"react\";\nimport { Route,Redirect,withRouter } from \"react-router-dom\";\nimport { withTranslation } from 'react-i18next';\nimport * as _ from 'lodash';\nimport stateWrapper from \"../../containers/provider\";\nimport firebase from \"firebase/app\";\nimport { v4 as uuidv4 } from 'uuid';\n\n// Add the Firebase products that you want to use\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/functions\";\nimport \"firebase/storage\";\nimport \"firebase/remote-config\";\nimport CONSTANTS from '../../App.constant';\n\nconst StoreAuthmiddleware = (superProps) => {\n\tconst Layout = superProps?.layout;\n\tconst Component = superProps?.component;\n    const path = superProps?.path;\n\n\treturn (\n\t\t<Route\n\t\t\tpath={path}\n\t\t\trender={(props) => {\n\t\t\t\n\t\t\t\t// here you can apply condition\n\t\t\t\tif (!localStorage.getItem(CONSTANTS.SESSIONSTORE)) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Redirect to={{ pathname: \"/store/login\", state: { from: props.location } }} />\n\t\t\t\t\t);\n\t\t\t\t}\n\n\n\t\t\t\treturn <Layout>\n\t\t\t\t\t<Component {...props} />\n\t\t\t\t</Layout>;\n\t\t\t}}\n\t\t/>\n\t);\n}\n\nexport default withRouter(withTranslation()(stateWrapper(StoreAuthmiddleware)));\n\n","/Users/Tolulopeodueke/Developer/jumga-client/src/routes/middleware/Authmiddleware.js",["263","264","265","266"],"import React, { useEffect } from \"react\";\nimport { Route,Redirect,withRouter } from \"react-router-dom\";\nimport { withTranslation } from 'react-i18next';\nimport * as _ from 'lodash';\nimport stateWrapper from \"../../containers/provider\";\nimport firebase from \"firebase/app\";\nimport { v4 as uuidv4 } from 'uuid';\n\n// Add the Firebase products that you want to use\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/functions\";\nimport \"firebase/storage\";\nimport \"firebase/remote-config\";\nimport CONSTANTS from '../../App.constant';\n\nconst Authmiddleware = (superProps) => {\n\tconst Layout = superProps?.layout;\n\tconst Component = superProps?.component;\n\tconst path = superProps?.path;\n\treturn (\n\t\t<Route\n\t\t\tpath={path}\n\t\t\trender={(props) => {\n\t\t\t\n\t\t\t\t// here you can apply condition\n\t\t\t\tif (!localStorage.getItem(CONSTANTS.SESSIONSTORE)) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Redirect to={{ pathname: \"/store/login\", state: { from: props.location } }} />\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn <Layout>\n\t\t\t\t\t<Component {...props} />\n\t\t\t\t</Layout>;\n\t\t\t}}\n\t\t/>\n\t);\n}\n\nexport default withRouter(withTranslation()(stateWrapper(Authmiddleware)));\n\n","/Users/Tolulopeodueke/Developer/jumga-client/src/containers/index.js",[],"/Users/Tolulopeodueke/Developer/jumga-client/src/components/Layout/index.js",["267"],"import React, { Component } from \"react\";\n\nimport { withRouter } from \"react-router-dom\";\nimport stateWrapper from \"../../containers/provider\";\n\n// Layout Related Components\nimport Sidebar from \"./Sidebar\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\n\nclass Layout extends Component {\n  constructor(props) {\n    super(props);\n    this.layoutProps = props.layoutStore;\n    this.state = {\n      isMobile: /iPhone|iPad|iPod|Android/i.test(navigator.userAgent)\n    };\n  }\n\n  capitalizeFirstLetter = string => {\n    return string.charAt(1).toUpperCase() + string.slice(2);\n  };\n\n  componentDidMount() {\n\n    if (this.layoutProps.state.isPreloader === true) {\n      document.getElementById('preloader').style.display = \"block\";\n      document.getElementById('status').style.display = \"block\";\n\n      setTimeout(function () {\n\n        document.getElementById('preloader').style.display = \"none\";\n        document.getElementById('status').style.display = \"none\";\n\n      }, 2500);\n    }\n    else {\n      document.getElementById('preloader').style.display = \"none\";\n      document.getElementById('status').style.display = \"none\";\n    }\n\n    // Scroll Top to 0\n    window.scrollTo(0, 0);\n    let currentage = this.capitalizeFirstLetter(this.props.location.pathname);\n\n    document.title =\n      currentage + \" | Jumga\";\n\n      if (this.layoutProps.state.leftSideBarTheme) {\n        this.layoutProps._changeSidebarTheme(this.layoutProps.state.leftSideBarTheme);\n      }\n  \n      if (this.layoutProps.state.layoutWidth) {\n        this.layoutProps._changeLayoutWidth(this.layoutProps.state.layoutWidth);\n      }\n  \n      if (this.layoutProps.state.leftSideBarType) {\n        this.layoutProps._changeSidebarType(this.layoutProps.state.leftSideBarType);\n      }\n      if (this.layoutProps.state.topbarTheme) {\n        this.layoutProps._changeTopbarTheme(this.layoutProps.state.topbarTheme);\n      }\n\n      if(this.state.isMobile)\n        this.toogleMenuCallback();\n      \n      window.addEventListener(\"resize\", () => {\n        this.setState({\n          isMobile: /iPhone|iPad|iPod|Android/i.test(navigator.userAgent)\n        });\n        this.toogleMenuCallback();\n      });\n  }\n\n\n  toogleMenuCallback = () => {\n    this.layoutProps._toggleLeftmenu(!this.layoutProps.state.leftMenu);\n    if (this.state.isMobile != true) {\n      this.layoutProps.changeLeftSidebarType({ payload: { sidebarType: \"default\", isMobile: this.layoutProps.state.leftMenu}});\n      this.layoutProps._changeSidebarType(\"default\", this.layoutProps.state.leftMenu);\n    } else {\n      this.layoutProps._changeSidebarType(\"condensed\", this.layoutProps.state.leftMenu);\n      this.layoutProps.changeLeftSidebarType({ payload: { sidebarType: \"condensed\", isMobile: this.layoutProps.state.leftMenu}});\n      if (document.body) {\n        document.body.classList.add('sidebar-enable');\n        document.body.classList.add('vertical-collpsed');\n      } \n    } \n  }\n\n  render() {\n    \n    return (\n      <React.Fragment>\n        <div id=\"preloader\">\n          <div id=\"status\">\n            <div className=\"spinner-chase\">\n              <div className=\"chase-dot\"></div>\n              <div className=\"chase-dot\"></div>\n              <div className=\"chase-dot\"></div>\n              <div className=\"chase-dot\"></div>\n              <div className=\"chase-dot\"></div>\n              <div className=\"chase-dot\"></div>\n            </div>\n          </div>\n        </div>\n\n        <div id=\"layout-wrapper\">\n          <Header/>\n          <Sidebar \n            theme={this.layoutProps.state.leftSideBarTheme}\n            type={this.layoutProps.state.leftSideBarType}\n            isMobile={this.state.isMobile} \n          />\n          <div className=\"main-content\">\n            {this.props.children}\n          </div>\n          <Footer />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(stateWrapper(Layout));\n","/Users/Tolulopeodueke/Developer/jumga-client/src/components/UserLayout/index.js",[],"/Users/Tolulopeodueke/Developer/jumga-client/src/containers/provider.js",["268"],"import React from \"react\";\nimport { Subscribe } from \"unstated\";\nimport allStores from \"./index\";\n\nexport default WrappedComponent => {\n  \n  const subscribeWrapper = ({ ...props }) => (\n\n    <Subscribe to={allStores}>\n        {(\n          layoutStore,\n          userStore,\n          masterStore,\n          paymentStore\n        ) => (\n          <WrappedComponent\n            layoutStore={layoutStore}\n            userStore={userStore}\n            masterStore={masterStore}\n            paymentStore={paymentStore}\n            {...props}\n          />\n        )}\n    </Subscribe>\n\n  )\n\n  return subscribeWrapper;\n};\n","/Users/Tolulopeodueke/Developer/jumga-client/src/App.constant.js",[],"/Users/Tolulopeodueke/Developer/jumga-client/src/components/StoreHeader.js",["269","270","271"],"import React, { useState, useEffect } from 'react';\nimport * as _ from 'lodash';\n\nimport { Row, Col } from \"reactstrap\";\n\nimport { Link, withRouter } from \"react-router-dom\";\n\n// Reactstrap\nimport { Dropdown, DropdownToggle, DropdownMenu } from \"reactstrap\";\n\n// Import menuDropdown\nimport NotificationDropdown from \"./CommonForBoth/TopbarDropdown/NotificationDropdown\";\nimport ProfileMenu from \"./CommonForBoth/TopbarDropdown/ProfileMenu\";\n\nimport logo from \"../assets/images/jumga basket logo.png\";\nimport logoDark from \"../assets/images/jumga logo.png\";\nimport megamenuImg from \"../assets/images/megamenu-img.png\";\n\n\n\n\n//i18n\nimport { withTranslation } from 'react-i18next';\nimport stateWrapper from '../containers/provider';\n\n\nconst StoreHeader = (props) => {\n\n  const [search, setsearch] = useState(false);\n  const [searchtext, setSearchText] = useState('');\n  const [megaMenuDrp, setmegaMenu] = useState(false);\n  const [cat, setCat] = useState({});\n  const [socialDrp, setsocialDrp] = useState(false);\n  const searchFor = (e) => {\n    e.preventDefault();\n  }\n\n  const trimAndReplaceSpaces = (text) => {\n      return String(text).trim().replace(/\\s/g, '-').toLowerCase();\n  }\n\n  useEffect(() => {\n      let x = async () => await props.masterStore.getAllCategories();\n      x();\n  }, []);\n\n  useEffect(() => {\n    setCat(props.masterStore.state.categories);\n  }, [props.masterStore.state.categories]);\n\n      return (\n       <React.Fragment>\n        <header id=\"page-topbar\">\n          <div className=\"navbar-header\">\n            <div className=\"d-flex\">\n              <div className=\"navbar-brand-box\" style={{position: 'relative', left: -30, paddingLeft: 0}}>\n                <Link to=\"/\" className=\"logo logo-dark\">\n                  <span className=\"logo-sm\">\n                    <img src={logo} alt=\"\" height=\"30\" />\n                  </span>\n                  <span className=\"logo-lg\">\n                    <img src={logoDark} alt=\"\" height=\"30\" />\n                  </span>\n                </Link>\n              </div>\n\n              <form onSubmit={searchFor} className=\"app-search d-none d-lg-block\">\n                <div className=\"position-relative\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    onChange={e => setSearchText(e.target.value)}\n                    value={searchtext}\n                    placeholder=\"Search...\"\n                  />\n                  <span className=\"bx bx-search-alt\"></span>\n                </div>\n              </form>\n\n              <Dropdown className=\"dropdown-mega d-none d-lg-block ml-2\" isOpen={megaMenuDrp} toggle={() => { setmegaMenu( !megaMenuDrp ) }}>\n                <DropdownToggle className=\"btn header-item waves-effect\" caret tag=\"button\"> \n              {props.t('Categories')}  {\" \"}\n                  <i className=\"mdi mdi-chevron-down\"></i></DropdownToggle>\n                <DropdownMenu className=\"dropdown-megamenu\">\n                    {\n                        <Row>\n                            <Col sm={10}>  \n                                {\n                                    Object.keys(cat).map((item, id) => {\n                                        return (\n                                            <div key={id} className=\"list-unstyled megamenu-list\">\n                                                <Link to={`/categories/${trimAndReplaceSpaces(item)}`}>\n                                                    <h5 className=\"font-size-14 mt-0\">{props.t(item)}</h5>\n                                                </Link>\n                                                {\n                                                    Object.keys(cat[item]).map((item2, idx) => {\n                                                        let x = cat[item];\n                                                        return (\n                                                            <div key={idx} style={{float: 'left', margin: 20}}>\n                                                                <Link to={`/categories/${trimAndReplaceSpaces(item2)}`}><h6 className=\"font-size-14 mt-0\">{props.t(item2)}</h6></Link>\n                                                                <div style={{width: '100%', borderColor: 'black', borderWidth: 1, height: 1, backgroundColor: 'slategray'}}>&nbsp;</div>\n                                                                {_.isArray(x[item2])? x[item2].map((val, valKey) => {\n                                                                    return (\n                                                                        <Link key={valKey} to={`/categories/${trimAndReplaceSpaces(val)}`}><div className=\"font-size-14\">{val}</div></Link>\n                                                                    )\n                                                                }) : <></>}\n                                                            </div>\n                                                        )\n                                                    })\n                                                }\n                                            </div>\n                                        )\n                                    })\n                                }\n                            </Col>\n                            <Col sm={2}>\n                                <Row>\n                                    <Col sm={5}>\n                                        <div>\n                                            <img\n                                            src={megamenuImg}\n                                            alt=\"\"\n                                            className=\"img-fluid mx-auto d-block\"\n                                            />\n                                        </div>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                    }\n                </DropdownMenu>\n              </Dropdown>\n            </div>\n            <div className=\"d-flex\">\n                <div className=\"dropdown d-inline-block d-lg-none ml-2\">\n                    <button\n                        type=\"button\"\n                        className=\"btn header-item noti-icon waves-effect\"\n                        id=\"page-header-search-dropdown\"\n                        onClick={() => { setsearch(!search); }}>\n                        <i className=\"mdi mdi-magnify\"></i>\n                    </button>\n                    <div\n                    className={search ? \"dropdown-menu dropdown-menu-lg dropdown-menu-right p-0 show\" : \"dropdown-menu dropdown-menu-lg dropdown-menu-right p-0\"}\n                    aria-labelledby=\"page-header-search-dropdown\"\n                    >\n                    <form className=\"p-3\" onSubmit={searchFor}>\n                        <div className=\"form-group m-0\">\n                        <div className=\"input-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder={props.t('Search') + \"...\"}\n                                value={searchtext}\n                                onChange={e => setSearchText(e.target.value)}\n                                aria-label=\"Recipient's username\"\n                            />\n                            <div className=\"input-group-append\">\n                                <button className=\"btn btn-primary\" type=\"submit\">\n                                    <i className=\"mdi mdi-magnify\"></i>\n                                </button>\n                            </div>\n                        </div>\n                        </div>\n                    </form>\n                    </div>\n                </div>\n\n              <NotificationDropdown />\n              <ProfileMenu />\n            </div>\n          </div>\n        </header>\n      </React.Fragment>\n      );\n    }\n\nexport default withRouter(withTranslation()(stateWrapper(StoreHeader)));\n\n","/Users/Tolulopeodueke/Developer/jumga-client/src/pages/Authentication/Create.js",["272","273","274","275","276","277","278","279","280"],"import React, { useState, useRef, useEffect } from 'react';\nimport _ from 'lodash';\nimport { withRouter, Link } from 'react-router-dom';\nimport { Row, Col, CardBody, Card, Alert,Container, Label } from \"reactstrap\";\nimport ErrorMessage from '../../components/Common/ErrorMessage';\nimport { AvForm, AvField, AvGroup, AvInput, AvFeedback, AvRadioGroup, AvRadio, AvCheckboxGroup, AvCheckbox } from 'availity-reactstrap-validation';\nimport { withTranslation } from 'react-i18next';\nimport stateWrapper from \"../../containers/provider\";\nimport \"../../styles/Login.scss\";\nimport logo from \"../../assets/images/jumga logo.png\";\nimport team1 from \"../../assets/images/team1.png\";\nimport team2 from \"../../assets/images/team2.png\";\nimport team3 from \"../../assets/images/team3.png\";\nimport team4 from \"../../assets/images/team4.png\";\nimport team5 from \"../../assets/images/team5.png\";\nimport stadium from \"../../assets/images/stadium.jpg\";\nimport instance from '../../helpers/axiosly';\nimport { configParams } from '../../config';\n\n/**\n * TODO: Add terms and condition\n */\n const Create = (props) => {\n    const [state, setState] = useState({\n        loading: false,\n        error: {\n            email: 'Email is required',\n            password: 'Password is required',\n            username: 'Store name is required',\n            watch: {\n                email: '',\n                password: '',\n                username: ''\n            }\n        },\n        email: '',\n        password: '',\n        username: '',\n        doesStoreNameExists: true,\n        doesEmailExists: true,\n        imageFile: null,\n        imageSrc: null,\n        userType: 'Business',\n        postSubmitError: false,\n        postSubmitMessage: ''\n    });\n\n    const form = useRef();\n    const useImageRef = useRef();\n    const callImageInput = () => {\n        document.getElementById(\"imageFile\").click();\n    }\n  async function  handleValidSubmit(event, values) {\n    event.preventDefault();\n    let doesEmailExists = await processEmail(state.email);\n    // let doesStoreNameExists = await processStoreName(state.username);\n\n\n    if (doesEmailExists) return;\n    let newValues = {\n        ...values,\n        imageFile: state.imageFile,\n        userType: state.userType,\n        downloadURL: null\n    }\n\n    let create = async () => {\n            console.log(newValues);\n            await props.userStore.signUp(newValues, checkError);\n            props.history.push('/store/front');\n    }\n\n    if (_.isNull(newValues.imageFile)) {\n        await create();\n        return;\n    }\n    let snaps = await props.userStore.uploadImage(newValues.imageFile, e => {});\n    console.log(snaps);\n    newValues.downloadURL = snaps;\n    await create();\n    return;\n  }\n  const showPreviewAndSetValue = (e) => {\n    if(e.target.files && e.target.files[0]) {\n        let imageFile = e.target.files[0];\n        console.log(imageFile);\n        if (String(imageFile.type).includes(\"image\")) {\n            const reader = new FileReader();\n            reader.onload = x => {\n                setState({\n                    ...state,\n                    imageFile,\n                    imageSrc: x.target.result\n                })\n            }\n            reader.readAsDataURL(imageFile);\n        } else {\n            setState({\n                ...state,\n                imageFile: null,\n                imageSrc: null\n            })\n        }\n    } else {\n        setState({\n            ...state,\n            imageFile: null,\n            imageSrc: null\n        })\n    }\n  }\n  const checkError =(e) => {\n    console.log(e);\n    setState({\n        ...state,\n        postSubmitError: true,\n        postSubmitMessage: e\n    });\n  }\n  const processEmail = async (e) => {\n\n    let checker = await props.userStore.checkIfEmailExists(e);\n    if (checker?.status) {\n        let error = state.error;\n        error.watch = {\n            ...error.watch,\n            email: `This email already exists`\n        }\n        await setState({\n            ...state, \n            doesEmailExists: checker?.status, \n            error\n        });\n        return checker?.status;\n    }\n\n    await setState({ ...state, doesEmailExists: checker?.status});\n    return checker?.status;\n  }\n\n  useEffect(() => {\n        if (state.postSubmitError) {\n            setTimeout(() => {setState({...state, postSubmitError: false, postSubmitMessage: ''})}, 10000);\n        }\n    }, [state.postSubmitError]);\n    return (\n        <React.Fragment> \n            <div onClick={() => {setState({...state, postSubmitMessage: '', postSubmitError: false})}}>\n                <ErrorMessage isError={state.postSubmitError} message={state.postSubmitMessage} />\n            </div>\n            <div>\n                <Link to=\"/\">\n                    <img className=\"logo d-none d-md-inline-block\" src={logo} alt=\"logo\" />\n                    <img className=\"logo-small d-md-none\" src={logo} alt=\"logo\" />\n                </Link>\n            </div>\n            <div className=\"account-pages my-5 pt-sm-5\">\n                <Container>\n                    <div>\n                        <img className=\"avatar  team1 d-none d-md-inline-block\" src={team1} alt=\"team1\" />\n                        <img className=\"avatar team2 d-none d-md-inline-block\" src={team2} alt=\"team2\" />\n                        <img className=\"avatar team3 d-none d-md-inline-block\" src={team3} alt=\"team3\" />\n                        <img className=\"avatar team4 d-none d-md-inline-block\" src={team4} alt=\"team4\" />\n                        <img className=\"avatar team5 d-none d-md-inline-block\" src={team5} alt=\"team5\" />\n                        <img className=\"avatar  team1-small d-md-none\" src={team1} alt=\"team1\" />\n                        <img className=\"avatar team2-small d-md-none\" src={team2} alt=\"team2\" />\n                        <img className=\"avatar team3-small d-md-none\" src={team3} alt=\"team3\" />\n                        <img className=\"avatar team4-small d-md-none\" src={team4} alt=\"team4\" />\n                        <img className=\"avatar team5-small d-md-none\" src={team5} alt=\"team5\" />\n                    </div>\n                    <Row className=\"justify-content-center overflow-hidden\">\n                        <Col className=\"box\" style={{padding:0}} lg={9} md={12} sm={12}>\n                            <Row>\n                                <Col style={{padding: 30}} md={6} lg={4} xl={6} sm={12}>\n                                        <Card className=\"overflow-hidden border-0\">\n                                            <div>\n                                                <Row>\n                                                    <Col className=\"col-12\">\n                                                        <div className=\"text-primary text-center text-dark\">\n                                                            <h5 className=\"text-primary text-dark\">JOIN US!</h5>\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n                                            <CardBody className=\"pt-0 border-0\">\n                                                <div className=\"p-2\">\n\n                                                    <AvForm ref={form} className=\"form-horizontal\" onValidSubmit={(e,v) => { handleValidSubmit(e,v) }}>\n                                                        <div className=\"business-logo\">Business logo</div>\n                                                        <center  className=\"avatar-container\">\n                                                            <div \n                                                                onClick={callImageInput} \n                                                                className=\"user-avatar\"\n                                                                style={{\n                                                                    backgroundImage: `url(${state.imageSrc != null ? state.imageSrc : stadium})`,\n                                                                    backgroundSize: 'cover',\n                                                                    backgroundRepeat: 'no-repeat'\n                                                                }}\n                                                            >\n                                                                <svg \n                                                                    version=\"1.1\" \n                                                                    id=\"Layer_1\" \n                                                                    xmlns=\"http://www.w3.org/2000/svg\" \n                                                                    x=\"0px\" y=\"0px\"\n                                                                    viewBox=\"0 0 512 512\" \n                                                                    className=\"avatar-icon\"\n                                                                >\n                                                                    <g>\n                                                                        <g>\n                                                                            <g>\n                                                                                <circle cx=\"256\" cy=\"277.333\" r=\"106.667\"/>\n                                                                                <path d=\"M469.333,106.667h-67.656c-8.552,0-16.583-3.333-22.635-9.375l-39-39c-10.073-10.073-23.469-15.625-37.719-15.625\n                                                                                    h-92.646c-14.25,0-27.646,5.552-37.719,15.625l-39,39c-6.052,6.042-14.083,9.375-22.635,9.375H42.667\n                                                                                    C19.135,106.667,0,125.802,0,149.333v277.333c0,23.531,19.135,42.667,42.667,42.667h426.667\n                                                                                    c23.531,0,42.667-19.135,42.667-42.667V149.333C512,125.802,492.865,106.667,469.333,106.667z M256,405.333\n                                                                                    c-70.583,0-128-57.417-128-128s57.417-128,128-128s128,57.417,128,128S326.583,405.333,256,405.333z M426.667,213.333\n                                                                                    c-11.76,0-21.333-9.573-21.333-21.333s9.573-21.333,21.333-21.333S448,180.24,448,192S438.427,213.333,426.667,213.333z\"/>\n                                                                            </g>\n                                                                        </g>\n                                                                    </g>\n                                                                    <g>\n                                                                    </g>\n                                                                    <g>\n                                                                    </g>\n                                                                    <g>\n                                                                    </g>\n                                                                    <g>\n                                                                    </g>\n                                                                    <g>\n                                                                    </g>\n                                                                    <g>\n                                                                    </g>\n                                                                    <g>\n                                                                    </g>\n                                                                    <g>\n                                                                    </g>\n                                                                    <g>\n                                                                    </g>\n                                                                    <g>\n                                                                    </g>\n                                                                    <g>\n                                                                    </g>\n                                                                    <g>\n                                                                    </g>\n                                                                    <g>\n                                                                    </g>\n                                                                    <g>\n                                                                    </g>\n                                                                    <g>\n                                                                    </g>\n                                                                    </svg>\n\n                                                            </div>\n                                                        </center>\n\n                                                        <AvGroup>\n                                                            <Label className=\"form-label\" for=\"email\">EMAIL</Label>\n                                                            <AvInput\n                                                                onChange={e =>  setState({\n                                                                    ...state, \n                                                                    email: e.target.value,\n                                                                    error: {\n                                                                        ...state.error,\n                                                                        watch: {\n                                                                            ...state.error.watch,\n                                                                            email: ''\n                                                                        }\n                                                                    }\n                                                                })} \n                                                                name=\"email\" \n                                                                id=\"email\" \n                                                                required \n                                                                type=\"email\"\n                                                            />\n                                                            <AvFeedback><i className=\"error-field\">{state.error.email}</i></AvFeedback>\n                                                            <i className=\"error-field\">{state.error.watch.email}</i>\n                                                        </AvGroup>\n\n                                                        <AvGroup>\n                                                            <Label className=\"form-label\" for=\"username\">FULL NAME</Label>\n                                                            <AvInput \n                                                                onChange={e => setState({\n                                                                    ...state, \n                                                                    username: e.target.value,\n                                                                    error: {\n                                                                        ...state.error,\n                                                                        watch: {\n                                                                            ...state.error.watch,\n                                                                            username: ''\n                                                                        }\n                                                                    }\n                                                                })} \n                                                                validate={{\n                                                                    minLength: { value: 3, errorMessage: \"Username must be more than 3 letters\"}\n                                                                }}\n                                                                name=\"username\" \n                                                                id=\"username\" \n                                                                required\n                                                            />\n                                                            <AvFeedback>\n                                                                <i className=\"error-field\">{state.error.username}</i>\n                                                            </AvFeedback>\n                                                            <i className=\"error-field\">{state.error.watch.username}</i>\n                                                        </AvGroup>\n\n                                                        <AvGroup>\n                                                            <Label className=\"form-label\" for=\"password\">PASSWORD</Label>\n                                                            <AvInput \n                                                                onChange={e => \n                                                                    setState({\n                                                                        ...state, \n                                                                        password: e.target.value,\n                                                                        error: {\n                                                                            ...state.error,\n                                                                            watch: {\n                                                                                ...state.error.watch,\n                                                                                password: ''\n                                                                            }\n                                                                        }\n                                                                    })\n                                                                } \n                                                                validate={{\n                                                                    minLength: { value: 6, errorMessage: \"Password must be more than 5 letters\"}\n                                                                }}\n                                                                name=\"password\" \n                                                                id=\"password\" \n                                                                required \n                                                                type=\"password\"\n                                                            />\n                                                            <AvFeedback><i className=\"error-field\">{state.error.password}</i></AvFeedback>\n                                                            <i className=\"error-field\">{state.error.watch.password}</i>\n                                                        </AvGroup>\n                                                            \n                                                        <input\n                                                            ref={useImageRef} \n                                                            onChange={showPreviewAndSetValue} \n                                                            name=\"imageFile\" \n                                                            id=\"imageFile\"\n                                                            type=\"file\"\n                                                            accept=\"image/*\"\n                                                            hidden\n                                                        />\n\n                                                        <div className=\"mt-3\">\n                                                            <button\n                                                                disabled={state.loading} className=\"btn btn-primary btn-block waves-effect waves-light btn-dark\" type=\"submit\"\n                                                                style={{backgroundColor: '#EE5C43', borderColor: '#EE5C43'}}\n                                                            >\n                                                                Submit\n                                                            </button>\n                                                        </div>\n                                                        <div className=\"mt-3 link-ext\">\n                                                            By clicking the “Submit” button, you agree to Jumga’s <Link to=\"/terms-and-condition\" className=\"link text-pprimary\">terms of acceptable use</Link>.\n                                                        </div>\n                                                        <div className=\"mt-4 link-ext\">\n                                                            Have an account?<Link to=\"/store/login\" className=\"link text-primary\">Login</Link>\n                                                        </div>\n                                                    </AvForm>\n                                                </div>\n                                            </CardBody>\n                                        </Card>\n                                    </Col> \n                                <Col md={6} lg={6} xl={6} sm={12}>\n                                    <img className=\"stadium stadium-create\" src={stadium} alt=\"stadium\" />\n                                    <div className=\"writing\">\n                                        <div className=\"text-to-show\">\n                                            A market place for all\n                                        </div>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        </React.Fragment>\n     );\n    }\n\nexport default withRouter(withTranslation()(stateWrapper(Create)))","/Users/Tolulopeodueke/Developer/jumga-client/src/pages/Home/Home.js",["281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296"],"import React, { useState, useEffect } from 'react';\nimport _ from 'lodash';\nimport { Container, Row, Col, Button, Card, CardBody, CardTitle, Modal, ModalHeader, ModalBody, ModalFooter, Media, Table } from \"reactstrap\";\nimport Breadcrumb from '../../components/Common/Breadcrumb';\nimport { withRouter, Link } from 'react-router-dom';\nimport { withTranslation } from 'react-i18next';\nimport \"./home.scss\";\n\n const Home = (props) => {\n        return (\n            <React.Fragment>\n                <div className=\"page-content\">\n                    <Container fluid>\n                        <Breadcrumb title={props.t('Home')} breadcrumbItem={''} />\n                    </Container>\n                </div>\n            </React.Fragment>\n        );\n    }\n\nexport default withRouter(withTranslation()(Home))\n","/Users/Tolulopeodueke/Developer/jumga-client/src/pages/Authentication/Login.js",["297","298","299","300","301","302","303","304"],"import React, { useState, useRef, useEffect } from 'react';\nimport _ from 'lodash';\nimport { withRouter, Link } from 'react-router-dom';\nimport { Row, Col, CardBody, Card, Alert,Container, Label } from \"reactstrap\";\nimport { withTranslation } from 'react-i18next';\nimport { AvForm, AvField, AvGroup, AvInput, AvFeedback, AvRadioGroup, AvRadio, AvCheckboxGroup, AvCheckbox } from 'availity-reactstrap-validation';\nimport \"../../styles/Login.scss\";\nimport logo from \"../../assets/images/jumga logo.png\";\nimport team1 from \"../../assets/images/team1.png\";\nimport team2 from \"../../assets/images/team2.png\";\nimport team3 from \"../../assets/images/team3.png\";\nimport team4 from \"../../assets/images/team4.png\";\nimport team5 from \"../../assets/images/team5.png\";\nimport stadium from \"../../assets/images/stadium.jpg\";\nimport stateWrapper from '../../containers/provider';\nimport ErrorMessage from '../../components/Common/ErrorMessage';\n\n\n const Login = (props) => {\n    const [state, setState] = useState({\n        loading: false,\n        doesEmailExists: true,\n        postSubmitError: false,\n        postSubmitMessage: '',\n        error: {\n            email: 'Email is required',\n            password: 'Password is required',\n            watch: {\n                email: '',\n                password: ''\n            }\n        },\n        email: '',\n        password: ''\n    });\n    const form = useRef();\n    async function  handleValidSubmit(event, values) {\n        event.preventDefault();\n        console.log(values);\n        let doesEmailExists = await processEmail(state.email);\n        if (!doesEmailExists) return;\n        let done = await props.userStore.signIn(values, props);\n        if (!done.status) {\n            await checkError(done?.message);\n            return;\n        }\n\n        props.history.push('/store/front');\n    }\n\n    // useEffect(() => {\n    //     props.userStore.logOut(props);\n    //     console.log('jerr')\n    // }, [])\n\n    useEffect(() => {\n        if (state.postSubmitError) {\n            setTimeout(() => {setState({...state, postSubmitError: false, postSubmitMessage: ''})}, 10000);\n        }\n    }, [state.postSubmitError]);\n\n    const processEmail = async (e) => {\n\n        let checker = await props.userStore.checkIfEmailExists(e);\n        if (!checker?.status) {\n            let error = state.error;\n            error.watch = {\n                ...error.watch,\n                email: `This email does not exist`\n            }\n            await setState({\n                ...state, \n                doesEmailExists: !checker?.status, \n                error\n            });\n            return checker?.status;\n        }\n    \n        await setState({ ...state, doesEmailExists: !checker?.status});\n        return checker?.status;\n      }\n\n    const checkError = async (e) => {\n        await setState({\n            ...state,  \n            postSubmitError: true,\n            postSubmitMessage: e,\n        });\n    }\n\n    return (\n        <React.Fragment>  \n            <div onClick={() => {setState({...state, postSubmitMessage: '', postSubmitError: false})}}>\n                <ErrorMessage isError={state.postSubmitError} message={state.postSubmitMessage} />\n            </div>\n            <div>\n                <Link to=\"/\">\n                    <img className=\"logo d-none d-md-inline-block\" src={logo} alt=\"logo\" />\n                    <img className=\"logo-small d-md-none\" src={logo} alt=\"logo\" />\n                </Link>\n            </div>\n            <div className=\"account-pages my-5 pt-sm-5\">\n                <Container>\n                    <div>\n                        <img className=\"avatar  team1 d-none d-md-inline-block\" src={team1} alt=\"team1\" />\n                        <img className=\"avatar team2 d-none d-md-inline-block\" src={team2} alt=\"team2\" />\n                        <img className=\"avatar team3 d-none d-md-inline-block\" src={team3} alt=\"team3\" />\n                        <img className=\"avatar team4 d-none d-md-inline-block\" src={team4} alt=\"team4\" />\n                        <img className=\"avatar team5 d-none d-md-inline-block\" src={team5} alt=\"team5\" />\n                        <img className=\"avatar  team1-small d-md-none\" src={team1} alt=\"team1\" />\n                        <img className=\"avatar team2-small d-md-none\" src={team2} alt=\"team2\" />\n                        <img className=\"avatar team3-small d-md-none\" src={team3} alt=\"team3\" />\n                        <img className=\"avatar team4-small d-md-none\" src={team4} alt=\"team4\" />\n                        <img className=\"avatar team5-small d-md-none\" src={team5} alt=\"team5\" />\n                    </div>\n                    <Row className=\"justify-content-center overflow-hidden\">\n                        <Col className=\"box\" style={{padding:0}} lg={9} md={12} sm={12}>\n                            <Row>\n                                <Col style={{padding: 30}} md={6} lg={4} xl={6} sm={12}>\n                                        <Card className=\"overflow-hidden border-0\">\n                                            <div>\n                                                <Row>\n                                                    <Col className=\"col-12\">\n                                                        <div className=\"text-primary text-center text-dark\">\n                                                            <h5 className=\"text-primary text-dark\">Welcome back !</h5>\n                                                            <p>We're so excited to see you again!</p>\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n                                            <CardBody className=\"pt-0 border-0\">\n                                                <div className=\"p-2\">\n\n                                                    <AvForm ref={form} className=\"form-horizontal\" onValidSubmit={(e,v) => { handleValidSubmit(e,v) }}>\n                                                        <AvGroup>\n                                                            <Label className=\"form-label\" for=\"email\">EMAIL</Label>\n                                                            <AvInput \n                                                                onChange={e =>\n                                                                    setState({\n                                                                    ...state, \n                                                                    email: e.target.value,\n                                                                    error: {\n                                                                        ...state.error,\n                                                                        watch: {\n                                                                            ...state.error.watch,\n                                                                            email: ''\n                                                                        }\n                                                                    }\n                                                                })} \n                                                                name=\"email\" \n                                                                id=\"email\" \n                                                                required \n                                                                type=\"email\"\n                                                            />\n                                                            <AvFeedback><i className=\"error-field\">{state.error.email}</i></AvFeedback>\n                                                            <i className=\"error-field\">{state.error.watch.email}</i>\n                                                        </AvGroup>\n\n                                                        <AvGroup>\n                                                            <Label className=\"form-label\" for=\"password\">PASSWORD</Label>\n                                                            <AvInput \n                                                                onChange={e => \n                                                                    setState({\n                                                                        ...state, \n                                                                        password: e.target.value,\n                                                                        error: {\n                                                                            ...state.error,\n                                                                            watch: {\n                                                                                ...state.error.watch,\n                                                                                password: ''\n                                                                            }\n                                                                        }\n                                                                    })\n                                                                } \n                                                                name=\"password\" \n                                                                validate={{\n                                                                    minLength: { value: 6, errorMessage: \"Password must be more than 5 letters\"}\n                                                                }}\n                                                                id=\"password\" \n                                                                required \n                                                                type=\"password\"\n                                                            />\n                                                            <AvFeedback><i className=\"error-field\">{state.error.password}</i></AvFeedback>\n                                                            <i className=\"error-field\">{state.error.watch.password}</i>\n                                                        </AvGroup>\n\n                                                        <div className=\"mt-4\">\n                                                            <Link to=\"/forgot-password\" className=\"text-muted text-primary link\"><i className=\"mdi mdi-lock mr-1\"></i> Forgot your password?</Link>\n                                                        </div>\n                                                        <div className=\"mt-3\">\n                                                            <button\n                                                                disabled={state.loading} className=\"btn btn-primary btn-block waves-effect waves-light btn-dark\" type=\"submit\" style={{backgroundColor: '#EE5C43', borderColor: '#EE5C43'}}>\n                                                                Login\n                                                            </button>\n                                                        </div>\n                                                        <div className=\"mt-4 link-ext\">\n                                                            Need an account?<Link to=\"/store/register\" className=\"link text-primary\"> Register</Link>\n                                                        </div>\n                                                    </AvForm>\n                                                </div>\n                                            </CardBody>\n                                        </Card>\n                                    </Col> \n                                <Col md={6} lg={6} xl={6} sm={12}>\n                                    <img className=\"stadium\" src={stadium} alt=\"stadium\" />\n                                    <div className=\"writing\">\n                                        <div className=\"text-to-show\">\n                                            A market place for all\n                                        </div>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        </React.Fragment>\n     );\n    }\n\nexport default withRouter(withTranslation()(stateWrapper(Login)))","/Users/Tolulopeodueke/Developer/jumga-client/src/pages/Authentication/LoginX.js",["305","306","307","308","309","310","311","312"],"import React, { useState, useRef, useEffect } from 'react';\nimport _ from 'lodash';\nimport { withRouter, Link } from 'react-router-dom';\nimport { Row, Col, CardBody, Card, Alert,Container, Label } from \"reactstrap\";\nimport { withTranslation } from 'react-i18next';\nimport { AvForm, AvField, AvGroup, AvInput, AvFeedback, AvRadioGroup, AvRadio, AvCheckboxGroup, AvCheckbox } from 'availity-reactstrap-validation';\nimport \"../../styles/Login.scss\";\nimport logo from \"../../assets/images/jumga logo.png\";\nimport team1 from \"../../assets/images/team1.png\";\nimport team2 from \"../../assets/images/team2.png\";\nimport team3 from \"../../assets/images/team3.png\";\nimport team4 from \"../../assets/images/team4.png\";\nimport team5 from \"../../assets/images/team5.png\";\nimport stadium from \"../../assets/images/stadium.jpg\";\nimport stateWrapper from '../../containers/provider';\nimport ErrorMessage from '../../components/Common/ErrorMessage';\n\n\n const Login = (props) => {\n    const [state, setState] = useState({\n        loading: false,\n        doesEmailExists: true,\n        postSubmitError: false,\n        postSubmitMessage: '',\n        error: {\n            email: 'Email is required',\n            password: 'Password is required',\n            watch: {\n                email: '',\n                password: ''\n            }\n        },\n        email: '',\n        password: ''\n    });\n    const form = useRef();\n    async function  handleValidSubmit(event, values) {\n        event.preventDefault();\n        console.log(values);\n        let doesEmailExists = await processEmail(state.email);\n        if (!doesEmailExists) return;\n        let done = await props.userStore.signIn(values, props);\n        if (!done.status) {\n            await checkError(done?.message);\n            return;\n        }\n\n        props.history.push('/');\n    }\n\n    // useEffect(() => {\n    //     props.userStore.logOut(props);\n    //     console.log('jerr')\n    // }, [])\n\n    useEffect(() => {\n        if (state.postSubmitError) {\n            setTimeout(() => {setState({...state, postSubmitError: false, postSubmitMessage: ''})}, 10000);\n        }\n    }, [state.postSubmitError]);\n\n    const processEmail = async (e) => {\n\n        let checker = await props.userStore.checkIfEmailExists(e);\n        if (!checker?.status) {\n            let error = state.error;\n            error.watch = {\n                ...error.watch,\n                email: `This email does not exist`\n            }\n            await setState({\n                ...state, \n                doesEmailExists: !checker?.status, \n                error\n            });\n            return checker?.status;\n        }\n    \n        await setState({ ...state, doesEmailExists: !checker?.status});\n        return checker?.status;\n      }\n\n    const checkError = async (e) => {\n        await setState({\n            ...state,  \n            postSubmitError: true,\n            postSubmitMessage: e,\n        });\n    }\n\n    return (\n        <React.Fragment>  \n            <div onClick={() => {setState({...state, postSubmitMessage: '', postSubmitError: false})}}>\n                <ErrorMessage isError={state.postSubmitError} message={state.postSubmitMessage} />\n            </div>\n            <div>\n                <Link to=\"/\">\n                    <img className=\"logo d-none d-md-inline-block\" src={logo} alt=\"logo\" />\n                    <img className=\"logo-small d-md-none\" src={logo} alt=\"logo\" />\n                </Link>\n            </div>\n            <div className=\"account-pages my-5 pt-sm-5\">\n                <Container>\n                    <div>\n                        <img className=\"avatar  team1 d-none d-md-inline-block\" src={team1} alt=\"team1\" />\n                        <img className=\"avatar team2 d-none d-md-inline-block\" src={team2} alt=\"team2\" />\n                        <img className=\"avatar team3 d-none d-md-inline-block\" src={team3} alt=\"team3\" />\n                        <img className=\"avatar team4 d-none d-md-inline-block\" src={team4} alt=\"team4\" />\n                        <img className=\"avatar team5 d-none d-md-inline-block\" src={team5} alt=\"team5\" />\n                        <img className=\"avatar  team1-small d-md-none\" src={team1} alt=\"team1\" />\n                        <img className=\"avatar team2-small d-md-none\" src={team2} alt=\"team2\" />\n                        <img className=\"avatar team3-small d-md-none\" src={team3} alt=\"team3\" />\n                        <img className=\"avatar team4-small d-md-none\" src={team4} alt=\"team4\" />\n                        <img className=\"avatar team5-small d-md-none\" src={team5} alt=\"team5\" />\n                    </div>\n                    <Row className=\"justify-content-center overflow-hidden\">\n                        <Col className=\"box\" style={{padding:0}} lg={9} md={12} sm={12}>\n                            <Row>\n                                <Col style={{padding: 30}} md={6} lg={4} xl={6} sm={12}>\n                                        <Card className=\"overflow-hidden border-0\">\n                                            <div>\n                                                <Row>\n                                                    <Col className=\"col-12\">\n                                                        <div className=\"text-primary text-center text-dark\">\n                                                            <h5 className=\"text-primary text-dark\">Welcome back !</h5>\n                                                            <p>We're so excited to see you again!</p>\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n                                            <CardBody className=\"pt-0 border-0\">\n                                                <div className=\"p-2\">\n\n                                                    <AvForm ref={form} className=\"form-horizontal\" onValidSubmit={(e,v) => { handleValidSubmit(e,v) }}>\n                                                        <AvGroup>\n                                                            <Label className=\"form-label\" for=\"email\">EMAIL</Label>\n                                                            <AvInput \n                                                                onChange={e =>\n                                                                    setState({\n                                                                    ...state, \n                                                                    email: e.target.value,\n                                                                    error: {\n                                                                        ...state.error,\n                                                                        watch: {\n                                                                            ...state.error.watch,\n                                                                            email: ''\n                                                                        }\n                                                                    }\n                                                                })} \n                                                                name=\"email\" \n                                                                id=\"email\" \n                                                                required \n                                                                type=\"email\"\n                                                            />\n                                                            <AvFeedback><i className=\"error-field\">{state.error.email}</i></AvFeedback>\n                                                            <i className=\"error-field\">{state.error.watch.email}</i>\n                                                        </AvGroup>\n\n                                                        <AvGroup>\n                                                            <Label className=\"form-label\" for=\"password\">PASSWORD</Label>\n                                                            <AvInput \n                                                                onChange={e => \n                                                                    setState({\n                                                                        ...state, \n                                                                        password: e.target.value,\n                                                                        error: {\n                                                                            ...state.error,\n                                                                            watch: {\n                                                                                ...state.error.watch,\n                                                                                password: ''\n                                                                            }\n                                                                        }\n                                                                    })\n                                                                } \n                                                                name=\"password\" \n                                                                validate={{\n                                                                    minLength: { value: 6, errorMessage: \"Password must be more than 5 letters\"}\n                                                                }}\n                                                                id=\"password\" \n                                                                required \n                                                                type=\"password\"\n                                                            />\n                                                            <AvFeedback><i className=\"error-field\">{state.error.password}</i></AvFeedback>\n                                                            <i className=\"error-field\">{state.error.watch.password}</i>\n                                                        </AvGroup>\n\n                                                        <div className=\"mt-4\">\n                                                            <Link to=\"/forgot-password\" className=\"text-muted text-primary link\"><i className=\"mdi mdi-lock mr-1\"></i> Forgot your password?</Link>\n                                                        </div>\n                                                        <div className=\"mt-3\">\n                                                            <button\n                                                                disabled={state.loading} className=\"btn btn-primary btn-block waves-effect waves-light btn-dark\" type=\"submit\" style={{backgroundColor: '#EE5C43', borderColor: '#EE5C43'}}>\n                                                                Login\n                                                            </button>\n                                                        </div>\n                                                        <div className=\"mt-4 link-ext\">\n                                                            Need an account?<Link to=\"/store/register\" className=\"link text-primary\"> Register</Link>\n                                                        </div>\n                                                    </AvForm>\n                                                </div>\n                                            </CardBody>\n                                        </Card>\n                                    </Col> \n                                <Col md={6} lg={6} xl={6} sm={12}>\n                                    <img className=\"stadium\" src={stadium} alt=\"stadium\" />\n                                    <div className=\"writing\">\n                                        <div className=\"text-to-show\">\n                                            A market place for all\n                                        </div>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        </React.Fragment>\n     );\n    }\n\nexport default withRouter(withTranslation()(stateWrapper(Login)))","/Users/Tolulopeodueke/Developer/jumga-client/src/pages/Store/store-checkout.js",["313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330"],"import React, { useEffect, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Route,Redirect,withRouter } from \"react-router-dom\";\nimport { withTranslation } from 'react-i18next';\nimport * as _ from 'lodash';\nimport ErrorMessage from '../../components/Common/ErrorMessage';\nimport stateWrapper from \"../../containers/provider\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport { firebaseConfigParams } from '../../config';\nimport './store.scss';\n\nimport CardMaintenance from \"./card-store-checkout\";\n\nimport logo from \"../../assets/images/jumga logo.png\";\nimport CONSTANTS from '../../App.constant';\n\nconst StoreCheckout = (props) => {\n    const storeId = props.match.params.id;\n\n    const processCurrency = async () => {\n        let { remoteConfigs, remoteConfigLoading } = props.masterStore.state;\n        if (_.isEmpty(remoteConfigs)) return;\n        if (state.currencyLoaded) return;\n        await (async () => {\n            try {\n                // state.currency TODO: Change back to this\n                let result = await props.paymentStore.convertToLocalCurrency(props.masterStore.state.remoteConfigs?.store_cost,'USD');\n                setState({\n                    ...state,\n                    currencyLoaded: true,\n                    store_cost: result?.store_cost,\n                    currency: result?.currency,\n                    currencyPricePerDollar: result?.currencyPricePerDollar,\n                    remoteConfigCheck: !remoteConfigLoading\n                });\n            } catch(err) {\n                setState({\n                    ...state,\n                    isError: true,\n                    errMsg: 'Something went wrong when trying to load currency',\n                });\n            }\n        })();\n    }\n\n    const checkIfStoreExists = (storeId) => {\n        let isExists = props.userStore.state.stores.filter(item => {\n            return item.storeId == storeId\n        });\n        if (isExists.length > 0) return true;\n        return false;\n    }\n    const checkifApproved = (storeId) => {\n        let checkApproval = props.userStore.state.stores.filter(item => {\n            return item.storeId == storeId && item.approved == true\n        });\n        if (checkApproval.length > 0) return true;\n        return false;\n    }\n\n    const [state, setState] = useState({\n        currencyLoaded: false,\n        isOpen: true,\n        store_cost: null,\n        currency: null,\n        currencyPricePerDollar: 0,\n        isError: false,\n        errMsg: '',\n        storeCheck: !checkifApproved(storeId),\n        remoteConfigCheck: !props.masterStore.state.remoteConfigLoading,\n        bgColor: 'white',\n        color: 'rgb(22, 46, 88)',\n        clicked: false,\n        currencyLoadedTimes: 1,\n        user: props.userStore.state.user,\n        url: null\n    });\n\n    useEffect(() => {\n        (async () => {\n            await processCurrency();\n        })();\n    }, [props.masterStore.state.remoteConfigs]);\n\n    useEffect(() => {\n        if (_.isNull(props.userStore.state.user)) return;\n        setState({\n            ...state,\n           user: props.userStore.state.user\n        });\n    }, [props.userStore.state.user])\n\n    useEffect(() => {\n        if (!props.userStore.state.storeLoaded) return;\n        if (!checkIfStoreExists(storeId))  return props.history.push(`/store/front/`);\n        if (!checkifApproved(storeId)) return setState({...state, storeCheck: true});\n        props.history.push(`/store/front/${storeId}`);\n    }, [props.userStore.state.storeLoaded, props.userStore.state.stores])\n\n    useEffect(() => {\n        if (state.isError) {\n            setTimeout(() => {setState({...state, isError: false, errMsg: ''})}, 10000);\n        }\n    }, [state.isError]);\n\n    let windowRef = null;\n\n    const openNewWindow = (url) => {\n        windowRef = window.open(url, 'Payment', 'statusbar=no,height=600,width=400');    \n    }\n\n    const handlePayment = async () => {\n        if (!(state.remoteConfigCheck == true && state.storeCheck == true) || state.clicked || _.isNull(state.user)) {\n            setState({...state, isError: true, errMsg: 'Wait for the loading to be completed'});\n            return;\n        }\n        setState({\n            ...state,\n            bgColor: 'rgb(22, 46, 88)',\n            color: 'white',\n            clicked: true\n        });\n        try {\n            const options = {\n                email: state.user?.email,\n                name: state.user?.username,\n                storename: storeId,\n                // payment_plan: firebaseConfigParams.storePaymentPlanID,\n                paymentTitle: `Payment for access to ${storeId}`,\n                description: `${props.userStore.state.user.username} is to pay ${state.store_cost} to have access to ${storeId} store`,\n                currency: state.currency,\n                currencyPricePerDollar: state.currencyPricePerDollar\n            };\n\n            let payment = await  props.paymentStore.initiatePayment(options);\n            const { link } = payment?.data?.data;\n            setState({\n                ...state,\n                bgColor: 'white',\n                color: 'rgb(22, 46, 88)',\n                clicked: false,\n                url: link\n            });\n            openNewWindow(link);\n        } catch(e) {\n            setState({\n                ...state,\n                bgColor: 'white',\n                color: 'rgb(22, 46, 88)',\n                clicked: false,\n                isError: true,\n                errMsg: 'Something went wrong...Probably your network',\n            });\n        }\n    }\n\n    useEffect(() => {\n        props.userStore.trackApproval(storeId, (result) => {\n            if (_.isUndefined(result)) return;\n            if (result.approved == true) {\n               (async () => {\n                if (_.isNull(props.userStore.state.user)) return;\n                await props.userStore.getUserStore();\n                if (!_.isNull(windowRef)) windowRef.close();\n                props.history.push(`/store/front/${storeId}`);\n               })();\n            }\n        });\n    }, []);\n\n    return (\n            <React.Fragment>\n                <div onClick={() => {setState({...state, errMsg: '', isError: false})}}>\n                    <ErrorMessage isError={state.isError} message={state.errMsg} />\n                </div>\n                <section className=\"my-5 pt-sm-5\">\n                    <Container>\n                        <Row>\n                            <Col xs=\"12\" className=\"text-center\">\n                                <div className=\"home-wrapper\">\n                                    <div className=\"mb-5\">\n                                        <Link to={'/'}>\n                                            <img src={logo} alt=\"logo\" height=\"44\" />\n                                        </Link>\n                                    </div>\n                                    <h3 className=\"mt-5\">Get Approved</h3>\n                                    <Row>\n                                        <Col md=\"4\"></Col>\n                                        <Col md=\"4\">\n                                            <p>Jumga requires you to pay an annual fee before you can access the store services</p>\n                                        </Col>\n                                        <Col md=\"4\"></Col>\n                                    </Row>\n\n                                    <Row>\n                                        <Col md=\"3\"></Col>\n                                        <CardMaintenance>\n                                            <div style={{cursor: 'pointer', width: '5%'}} align=\"left\" onClick={() => {\n                                                props.history.push('/store/front');\n                                            }}>\n                                                <i align=\"left\" className=\"bx bx-arrow-back mb-4 h4 text-primary\"></i>\n                                            </div>\n                                            <div align=\"left\">\n                                                <Row>\n                                                    <Col md=\"12\">\n                                                        <h5 className=\"font-size-25 text-uppercase\" style={{color: 'white', fontSize: 25}}>\n                                                            {state.store_cost == null ? \"\" : state.store_cost}\n                                                        </h5>\n                                                    </Col>\n                                                </Row>\n                                                <Row>\n                                                    <Col md=\"12\">\n                                                            <div align=\"right\">\n                                                                <button\n                                                                    disabled={!(state.remoteConfigCheck == true && state.storeCheck == true) || state.clicked || _.isNull(state.user)}\n                                                                    onClick={handlePayment}\n                                                                    style={{\n                                                                        borderRadius: 20, \n                                                                        backgroundColor: state.bgColor, \n                                                                        display: 'inline-block',\n                                                                        padding: '1%',\n                                                                        paddingLeft: '3%',\n                                                                        paddingRight: '3%',\n                                                                        cursor: 'pointer',\n                                                                        fontFamily: 'Sriracha, cursive',\n                                                                        color: state.color,\n                                                                        transition: 'all 0.5s ease'\n                                                                    }}\n                                                                >\n                                                                    pay {state.clicked? (\n                                                                        <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n                                                                    ): <></>}\n                                                                </button>\n                                                            </div>\n                                                    </Col>\n                                                </Row>\n                                                <Row>\n                                                    <Col md=\"12\">\n                                                        <div align=\"left\">\n                                                            {\n                                                                _.isNull(state.url) ? <></> : (\n                                                                    <span style={{color: 'white', fontSize: '12'}}>\n                                                                        If window does not open click this  \n                                                                        <a target=\"_blank\" style={{color: 'dodgerblue'}} href={state.url}>Link</a>\n                                                                    </span>\n                                                                )\n                                                            }\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n                                        </CardMaintenance>\n\n                                        <Col md=\"3\"></Col>\n                                    </Row>\n                                </div>\n                            </Col>\n                        </Row>\n                    </Container>\n                </section>\n            </React.Fragment>\n            );\n}\n            \nexport default withRouter(withTranslation()(stateWrapper(StoreCheckout)));","/Users/Tolulopeodueke/Developer/jumga-client/src/pages/Store/StoreAddProduct.js",["331","332","333","334","335","336","337","338","339","340","341","342","343"],"import React, { useEffect, useRef, useState } from 'react';\nimport * as _ from 'lodash';\nimport { Container, Row, Col, Form, FormGroup, Input, Card, CardBody, CardTitle, CardSubtitle, Button, Label } from \"reactstrap\";\nimport Select from 'react-select';\nimport Dropzone from 'react-dropzone';\nimport stateWrapper from '../../containers/provider';\nimport { withRouter, Link } from 'react-router-dom';\nimport { withTranslation } from 'react-i18next';\nimport ErrorMessage from '../../components/Common/ErrorMessage';\n\n//Import Breadcrumb\nimport Breadcrumbs from '../../components/Common/Breadcrumb';\n\nconst  StoreAddProduct = (props) => {\n    const storeId = props.match.params?.id;\n    const cleanUpCategories = (cat) => {\n        let tmp = []\n        Object.keys(cat).map(item => {\n            tmp.push({value: item, label: item});\n            Object.keys(cat[item]).map((item2, idx) => {\n                let x = cat[item];\n                tmp.push({value: item2, label: item2});\n                _.isArray(x[item2]) ? x[item2].map(val => {\n                    tmp.push({value: val, label: val});\n                }) : (()=> {})();\n            })\n        });\n        return tmp;\n    }\n    const [state, setState] = useState({\n        selectedFiles: [],\n        isLoading: true,\n        productname: '',\n        manufacturename: '',\n        manufacturebrand: '',\n        pastprice: 0.00,\n        currentprice: 0.00,\n        isError: false,\n        errMsg: '',\n        productdesc: '',\n        metaname: '',\n        metakeywords: '',\n        metadescription: '',\n        categories: [],\n        isSubmitted: false,\n        transferRate: '',\n        stock: 1,\n        options: cleanUpCategories(props.masterStore.state.categories)\n    });\n\n    const removeImage = (f, i) => {\n        let newImageFile = state.selectedFiles.filter((item, id) => {\n            return item !== f && id !== i\n        });\n\n        setState({\n            selectedFiles: newImageFile\n        });\n    }\n\n    useEffect(() => {\n        if (!props.userStore.state.storeLoaded) return;\n        const checkifApproved = (storeId) => {\n            let checkApproval = props.userStore.state.stores.filter(item => {\n                return item.storeId == storeId && item.approved == true\n            });\n\n            if (checkApproval.length > 0) return true;\n            return false;\n        }\n        if (!checkifApproved(storeId)) props.history.push(`/store/get-approved/${storeId}`);\n        setState({...state, isLoading: false});\n    }, [props.userStore.state.storeLoaded, props.userStore.state.stores])\n\n    useEffect(() => {\n        props.userStore.trackApproval(storeId, (result) => {\n            if (_.isUndefined(result)) return;\n            if (result.approved == false) {\n               (async () => {\n                if (_.isNull(props.userStore.state.user)) return;\n                await props.userStore.getUserStore();\n                props.history.push(`/store/get-approved/${storeId}`);\n               })();\n            }\n        });\n    }, []);\n\n    useEffect(() => {\n        if (_.isEmpty(Object.keys(props.masterStore.state.categories))) return;\n        if (state.options.length > 0) return;\n        setState({...state, options: cleanUpCategories(props.masterStore.state.categories)});\n    }, [props.masterStore.state.categories]);\n\n    const handleAcceptedFiles = (files) => {\n        let newFiles = files.filter(item => {\n            return String(item.type).includes('image');\n        })\n        newFiles.map(file => Object.assign(file, {\n            preview: URL.createObjectURL(file),\n            formattedSize: formatBytes(file.size)\n        }));\n\n        setState({ ...state, selectedFiles: newFiles });\n    }\n\n    const formatBytes = (bytes, decimals = 2) => {\n        if (bytes === 0) return '0 Bytes';\n        const k = 1024;\n        const dm = decimals < 0 ? 0 : decimals;\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n    }\n\n    const cancel = () => {\n        setState({\n            ...state, \n            selectedFiles: [],\n            productname: '',\n            manufacturename: '',\n            manufacturebrand: '',\n            pastprice: 0.00,\n            currentprice: 0.00,\n            isError: false,\n            errMsg: '',\n            productdesc: '',\n            metaname: '',\n            metakeywords: '',\n            metadescription: '',\n            categories: [],\n            transferRate: '',\n            stock: 1\n        });\n    }\n\n    const cancelForm = e => {\n        e.preventDefault();\n        cancel();\n    }\n\n    \n    useEffect(() => {\n        if (state.isError) {\n            setTimeout(() => {setState({...state, isError: false, errMsg: ''})}, 10000);\n        }\n    }, [state.isError]);\n\n    const submitProduct = async (e) => {\n        e.preventDefault();\n        setState({...state, isSubmitted: true});\n        if (!(parseInt(state.currentprice) > 0)) return setState({...state, isError: true, errMsg: 'Add a valid price', isSubmitted: false});\n        if (_.isEmpty(state.productname) || String(state.productname).length <= 3) return setState({...state, isError: true, errMsg: 'Enter a valid product name', isSubmitted: false});\n        if (_.isEmpty(state.productdesc) || String(state.productdesc).length < 10) return setState({...state, isError: true, errMsg: 'Make your product description presentable', isSubmitted: false});\n        if (!(state.selectedFiles.length > 0)) return setState({...state, isError: true, errMsg: 'Add at least one image', isSubmitted: false});\n        if (!_.isEmpty(state.metaname)) {\n            if (String(state.metaname).length <= 3) return setState({...state, isError: true, errMsg: 'Add valid meta tags information', isSubmitted: false});\n            if (_.isEmpty(state.metakeywords) || String(state.metakeywords).length < 2) return setState({...state, isError: true, errMsg: 'Add valid meta tags information', isSubmitted: false});\n        }\n\n        let values = {\n            selectedFiles: state.selectedFiles,\n            productname: state.productname,\n            manufacturename: state.manufacturename,\n            manufacturebrand: state.manufacturebrand,\n            pastprice: state.pastprice,\n            currentprice: state.currentprice,\n            productdesc: state.productdesc,\n            metaname: state.metaname,\n            metakeywords: state.metakeywords,\n            metadescription: state.metadescription,\n            categories: state.categories,\n            storeId: storeId,\n            stock: state.stock,\n        }\n        try {\n            \n            let images = [];\n            await Promise.all(values.selectedFiles.map(async (files) => {\n                let url = await props.userStore.uploadImage(files, transferRate => {\n                    setState({...state, transferRate: transferRate, isSubmitted: true});\n                });\n                images.push(url);\n            }));\n\n            values['images'] = images;\n            let result = await props.userStore.createProduct(values);\n            cancel();\n            props.history.push(`/${result}`);\n\n        } catch(err) {\n            console.log(err);\n            setState({...state, isError: true, errMsg: 'An error as occurred', isSubmitted: false});\n        }\n    }\n\n    return (\n        <React.Fragment>\n            {\n                state.isLoading ? (\n                    <div style={{position: 'fixed', top: '0%', width: '100%', height: '100%', left: '0%', backgroundColor: '#f8f8fb'}}>\n                        <div style={{position: 'relative', top: '45%', left: '50%'}} className=\"d-none d-md-block\">\n                            <div className=\"lds-ring-x\"><div></div><div></div><div></div><div></div></div>\n                        </div>\n                        <div style={{position: 'relative', top: '45%', left: '40%'}} className=\"d-md-none\">\n                            <div className=\"lds-ring-x\"><div></div><div></div><div></div><div></div></div>\n                        </div>\n                    </div>\n                ) : (\n                    <div className=\"page-content\">\n                         <div onClick={() => {setState({...state, errMsg: '', isError: false})}}>\n                            <ErrorMessage isError={state.isError} message={state.errMsg} />\n                        </div>\n                        <Container fluid>\n\n                            {/* Render Breadcrumb */}\n                            <Breadcrumbs title={storeId} breadcrumbItem=\"Add Product\" />\n                            \n                            <Row>\n                                <Col xs=\"12\">\n                                    <Card>\n                                        <CardBody>\n\n                                            <CardTitle>Provide Product Information</CardTitle>\n                                            <CardSubtitle className=\"mb-3\">\n                                                Fill all information below\n                                            </CardSubtitle>\n\n                                            <Form>\n                                                <Row>\n                                                    <Col sm=\"6\">\n                                                        <FormGroup>\n                                                            <Label htmlFor=\"productname\">Product Name</Label>\n                                                            <Input \n                                                                onChange={e => setState({...state, productname: e.target.value})} \n                                                                id=\"productname\" name=\"productname\" type=\"text\" className=\"form-control\" value={state.productname} />\n                                                        </FormGroup>\n                                                        <FormGroup>\n                                                            <Label htmlFor=\"manufacturername\">Manufacturer Name</Label>\n                                                            <Input \n                                                                onChange={e => setState({...state, manufacturename: e.target.value})}\n                                                                id=\"manufacturername\" name=\"manufacturername\" type=\"text\" className=\"form-control\" value={state.manufacturename} />\n                                                        </FormGroup>\n                                                        <FormGroup>\n                                                            <Label htmlFor=\"manufacturerbrand\">Manufacturer Brand</Label>\n                                                            <Input \n                                                                onChange={e => setState({...state, manufacturebrand: e.target.value})}\n                                                                id=\"manufacturerbrand\" name=\"manufacturerbrand\" type=\"text\" className=\"form-control\" value={state.manufacturebrand} />\n                                                        </FormGroup>\n                                                        <FormGroup>\n                                                            <Label htmlFor=\"price\">Past Price ($)</Label>\n                                                            <Input \n                                                                onChange={e => setState({...state, pastprice: e.target.value})}\n                                                                id=\"pastprice\" name=\"pastprice\" type=\"number\" className=\"form-control\" value={state.pastprice} />\n                                                        </FormGroup>\n                                                    </Col>\n\n                                                    <Col sm=\"6\">\n                                                        <FormGroup>\n                                                            <Label htmlFor=\"price\">Current Price ($)</Label>\n                                                            <Input \n                                                                onChange={e => setState({...state, currentprice: e.target.value})}\n                                                                id=\"price\" name=\"price\" type=\"number\" className=\"form-control\" value={state.currentprice} />\n                                                        </FormGroup>\n                                                        <FormGroup>\n                                                            <Label htmlFor=\"productdesc\">Product Description</Label>\n                                                            <textarea \n                                                                onChange={e => setState({...state, productdesc: e.target.value})}\n                                                                className=\"form-control\" id=\"productdesc\" rows=\"5\" value={state.productdesc}></textarea>\n                                                        </FormGroup>\n                                                        <FormGroup className=\"select2-container\">\n                                                            <Label className=\"control-label\">Features</Label>\n                                                            <Select \n                                                                onChange={e => {\n                                                                    setState({...state, categories: e.map(i => i.value)});\n                                                                }}\n                                                                classNamePrefix=\"select2-selection\" placeholder=\"Choose Category\" title=\"Category\" options={state.options} isMulti />\n                                                        </FormGroup>\n                                                    </Col>\n                                                </Row>\n                                            </Form>\n\n                                        </CardBody>\n                                    </Card>\n\n                                    <Card>\n                                        <CardBody>\n                                            <CardTitle className=\"mb-3\">Product Images</CardTitle>\n                                            <Form>\n                                                <Dropzone\n                                                    onDrop={acceptedFiles =>\n                                                        handleAcceptedFiles(acceptedFiles)\n                                                    }\n                                                >\n                                                    {({ getRootProps, getInputProps }) => (\n                                                        <div className=\"dropzone\">\n                                                            <div\n                                                                className=\"dz-message needsclick\"\n                                                                {...getRootProps()}\n                                                            >\n                                                                <input {...getInputProps()} />\n                                                                <div className=\"dz-message needsclick\">\n                                                                    <div className=\"mb-3\">\n                                                                        <i className=\"display-4 text-muted bx bxs-cloud-upload\"></i>\n                                                                    </div>\n                                                                    <h4>Drop files here or click to upload.</h4>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    )}\n                                                </Dropzone>\n                                                <div\n                                                    className=\"dropzone-previews mt-3\"\n                                                    id=\"file-previews\"\n                                                >\n                                                    {state.selectedFiles.map((f, i) => {\n                                                        return (\n                                                            <Card\n                                                                onClick={e => removeImage(f, i)}\n                                                                className=\"mt-1 mb-0 shadow-none border dz-processing dz-image-preview dz-success dz-complete\"\n                                                                key={i + \"-file\"}\n                                                            >\n                                                                <div className=\"p-2\">\n                                                                    <Row className=\"align-items-center\">\n                                                                        <Col className=\"col-auto\">\n                                                                            <img\n                                                                                data-dz-thumbnail=\"\"\n                                                                                height=\"80\"\n                                                                                className=\"avatar-sm rounded bg-light\"\n                                                                                alt={f.name}\n                                                                                src={f.preview}\n                                                                            />\n                                                                        </Col>\n                                                                        <Col>\n                                                                            <Link\n                                                                                to=\"#\"\n                                                                                className=\"text-muted font-weight-bold\"\n                                                                            >\n                                                                                {f.name}\n                                                                            </Link>\n                                                                            <p className=\"mb-0\">\n                                                                                <strong>{f.formattedSize}</strong>\n                                                                            </p>\n                                                                        </Col>\n                                                                    </Row>\n                                                                </div>\n                                                            </Card>\n                                                        );\n                                                    })}\n                                                </div>\n                                            </Form>\n                                        </CardBody>\n                                    </Card>\n\n                                    <Card>\n                                        <CardBody>\n\n                                            <CardTitle>Meta Data</CardTitle>\n                                            <Form>\n                                                <Row>\n                                                    <Col sm={6}>\n                                                        <FormGroup>\n                                                            <Label htmlFor=\"metatitle\">Meta title</Label>\n                                                            <Input \n                                                                onChange={e => setState({...state, metaname: e.target.value})}\n                                                                id=\"metatitle\" name=\"metadataname\" placeholder=\"E.g Color, Size\" type=\"text\" className=\"form-control\" value={state.metaname} />\n                                                        </FormGroup>\n                                                        <FormGroup>\n                                                            <Label htmlFor=\"metakeywords\">Meta Keywords (Seperate with comma [,])</Label>\n                                                            <Input \n                                                                onChange={e => setState({...state, metakeywords: e.target.value})}\n                                                                id=\"metakeywords\" name=\"metadatavalue\" placeholder=\"E.g Red, Black, XL, XS\" type=\"text\" className=\"form-control\" value={state.metakeywords} />\n                                                        </FormGroup>\n                                                        <FormGroup>\n                                                            <Label htmlFor=\"price\">How many are in stock</Label>\n                                                            <Input \n                                                                onChange={e => setState({...state, stock: e.target.value})}\n                                                                id=\"price\" name=\"price\" type=\"number\" className=\"form-control\" value={state.stock} />\n                                                        </FormGroup>\n                                                    </Col>\n\n                                                    <Col sm={6}>\n                                                        <FormGroup>\n                                                            <Label htmlFor=\"metadescription\">Meta Description</Label>\n                                                            <textarea \n                                                                onChange={e => setState({...state, metadescription: e.target.value})}\n                                                                className=\"form-control\" id=\"metadescription\" rows=\"5\" value={state.metadescription}></textarea>\n                                                        </FormGroup>\n                                                    </Col>\n                                                </Row>\n\n                                                <Button\n                                                    onClick={() => {\n                                                            setState({...state, isSubmitted: true});\n                                                    }}\n                                                     disabled={state.isSubmitted} type=\"submit\" onClick={submitProduct} color=\"primary\" className=\"mr-1 waves-effect waves-light\">Save Changes</Button>\n                                                <Button disabled={state.isSubmitted} type=\"submit\" onClick={cancelForm} color=\"secondary\" className=\"waves-effect\">Cancel</Button>\n\n                                                {state.isSubmitted == true ? (\n                                                    <div \n                                                        style={{\n                                                            fontSize: 15, \n                                                            fontFamily: 'Sriracha, cursive',\n                                                         }}>\n                                                        Loading... <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div> {state.transferRate}\n                                                    </div>\n                                                ) : null}\n                                            </Form>\n                                        </CardBody>\n                                    </Card>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </div>\n                )\n            }\n        </React.Fragment>\n    );\n}\n\nexport default withRouter(withTranslation()(stateWrapper(StoreAddProduct)));","/Users/Tolulopeodueke/Developer/jumga-client/src/pages/Store/StoreDetails.js",["344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365"],"import React, { useEffect, useState }  from 'react';\nimport _ from 'lodash';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport CreateStore, {Backdrop} from './CreateStore';\nimport { Container, Row, Col, Button, Card, CardBody, CardTitle, Modal, ModalHeader, ModalBody, ModalFooter, Media, Table } from \"reactstrap\";\nimport stateWrapper from '../../containers/provider';\nimport { withRouter, Link } from 'react-router-dom';\nimport { withTranslation } from 'react-i18next';\nimport './store.scss';\n\n\nconst StoreDetails = (props) => {\n    const [isLoading, setLoading] = useState(true);\n    const storeId = props.match.params.id;\n\n    useEffect(() => {\n        if (!props.userStore.state.storeLoaded) return;\n        const checkifApproved = (storeId) => {\n            let checkApproval = props.userStore.state.stores.filter(item => {\n                return item.storeId == storeId && item.approved == true\n            });\n\n            if (checkApproval.length > 0) return true;\n            return false;\n        }\n        if (!checkifApproved(storeId)) props.history.push(`/store/get-approved/${storeId}`);\n        setLoading(false);\n    }, [props.userStore.state.storeLoaded, props.userStore.state.stores])\n\n    useEffect(() => {\n        props.userStore.trackApproval(storeId, (result) => {\n            if (_.isUndefined(result)) return;\n            if (result.approved == false) {\n               (async () => {\n                if (_.isNull(props.userStore.state.user)) return;\n                await props.userStore.getUserStore();\n                props.history.push(`/store/get-approved/${storeId}`);\n               })();\n            } else {\n                props.history.push(`/store/front/${storeId}/overview`);\n            }\n        });\n    }, []);\n\n    return (\n          <React.Fragment>\n                {\n                    isLoading ? (\n                        <div style={{position: 'fixed', top: '0%', width: '100%', height: '100%', left: '0%', zIndex: 5000, backgroundColor: '#f8f8fb'}}>\n                            <div style={{position: 'relative', top: '45%', left: '43%'}}>\n                                <div className=\"lds-ring-x\"><div></div><div></div><div></div><div></div></div>\n                            </div>\n                        </div>\n                    ) : (\n                        <div></div>\n                    )\n                }\n            </React.Fragment>\n          );\n    }\n        \nexport default withRouter(withTranslation()(stateWrapper(StoreDetails)));","/Users/Tolulopeodueke/Developer/jumga-client/src/pages/Store/StoreProductDetails.js",["366","367"],"import React, { Component, useEffect, useState } from 'react';\nimport { Container, Row, Col, Card, CardBody, Button, Nav, NavItem, NavLink, TabContent, TabPane, Table, Media } from \"reactstrap\";\nimport classnames from 'classnames';\nimport stateWrapper from '../../containers/provider';\nimport { withRouter, Link } from 'react-router-dom';\nimport { withTranslation } from 'react-i18next';\n\n//Import Star Ratings\nimport StarRatings from 'react-star-ratings';\n\n//Import Product Images\nimport img4 from \"../../assets/images/product/img-4.png\";\nimport img6 from \"../../assets/images/product/img-6.png\";\nimport img7 from \"../../assets/images/product/img-7.png\";\nimport img8 from \"../../assets/images/product/img-8.png\";\nimport avatar2 from \"../../assets/images/users/avatar-2.jpg\";\nimport avatar4 from \"../../assets/images/users/avatar-4.jpg\";\nimport avatar5 from \"../../assets/images/users/avatar-5.jpg\";\n\n//Import Breadcrumb\nimport Breadcrumbs from '../../components/Common/Breadcrumb';\n\nconst StoreProductDetail = props => {\n    const productId = props.match.params?.productId;\n    useEffect(() => {\n        (async () => {\n            let result = await props.masterStore.getProduct({\n                id: productId, //If the value is '' it would return all the products\n            });\n\n            console.log(result);\n            console.log(\"Properties of this component\", props);\n        })();\n    }, []);\n\n    const [state, setState] = useState({\n        comments: [\n            { id: 1, img: avatar2, name: \"Brian\", description: \"If several languages coalesce, the grammar of the resulting language.\", date: \"5 hrs ago\" },\n            {\n                id: 2, img: avatar4, name: \"Denver\", description: \"To an English person, it will seem like simplified English, as a skeptical Cambridge\", date: \"07 Oct, 2019\",\n                childComment: [\n                    { id: 1, img: avatar5, name: \"Henry\", description: \"Their separate existence is a myth. For science, music, sport, etc.\", date: \"08 Oct, 2019\" },\n                ]\n            },\n            { id: 3, img: \"Null\", name: \"Neal\", description: \"Everyone realizes why a new common language would be desirable.\", date: \"05 Oct, 2019\" },\n        ],\n        recentProducts: [\n            { id: 1, img: img7, name: \"Wirless Headphone\", link: \"\", rating: 4, oldPrice: 240, newPrice: 225 },\n            { id: 2, img: img4, name: \"Phone patterned cases\", link: \"\", rating: 3, oldPrice: 150, newPrice: 145 },\n            { id: 3, img: img6, name: \"Phone Dark Patterned cases\", link: \"\", rating: 4, oldPrice: 138, newPrice: 135 },\n        ],\n        activeTab: '1',\n    })\n\n    const toggleTab = (tab) => {\n        if (state.activeTab !== tab) {\n            setState({\n                activeTab: tab\n            });\n        }\n    }\n\n    const imageShow = (img, id) => {\n        var expandImg = document.getElementById(\"expandedImg\" + id);\n        expandImg.src = img;\n    }\n\n    return (\n        <React.Fragment>\n            <div className=\"page-content\">\n                <Container>\n                    <Breadcrumbs title=\"Ecommerce\" breadcrumbItem=\"Product Detail\" />\n                    <Row>\n                        <Col>\n                            <Card>\n                                <CardBody>\n                                    <Row>\n                                        <Col xl=\"6\">\n                                            <div className=\"product-detai-imgs\">\n                                                <Row>\n                                                    <Col md=\"2\" xs=\"3\">\n                                                        <Nav className=\"flex-column\" pills>\n                                                            <NavItem>\n                                                                <NavLink\n                                                                    className={classnames({ active: state.activeTab === '1' })}\n                                                                    onClick={() => { toggleTab('1'); }}\n                                                                >\n                                                                    <img src={img7} alt=\"\" onClick={() => { imageShow(img7, 1) }} className=\"img-fluid mx-auto d-block rounded\" />\n                                                                </NavLink>\n                                                            </NavItem>\n                                                            <NavItem>\n                                                                <NavLink\n                                                                    className={classnames({ active: state.activeTab === '2' })}\n                                                                    onClick={() => { toggleTab('2'); }}\n                                                                >\n                                                                    <img src={img8} alt=\"\" onClick={() => { imageShow(img8, 2) }} className=\"img-fluid mx-auto d-block rounded\" />\n                                                                </NavLink>\n                                                            </NavItem>\n                                                            <NavItem>\n                                                                <NavLink\n                                                                    className={classnames({ active: state.activeTab === '3' })}\n                                                                    onClick={() => { this.toggleTab('3'); }}\n                                                                >\n                                                                    <img src={img7} alt=\"\" onClick={() => { imageShow(img7, 3) }} className=\"img-fluid mx-auto d-block rounded\" />\n                                                                </NavLink>\n                                                            </NavItem>\n                                                            <NavItem>\n                                                                <NavLink\n                                                                    className={classnames({ active: state.activeTab === '4' })}\n                                                                    onClick={() => { toggleTab('4'); }}\n                                                                >\n                                                                    <img src={img8} alt=\"\" onClick={() => { imageShow(img8, 4) }} className=\"img-fluid mx-auto d-block rounded\" />\n                                                                </NavLink>\n                                                            </NavItem>\n                                                        </Nav>\n                                                    </Col>\n                                                    <Col md={{ size: 7, offset: 1 }} xs=\"9\">\n                                                        <TabContent activeTab={state.activeTab}>\n                                                            <TabPane tabId=\"1\">\n                                                                <div>\n                                                                    <img src={img7} alt=\"\" id=\"expandedImg1\" className=\"img-fluid mx-auto d-block\" />\n                                                                </div>\n                                                            </TabPane>\n                                                            <TabPane tabId=\"2\">\n                                                                <div>\n                                                                    <img src={img8} id=\"expandedImg2\" alt=\"\" className=\"img-fluid mx-auto d-block\" />\n                                                                </div>\n                                                            </TabPane>\n                                                            <TabPane tabId=\"3\">\n                                                                <div>\n                                                                    <img src={img7} id=\"expandedImg3\" alt=\"\" className=\"img-fluid mx-auto d-block\" />\n                                                                </div>\n                                                            </TabPane>\n                                                            <TabPane tabId=\"4\">\n                                                                <div>\n                                                                    <img src={img8} id=\"expandedImg4\" alt=\"\" className=\"img-fluid mx-auto d-block\" />\n                                                                </div>\n                                                            </TabPane>\n                                                        </TabContent>\n                                                        <div className=\"text-center\">\n                                                            <Button type=\"button\" color=\"primary\" className=\"btn waves-effect waves-light mt-2 mr-1\">\n                                                                <i className=\"bx bx-cart mr-2\"></i> Add to cart\n                                                        </Button>\n                                                            <Button type=\"button\" color=\"success\" className=\"ml-1 btn waves-effect  mt-2 waves-light\">\n                                                                <i className=\"bx bx-shopping-bag mr-2\"></i>Buy now\n                                                        </Button>\n                                                        </div>\n\n                                                    </Col>\n                                                </Row>\n                                            </div>\n                                        </Col>\n\n                                        <Col xl=\"6\">\n                                            <div className=\"mt-4 mt-xl-3\">\n                                                <Link to=\"#\" className=\"text-primary\">Headphone</Link>\n                                                <h4 className=\"mt-1 mb-3\">Wireless Headphone (Black)</h4>\n\n                                                <div className=\"text-muted float-left mr-3 mb-3\">\n                                                    <StarRatings\n                                                        rating={4}\n                                                        starRatedColor=\"#F1B44C\"\n                                                        starEmptyColor=\"#2D363F\"\n                                                        numberOfStars={5}\n                                                        name='rating'\n                                                        starDimension=\"14px\"\n                                                        starSpacing=\"3px\"\n                                                    />\n                                                </div>\n                                                <p className=\"text-muted mb-4\">( 152 Customers Review )</p>\n\n                                                <h6 className=\"text-success text-uppercase\">20 % Off</h6>\n                                                <h5 className=\"mb-4\">Price : <span className=\"text-muted mr-2\"><del>$240 USD</del></span> <b>$225 USD</b></h5>\n                                                <p className=\"text-muted mb-4\">To achieve this, it would be necessary to have uniform grammar pronunciation and more common words If several languages coalesce</p>\n                                                <Row className=\"mb-3\">\n                                                    <Col md=\"6\">\n                                                        <div>\n                                                            <p className=\"text-muted\"><i className=\"bx bx-unlink font-size-16 align-middle text-primary mr-1\"></i> Wireless</p>\n                                                            <p className=\"text-muted\"><i className=\"bx bx-shape-triangle font-size-16 align-middle text-primary mr-1\"></i> Wireless Range : 10m</p>\n                                                            <p className=\"text-muted\"><i className=\"bx bx-battery font-size-16 align-middle text-primary mr-1\"></i> Battery life : 6hrs</p>\n                                                        </div>\n                                                    </Col>\n                                                    <Col md=\"6\">\n                                                        <div>\n                                                            <p className=\"text-muted\"><i className=\"bx bx-user-voice font-size-16 align-middle text-primary mr-1\"></i> Bass</p>\n                                                            <p className=\"text-muted\"><i className=\"bx bx-cog font-size-16 align-middle text-primary mr-1\"></i> Warranty : 1 Year</p>\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n\n                                                <div className=\"product-color\">\n                                                    <h5 className=\"font-size-15\">Color :</h5>\n                                                    <Link to=\"#\" className=\"active\">\n                                                        <div className=\"product-color-item border rounded\">\n                                                            <img src={img7} alt=\"\" className=\"avatar-md\" />\n                                                        </div>\n                                                        <p>Black</p>\n                                                    </Link>\n                                                    <Link to=\"#\">\n                                                        <div className=\"product-color-item border rounded\">\n                                                            <img src={img7} alt=\"\" className=\"avatar-md\" />\n                                                        </div>\n                                                        <p>Blue</p>\n                                                    </Link>\n                                                    <Link to=\"#\">\n                                                        <div className=\"product-color-item border rounded\">\n                                                            <img src={img7} alt=\"\" className=\"avatar-md\" />\n                                                        </div>\n                                                        <p>Gray</p>\n                                                    </Link>\n                                                </div>\n                                            </div>\n                                        </Col>\n                                    </Row>\n\n                                    <div className=\"mt-5\">\n                                        <h5 className=\"mb-3\">Specifications :</h5>\n\n                                        <div className=\"table-responsive\">\n                                            <Table className=\"table mb-0 table-bordered\">\n                                                <tbody>\n                                                    <tr>\n                                                        <th scope=\"row\" style={{ width: \"400px\" }}>Category</th>\n                                                        <td>Headphone</td>\n                                                    </tr>\n                                                    <tr>\n                                                        <th scope=\"row\">Brand</th>\n                                                        <td>JBL</td>\n                                                    </tr>\n                                                    <tr>\n                                                        <th scope=\"row\">Color</th>\n                                                        <td>Black</td>\n                                                    </tr>\n                                                    <tr>\n                                                        <th scope=\"row\">Connectivity</th>\n                                                        <td>Bluetooth</td>\n                                                    </tr>\n                                                    <tr>\n                                                        <th scope=\"row\">Warranty Summary</th>\n                                                        <td>1 Year</td>\n                                                    </tr>\n                                                </tbody>\n                                            </Table>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"mt-5\">\n                                        <h5 className=\"mb-4\">Reviews :</h5>\n                                        {\n                                            state.comments.map((comment, k) =>\n                                                <Media className={comment.id === 1 ? \"border-bottom\" : \"border-bottom mt-3\"} key={\"__media__\" + k}>\n                                                    {\n                                                        comment.img !== \"Null\" ?\n                                                            <img src={comment.img} className=\"avatar-xs mr-3 rounded-circle\" alt=\"img\" />\n                                                            : <div className=\"avatar-xs mr-3\">\n                                                                <span className=\"avatar-title bg-soft-primary text-primary rounded-circle font-size-16\">\n                                                                    N\n                                                            </span>\n                                                            </div>\n                                                    }\n                                                    <Media body>\n                                                        <h5 className=\"mt-0 mb-1 font-size-15\">{comment.name}</h5>\n                                                        <p className=\"text-muted\">{comment.description}</p>\n                                                        <ul className=\"list-inline float-sm-right\">\n                                                            <li className=\"list-inline-item\">\n                                                                <Link to=\"#\"><i className=\"far fa-thumbs-up mr-1\"></i> Like</Link>\n                                                            </li>\n                                                            <li className=\"list-inline-item\">\n                                                                <Link to=\"#\"><i className=\"far fa-comment-dots mr-1\"></i> Comment</Link>\n                                                            </li>\n                                                        </ul>\n                                                        <div className=\"text-muted font-size-12\"><i className=\"far fa-calendar-alt text-primary mr-1\"></i>{comment.date}</div>\n                                                        {\n                                                            comment.childComment ?\n                                                                comment.childComment.map((child, key) =>\n                                                                    <Media className=\"mt-4\" key={\"_media_\" + key}>\n                                                                        <img src={child.img} className=\"avatar-xs mr-3 rounded-circle\" alt=\"img\" />\n                                                                        <Media body>\n                                                                            <h5 className=\"mt-0 mb-1 font-size-15\">{child.name}</h5>\n                                                                            <p className=\"text-muted\">{child.description}</p>\n                                                                            <ul className=\"list-inline float-sm-right\">\n                                                                                <li className=\"list-inline-item\">\n                                                                                    <Link to=\"#\"><i className=\"far fa-thumbs-up mr-1\"></i> Like</Link>\n                                                                                </li>\n                                                                                <li className=\"list-inline-item\">\n                                                                                    <Link to=\"#\"><i className=\"far fa-comment-dots mr-1\"></i> Comment</Link>\n                                                                                </li>\n                                                                            </ul>\n                                                                            <div className=\"text-muted font-size-12\"><i className=\"far fa-calendar-alt text-primary mr-1\"></i> {child.date}</div>\n                                                                        </Media>\n                                                                    </Media>\n                                                                )\n\n                                                                : null\n                                                        }\n                                                    </Media>\n                                                </Media>\n                                            )\n                                        }\n                                    </div>\n\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n\n                    <Row className=\"mt-3\">\n                        <Col lg={12}>\n                            <div>\n                                <h5 className=\"mb-3\">Recent product :</h5>\n\n                                <Row>\n                                    {\n                                        state.recentProducts.map((product, key) =>\n                                            <Col xl=\"4\" sm=\"6\" key={\"__product__\" + key}>\n                                                <Card>\n                                                    <CardBody>\n                                                        <Row className=\"align-items-center\">\n                                                            <Col md=\"4\">\n                                                                <img src={product.img} alt=\"\" className=\"img-fluid mx-auto d-block\" />\n                                                            </Col>\n                                                            <Col md=\"8\">\n                                                                <div className=\"text-center text-md-left pt-3 pt-md-0\">\n                                                                    <h5 className=\"mb-3 text-truncate\"><Link to=\"#\" className=\"text-dark\">{product.name}</Link></h5>\n                                                                    <div className=\"text-muted mb-3\">\n                                                                        <StarRatings\n                                                                            rating={product.rating}\n                                                                            starRatedColor=\"#F1B44C\"\n                                                                            starEmptyColor=\"#2D363F\"\n                                                                            numberOfStars={5}\n                                                                            name='rating'\n                                                                            starDimension=\"14px\"\n                                                                            starSpacing=\"3px\"\n                                                                        />\n                                                                    </div>\n                                                                    <h5 className=\"my-0\"><span className=\"text-muted mr-2\"><del>${product.oldPrice}</del></span> <b>${product.newPrice}</b></h5>\n                                                                </div>\n                                                            </Col>\n                                                        </Row>\n                                                    </CardBody>\n                                                </Card>\n                                            </Col>\n                                        )\n                                    }\n\n                                </Row>\n                            </div>\n                        </Col>\n                    </Row>\n\n                </Container>\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default withRouter(withTranslation()(stateWrapper(StoreProductDetail)));","/Users/Tolulopeodueke/Developer/jumga-client/src/pages/Authentication/CreateX.js",["368","369","370","371","372","373","374","375","376"],"import React, { useState, useRef, useEffect } from 'react';\nimport _ from 'lodash';\nimport { withRouter, Link } from 'react-router-dom';\nimport { Row, Col, CardBody, Card, Alert,Container, Label } from \"reactstrap\";\nimport ErrorMessage from '../../components/Common/ErrorMessage';\nimport { AvForm, AvField, AvGroup, AvInput, AvFeedback, AvRadioGroup, AvRadio, AvCheckboxGroup, AvCheckbox } from 'availity-reactstrap-validation';\nimport { withTranslation } from 'react-i18next';\nimport stateWrapper from \"../../containers/provider\";\nimport \"../../styles/Login.scss\";\nimport logo from \"../../assets/images/jumga logo.png\";\nimport team1 from \"../../assets/images/team1.png\";\nimport team2 from \"../../assets/images/team2.png\";\nimport team3 from \"../../assets/images/team3.png\";\nimport team4 from \"../../assets/images/team4.png\";\nimport team5 from \"../../assets/images/team5.png\";\nimport stadium from \"../../assets/images/stadium.jpg\";\nimport instance from '../../helpers/axiosly';\nimport { configParams } from '../../config';\n\n/**\n * TODO: Add terms and condition\n */\n const Create = (props) => {\n    const [state, setState] = useState({\n        loading: false,\n        error: {\n            email: 'Email is required',\n            password: 'Password is required',\n            username: 'Store name is required',\n            watch: {\n                email: '',\n                password: '',\n                username: ''\n            }\n        },\n        email: '',\n        password: '',\n        username: '',\n        doesStoreNameExists: true,\n        doesEmailExists: true,\n        imageFile: null,\n        imageSrc: null,\n        userType: 'Business',\n        postSubmitError: false,\n        postSubmitMessage: ''\n    });\n\n    const form = useRef();\n    const useImageRef = useRef();\n    const callImageInput = () => {\n        document.getElementById(\"imageFile\").click();\n    }\n  async function  handleValidSubmit(event, values) {\n    event.preventDefault();\n    let doesEmailExists = await processEmail(state.email);\n    // let doesStoreNameExists = await processStoreName(state.username);\n\n\n    if (doesEmailExists) return;\n    let newValues = {\n        ...values,\n        imageFile: state.imageFile,\n        userType: state.userType,\n        downloadURL: null\n    }\n\n    let create = async () => {\n            console.log(newValues);\n            await props.userStore.signUp(newValues, checkError);\n            props.history.push('/');\n    }\n\n    if (_.isNull(newValues.imageFile)) {\n        await create();\n        return;\n    }\n    let snaps = await props.userStore.uploadImage(newValues.imageFile, e => {});\n    console.log(snaps);\n    newValues.downloadURL = snaps;\n    await create();\n    return;\n  }\n  const showPreviewAndSetValue = (e) => {\n    if(e.target.files && e.target.files[0]) {\n        let imageFile = e.target.files[0];\n        console.log(imageFile);\n        if (String(imageFile.type).includes(\"image\")) {\n            const reader = new FileReader();\n            reader.onload = x => {\n                setState({\n                    ...state,\n                    imageFile,\n                    imageSrc: x.target.result\n                })\n            }\n            reader.readAsDataURL(imageFile);\n        } else {\n            setState({\n                ...state,\n                imageFile: null,\n                imageSrc: null\n            })\n        }\n    } else {\n        setState({\n            ...state,\n            imageFile: null,\n            imageSrc: null\n        })\n    }\n  }\n  const checkError =(e) => {\n    console.log(e);\n    setState({\n        ...state,\n        postSubmitError: true,\n        postSubmitMessage: e\n    });\n  }\n  const processEmail = async (e) => {\n\n    let checker = await props.userStore.checkIfEmailExists(e);\n    if (checker?.status) {\n        let error = state.error;\n        error.watch = {\n            ...error.watch,\n            email: `This email already exists`\n        }\n        await setState({\n            ...state, \n            doesEmailExists: checker?.status, \n            error\n        });\n        return checker?.status;\n    }\n\n    await setState({ ...state, doesEmailExists: checker?.status});\n    return checker?.status;\n  }\n\n  useEffect(() => {\n        if (state.postSubmitError) {\n            setTimeout(() => {setState({...state, postSubmitError: false, postSubmitMessage: ''})}, 10000);\n        }\n    }, [state.postSubmitError]);\n    return (\n        <React.Fragment> \n            <div onClick={() => {setState({...state, postSubmitMessage: '', postSubmitError: false})}}>\n                <ErrorMessage isError={state.postSubmitError} message={state.postSubmitMessage} />\n            </div>\n            <div>\n                <Link to=\"/\">\n                    <img className=\"logo d-none d-md-inline-block\" src={logo} alt=\"logo\" />\n                    <img className=\"logo-small d-md-none\" src={logo} alt=\"logo\" />\n                </Link>\n            </div>\n            <div className=\"account-pages my-5 pt-sm-5\">\n                <Container>\n                    <div>\n                        <img className=\"avatar  team1 d-none d-md-inline-block\" src={team1} alt=\"team1\" />\n                        <img className=\"avatar team2 d-none d-md-inline-block\" src={team2} alt=\"team2\" />\n                        <img className=\"avatar team3 d-none d-md-inline-block\" src={team3} alt=\"team3\" />\n                        <img className=\"avatar team4 d-none d-md-inline-block\" src={team4} alt=\"team4\" />\n                        <img className=\"avatar team5 d-none d-md-inline-block\" src={team5} alt=\"team5\" />\n                        <img className=\"avatar  team1-small d-md-none\" src={team1} alt=\"team1\" />\n                        <img className=\"avatar team2-small d-md-none\" src={team2} alt=\"team2\" />\n                        <img className=\"avatar team3-small d-md-none\" src={team3} alt=\"team3\" />\n                        <img className=\"avatar team4-small d-md-none\" src={team4} alt=\"team4\" />\n                        <img className=\"avatar team5-small d-md-none\" src={team5} alt=\"team5\" />\n                    </div>\n                    <Row className=\"justify-content-center overflow-hidden\">\n                        <Col className=\"box\" style={{padding:0}} lg={9} md={12} sm={12}>\n                            <Row>\n                                <Col style={{padding: 30}} md={6} lg={4} xl={6} sm={12}>\n                                        <Card className=\"overflow-hidden border-0\">\n                                            <div>\n                                                <Row>\n                                                    <Col className=\"col-12\">\n                                                        <div className=\"text-primary text-center text-dark\">\n                                                            <h5 className=\"text-primary text-dark\">JOIN US!</h5>\n                                                        </div>\n                                                    </Col>\n                                                </Row>\n                                            </div>\n                                            <CardBody className=\"pt-0 border-0\">\n                                                <div className=\"p-2\">\n\n                                                    <AvForm ref={form} className=\"form-horizontal\" onValidSubmit={(e,v) => { handleValidSubmit(e,v) }}>\n                                                        <div className=\"business-logo\">Business logo</div>\n                                                        <center  className=\"avatar-container\">\n                                                            <div \n                                                                onClick={callImageInput} \n                                                                className=\"user-avatar\"\n                                                                style={{\n                                                                    backgroundImage: `url(${state.imageSrc != null ? state.imageSrc : stadium})`,\n                                                                    backgroundSize: 'cover',\n                                                                    backgroundRepeat: 'no-repeat'\n                                                                }}\n                                                            >\n                                                                <svg \n                                                                    version=\"1.1\" \n                                                                    id=\"Layer_1\" \n                                                                    xmlns=\"http://www.w3.org/2000/svg\" \n                                                                    x=\"0px\" y=\"0px\"\n                                                                    viewBox=\"0 0 512 512\" \n                                                                    className=\"avatar-icon\"\n                                                                >\n                                                                    <g>\n                                                                        <g>\n                                                                            <g>\n                                                                                <circle cx=\"256\" cy=\"277.333\" r=\"106.667\"/>\n                                                                                <path d=\"M469.333,106.667h-67.656c-8.552,0-16.583-3.333-22.635-9.375l-39-39c-10.073-10.073-23.469-15.625-37.719-15.625\n                                                                                    h-92.646c-14.25,0-27.646,5.552-37.719,15.625l-39,39c-6.052,6.042-14.083,9.375-22.635,9.375H42.667\n                                                                                    C19.135,106.667,0,125.802,0,149.333v277.333c0,23.531,19.135,42.667,42.667,42.667h426.667\n                                                                                    c23.531,0,42.667-19.135,42.667-42.667V149.333C512,125.802,492.865,106.667,469.333,106.667z M256,405.333\n                                                                                    c-70.583,0-128-57.417-128-128s57.417-128,128-128s128,57.417,128,128S326.583,405.333,256,405.333z M426.667,213.333\n                                                                                    c-11.76,0-21.333-9.573-21.333-21.333s9.573-21.333,21.333-21.333S448,180.24,448,192S438.427,213.333,426.667,213.333z\"/>\n                                                                            </g>\n                                                                        </g>\n                                                                    </g>\n                                                                    <g>\n                                                                    </g>\n                                                                    <g>\n                                                                    </g>\n                                                                    <g>\n                                                                    </g>\n                                                                    <g>\n                                                                    </g>\n                                                                    <g>\n                                                                    </g>\n                                                                    <g>\n                                                                    </g>\n                                                                    <g>\n                                                                    </g>\n                                                                    <g>\n                                                                    </g>\n                                                                    <g>\n                                                                    </g>\n                                                                    <g>\n                                                                    </g>\n                                                                    <g>\n                                                                    </g>\n                                                                    <g>\n                                                                    </g>\n                                                                    <g>\n                                                                    </g>\n                                                                    <g>\n                                                                    </g>\n                                                                    <g>\n                                                                    </g>\n                                                                    </svg>\n\n                                                            </div>\n                                                        </center>\n\n                                                        <AvGroup>\n                                                            <Label className=\"form-label\" for=\"email\">EMAIL</Label>\n                                                            <AvInput\n                                                                onChange={e =>  setState({\n                                                                    ...state, \n                                                                    email: e.target.value,\n                                                                    error: {\n                                                                        ...state.error,\n                                                                        watch: {\n                                                                            ...state.error.watch,\n                                                                            email: ''\n                                                                        }\n                                                                    }\n                                                                })} \n                                                                name=\"email\" \n                                                                id=\"email\" \n                                                                required \n                                                                type=\"email\"\n                                                            />\n                                                            <AvFeedback><i className=\"error-field\">{state.error.email}</i></AvFeedback>\n                                                            <i className=\"error-field\">{state.error.watch.email}</i>\n                                                        </AvGroup>\n\n                                                        <AvGroup>\n                                                            <Label className=\"form-label\" for=\"username\">FULL NAME</Label>\n                                                            <AvInput \n                                                                onChange={e => setState({\n                                                                    ...state, \n                                                                    username: e.target.value,\n                                                                    error: {\n                                                                        ...state.error,\n                                                                        watch: {\n                                                                            ...state.error.watch,\n                                                                            username: ''\n                                                                        }\n                                                                    }\n                                                                })} \n                                                                validate={{\n                                                                    minLength: { value: 3, errorMessage: \"Username must be more than 3 letters\"}\n                                                                }}\n                                                                name=\"username\" \n                                                                id=\"username\" \n                                                                required\n                                                            />\n                                                            <AvFeedback>\n                                                                <i className=\"error-field\">{state.error.username}</i>\n                                                            </AvFeedback>\n                                                            <i className=\"error-field\">{state.error.watch.username}</i>\n                                                        </AvGroup>\n\n                                                        <AvGroup>\n                                                            <Label className=\"form-label\" for=\"password\">PASSWORD</Label>\n                                                            <AvInput \n                                                                onChange={e => \n                                                                    setState({\n                                                                        ...state, \n                                                                        password: e.target.value,\n                                                                        error: {\n                                                                            ...state.error,\n                                                                            watch: {\n                                                                                ...state.error.watch,\n                                                                                password: ''\n                                                                            }\n                                                                        }\n                                                                    })\n                                                                } \n                                                                validate={{\n                                                                    minLength: { value: 6, errorMessage: \"Password must be more than 5 letters\"}\n                                                                }}\n                                                                name=\"password\" \n                                                                id=\"password\" \n                                                                required \n                                                                type=\"password\"\n                                                            />\n                                                            <AvFeedback><i className=\"error-field\">{state.error.password}</i></AvFeedback>\n                                                            <i className=\"error-field\">{state.error.watch.password}</i>\n                                                        </AvGroup>\n                                                            \n                                                        <input\n                                                            ref={useImageRef} \n                                                            onChange={showPreviewAndSetValue} \n                                                            name=\"imageFile\" \n                                                            id=\"imageFile\"\n                                                            type=\"file\"\n                                                            accept=\"image/*\"\n                                                            hidden\n                                                        />\n\n                                                        <div className=\"mt-3\">\n                                                            <button\n                                                                disabled={state.loading} className=\"btn btn-primary btn-block waves-effect waves-light btn-dark\" type=\"submit\"\n                                                                style={{backgroundColor: '#EE5C43', borderColor: '#EE5C43'}}\n                                                            >\n                                                                Submit\n                                                            </button>\n                                                        </div>\n                                                        <div className=\"mt-3 link-ext\">\n                                                            By clicking the “Submit” button, you agree to Jumga’s <Link to=\"/terms-and-condition\" className=\"link text-pprimary\">terms of acceptable use</Link>.\n                                                        </div>\n                                                        <div className=\"mt-4 link-ext\">\n                                                            Have an account?<Link to=\"/store/login\" className=\"link text-primary\">Login</Link>\n                                                        </div>\n                                                    </AvForm>\n                                                </div>\n                                            </CardBody>\n                                        </Card>\n                                    </Col> \n                                <Col md={6} lg={6} xl={6} sm={12}>\n                                    <img className=\"stadium stadium-create\" src={stadium} alt=\"stadium\" />\n                                    <div className=\"writing\">\n                                        <div className=\"text-to-show\">\n                                            A market place for all\n                                        </div>\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        </React.Fragment>\n     );\n    }\n\nexport default withRouter(withTranslation()(stateWrapper(Create)))","/Users/Tolulopeodueke/Developer/jumga-client/src/pages/Store/StoreListing.js",["377","378","379","380","381","382","383","384","385","386"],"import React, { useEffect, useState }  from 'react';\nimport _ from 'lodash';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport CreateStore, {Backdrop} from './CreateStore';\nimport { Container, Row, Col, Button, Card, CardBody, CardTitle, Modal, ModalHeader, ModalBody, ModalFooter, Media, Table } from \"reactstrap\";\nimport stateWrapper from '../../containers/provider';\nimport storefront from \"../../assets/images/store-umbrella.png\";\nimport storefront2 from \"../../assets/images/store-umbrella1.png\";\nimport { withRouter, Link } from 'react-router-dom';\nimport { withTranslation } from 'react-i18next';\nimport './store.scss';\n\nvar randomColor = require('randomcolor');\n\nconst StoreListing = (props) => {\n\n    const [stores, setStores] = useState([]);\n\n    // const [cat, useCat] = useState([]);\n    const [isOpen, setOpen] = useState(false);\n\n    const createStore = () => {\n        setOpen(!isOpen);\n    }\n\n    useEffect(() => {\n        setStores(props.userStore.state.stores);\n    }, [props.userStore.state.stores]);\n\n    useEffect(() => {\n    }, [props.masterStore.state.remoteConfig]);\n\n    const bigScreen = (children) => (\n        <div style={{width: '70%'}} className=\"d-none d-md-block\">\n            {children}\n        </div>\n    );\n\n    const smallScreen = (children) => (\n        <div style={{width: '100%'}} className=\"d-md-none\">\n            {children}\n        </div>\n    );\n\n    const cardBurrow = (children, color = '#f6f7f9') => {\n        const lagreBox = () => <div style={{width: '30%', display: 'block', marginRight: 10, float: 'left'}} className='d-none d-md-inline-block' align=\"left\"> {box} </div>\n        const smallBox = () => <div style={{width: '100%', display: 'block', marginRight: 10, float: 'left'}} className='d-md-none' align=\"left\"> {box} </div>\n\n        const box = (\n            <Card\n                className=\"mt-4 store-listing-card\" \n                style={{borderRadius: 5, backgroundColor: '#faf0be', height: 200}}\n            >\n                <CardBody>\n                    {children}\n                </CardBody>\n            </Card>\n        )\n\n        return (\n            <div key={Date.now()} style={{width: '100%'}}>\n                {lagreBox()}\n                {smallBox()}\n            </div>\n        )\n    }\n    const storelisting = () => {\n        return (\n            <div style={{width: '100%', marginTop: '10%'}}>\n                <Row>\n                    <Col xs=\"12\">\n                        <div className=\"page-title-box d-flex align-items-center justify-content-between\" style={{margin: 0, padding: 0}}>\n                            <h4 className=\"mb-0 font-size-18\">{props.t(\"Recent stores\")}</h4>\n                        </div>\n                        <div style={{width: '100%', margin: 0}} align=\"left\">\n                            {cardBurrow((\n                                <div \n                                    onClick={() => {\n                                        createStore();\n                                    }}\n                                    style={{width: '100%', alignContent: 'center', height: '100%', cursor: 'pointer'}}\n                                >\n                                    <center style={{height: '80%', paddingTop: '20%'}} className=\"d-none d-md-block\">\n                                        <div>\n                                            <i className=\"bx bx-plus text-primary\" style={{fontSize: 20, fontWeight: 'bold'}}></i>\n                                        </div>\n                                        <h4 className=\"mb-0 font-size-16 text-primary\">Add store</h4>\n                                    </center>\n                                    <center style={{height: '100%', paddingTop: '20%'}} className='d-md-none' >\n                                        <div>\n                                            <i className=\"bx bx-plus text-primary\" style={{fontSize: 20, fontWeight: 'bold'}}></i>\n                                        </div>\n                                        <h4 className=\"mb-0 font-size-16 text-primary\">Add store</h4>\n                                    </center>\n                                    <div style={{width: '100%', backgroundColor: 'black', height: 1, opacity: 0.3}}></div>\n                                </div>\n                            ))}\n                            {stores.map((item, id) => {\n                                let categories = item.categories.length > 2 ? item.categories.splice(0,2) : item.categories;\n                                return cardBurrow((\n                                    <div \n                                        key={id}\n                                        onClick={() => {\n                                            props.history.push(`/store/front/${item?.storeId}`);\n                                        }}\n                                        style={{width: '100%', height: '100%', cursor: 'pointer'}}\n                                    >\n                                       <div style={{height: '80%'}}>\n                                            <h4 style={{fontSize: 16}}>{item.store}</h4>\n                                            <p>{item.storeId}</p>\n                                       </div>\n                                       <div style={{height: '20%'}}>\n                                            {categories.map((val, idx) => {\n                                                return (\n                                                    <div key={idx} style={{display: 'inline', marginRight: 4}}>\n                                                        <i className=\"bx bxs-circle font-size-10\" style={{color: randomColor(), marginRight: 3}}></i>\n                                                        <span \n                                                            style={{fontSize: 10 }}\n                                                        >\n                                                            {val}\n                                                        </span>\n                                                    </div>\n                                                )\n                                            })}\n                                       </div>\n                                    </div>\n                                ), '#f7fcf1')\n                            })}\n                       </div>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n\n    return (\n          <React.Fragment>\n                <div style={{position: 'fixed', backgroundColor: 'white', width: '100%', marginTop: 70, height: '40%'}}>\n                    <Row>\n                        <Col xs=\"12\">\n                            <div className=\"page-title-box\">\n                                <LazyLoadImage\n                                    alt={\"Store front\"}\n                                    src={storefront}\n                                    width={300}\n                                    className=\"d-none d-md-block\"\n                                    style={{float: 'right', marginTop: 20, marginRight: 10}}\n                                />\n                                <LazyLoadImage\n                                    alt={\"Store front\"}\n                                    src={storefront2}\n                                    width={300}\n                                    className=\"d-none d-md-block\"\n                                    style={{float: 'left', marginTop: 20, marginLeft: 10}}\n                                />\n                            </div>\n                        </Col>\n                    </Row>\n                </div>\n                <div className=\"page-content\">\n                    <Container fluid>\n                        <center>\n                            {bigScreen(storelisting())}\n                            {smallScreen(storelisting())}\n                        </center>\n                    </Container>\n                </div>\n                <CreateStore isOpen={isOpen} createStore={createStore} categories={props.masterStore.state.categories}/>\n                {isOpen ? <Backdrop createStore={createStore} /> : <></>}\n            </React.Fragment>\n          );\n    }\n        \nexport default withRouter(withTranslation()(stateWrapper(StoreListing)));","/Users/Tolulopeodueke/Developer/jumga-client/src/pages/Store/Cart.js",[],"/Users/Tolulopeodueke/Developer/jumga-client/src/pages/Store/GeneralStoreProducts.js",["387"],"import React, { useEffect, useState } from 'react';\nimport { Container, Row, Col, Card, CardBody, CardTitle, Form, Label, Input, Nav, NavItem, NavLink, Pagination, PaginationItem, PaginationLink } from 'reactstrap';\nimport classnames from 'classnames';\nimport stateWrapper from '../../containers/provider';\nimport { withRouter, Link } from 'react-router-dom';\nimport { withTranslation } from 'react-i18next';\n\n//Import Star Ratings\nimport StarRatings from 'react-star-ratings';\n\n// RangeSlider\nimport Nouislider from \"nouislider-react\";\nimport \"nouislider/distribute/nouislider.css\";\n\n\n//Import Product Images\nimport product1 from \"../../assets/images/product/img-1.png\";\nimport product2 from \"../../assets/images/product/img-2.png\";\nimport product3 from \"../../assets/images/product/img-3.png\";\nimport product4 from \"../../assets/images/product/img-4.png\";\nimport product5 from \"../../assets/images/product/img-5.png\";\nimport product6 from \"../../assets/images/product/img-6.png\";\n\n//Import Breadcrumb\nimport Breadcrumbs from '../../components/Common/Breadcrumb';\n\nconst GeneralStoreProducts = props => {\n    const searchId = props.match.params?.id || '';\n    const [state, setState] = useState({\n        FilterClothes: [\n            { id: 1, name: \"T-shirts\", link: \"#\" },\n            { id: 2, name: \"Shirts\", link: \"#\" },\n            { id: 3, name: \"Jeans\", link: \"#\" },\n            { id: 4, name: \"Jackets\", link: \"#\" },\n        ],\n        Products: [\n            { id: 1, image: product1, name: \"Half sleeve T-shirt\", link: \"#\", rating: 5, oldPrice: 500, newPrice: 450, isOffer: true, offer: -25 },\n            { id: 2, image: product2, name: \"Light blue T-shirt\", link: \"#\", rating: 4, oldPrice: 240, newPrice: 225, isOffer: false, offer: 0 },\n            { id: 3, image: product3, name: \"Black Color T-shirt\", link: \"#\", rating: 4, oldPrice: 175, newPrice: 152, isOffer: true, offer: -20 },\n            { id: 4, image: product4, name: \"Hoodie (Blue)\", link: \"#\", rating: 4, oldPrice: 150, newPrice: 145, isOffer: false, offer: 0 },\n            { id: 5, image: product5, name: \"Half sleeve T-Shirt\", link: \"#\", rating: 4, oldPrice: 145, newPrice: 138, isOffer: true, offer: -22 },\n            { id: 6, image: product6, name: \"Green color T-shirt\", link: \"#\", rating: 4, oldPrice: 138, newPrice: 135, isOffer: true, offer: -28 },\n        ],\n        activeTab: '1',\n    });\n\n    const toggleTab = (tab) => {\n        if (state.activeTab !== tab) {\n            setState({\n                activeTab: tab\n            });\n        }\n    }\n\n    useEffect(() => {\n        (async () => {\n            let result = await props.masterStore.searchForId({\n                id: searchId, //If the value is '' it would return all the products\n            });\n\n            console.log(result);\n            console.log(\"Properties of this component\", props);\n        })();\n    }, []);\n\n    return (\n        <React.Fragment>\n            <div className=\"page-content\">\n                <Container fluid>\n                    <Breadcrumbs title=\"Ecommerce\" breadcrumbItem=\"Product\" />\n                    <Row>\n                        <Col lg=\"3\">\n                            <Card>\n                                <CardBody>\n                                    <CardTitle className=\"mb-4\">\n                                        Filter\n                                    </CardTitle>\n                                    <div>\n                                        <h5 className=\"font-size-14 mb-3\">Clothes</h5>\n                                        {/* Render Cloth Categories */}\n                                        <ul className=\"list-unstyled product-list\">\n                                            {\n                                                state.FilterClothes.map((cloth, key) =>\n                                                    <li key={\"_li_\" + key}><Link to={cloth.link}><i className=\"mdi mdi-chevron-right mr-1\"></i>{cloth.name}</Link></li>\n                                                )\n                                            }\n                                        </ul>\n                                    </div>\n                                    <div className=\"mt-4 pt-3\">\n                                        <h5 className=\"font-size-14 mb-4\">Price</h5>\n                                        <br />\n\n                                        <Nouislider range={{ min: 0, max: 600 }} tooltips={true} start={[100, 500]} connect />\n\n                                    </div>\n\n                                    <div className=\"mt-4 pt-3\">\n                                        <h5 className=\"font-size-14 mb-3\">Discount</h5>\n                                        <div className=\"custom-control custom-checkbox mt-2\">\n                                            <Input type=\"checkbox\" value=\"0\" className=\"custom-control-input\" id=\"productdiscountCheck1\" />\n                                            <Label className=\"custom-control-label\" htmlFor=\"productdiscountCheck1\">Less than 10%</Label>\n                                        </div>\n                                        <div className=\"custom-control custom-checkbox mt-2\">\n                                            <Input type=\"checkbox\" value=\"1\" className=\"custom-control-input\" id=\"productdiscountCheck2\" />\n                                            <Label className=\"custom-control-label\" htmlFor=\"productdiscountCheck2\">10% or more</Label>\n                                        </div>\n                                        <div className=\"custom-control custom-checkbox mt-2\">\n                                            <Input type=\"checkbox\" value=\"2\" className=\"custom-control-input\" id=\"productdiscountCheck3\" defaultChecked />\n                                            <Label className=\"custom-control-label\" htmlFor=\"productdiscountCheck3\">20% or more</Label>\n                                        </div>\n                                        <div className=\"custom-control custom-checkbox mt-2\">\n                                            <Input type=\"checkbox\" value=\"3\" className=\"custom-control-input\" id=\"productdiscountCheck4\" />\n                                            <Label className=\"custom-control-label\" htmlFor=\"productdiscountCheck4\">30% or more</Label>\n                                        </div>\n                                        <div className=\"custom-control custom-checkbox mt-2\">\n                                            <Input type=\"checkbox\" value=\"4\" className=\"custom-control-input\" id=\"productdiscountCheck5\" />\n                                            <Label className=\"custom-control-label\" htmlFor=\"productdiscountCheck5\">40% or more</Label>\n                                        </div>\n                                        <div className=\"custom-control custom-checkbox mt-2\">\n                                            <Input type=\"checkbox\" value=\"5\" className=\"custom-control-input\" id=\"productdiscountCheck6\" />\n                                            <Label className=\"custom-control-label\" htmlFor=\"productdiscountCheck6\">50% or more</Label>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"mt-4 pt-3\">\n                                        <h5 className=\"font-size-14 mb-3\">Customer Rating</h5>\n                                        <div>\n                                            <div className=\"custom-control custom-checkbox mt-2\">\n                                                <Input type=\"checkbox\" className=\"custom-control-input\" id=\"productratingCheck1\" />\n                                                <Label className=\"custom-control-label\" htmlFor=\"productratingCheck1\">4 <i className=\"bx bx-star text-warning\"></i>  & Above</Label>\n                                            </div>\n                                            <div className=\"custom-control custom-checkbox mt-2\">\n                                                <Input type=\"checkbox\" className=\"custom-control-input\" id=\"productratingCheck2\" />\n                                                <Label className=\"custom-control-label\" htmlFor=\"productratingCheck2\">3 <i className=\"bx bx-star text-warning\"></i>  & Above</Label>\n                                            </div>\n                                            <div className=\"custom-control custom-checkbox mt-2\">\n                                                <Input type=\"checkbox\" className=\"custom-control-input\" id=\"productratingCheck3\" />\n                                                <Label className=\"custom-control-label\" htmlFor=\"productratingCheck3\">2 <i className=\"bx bx-star text-warning\"></i>  & Above</Label>\n                                            </div>\n                                            <div className=\"custom-control custom-checkbox mt-2\">\n                                                <Input type=\"checkbox\" className=\"custom-control-input\" id=\"productratingCheck4\" />\n                                                <Label className=\"custom-control-label\" htmlFor=\"productratingCheck4\">1 <i className=\"bx bx-star text-warning\"></i></Label>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </CardBody>\n                            </Card>\n                        </Col>\n\n                        <Col lg=\"9\">\n\n                            <Row className=\"mb-3\">\n                                <Col xl=\"4\" sm=\"6\">\n                                    <div className=\"mt-2\">\n                                        <h5>Clothes</h5>\n                                    </div>\n                                </Col>\n                                <Col lg=\"8\" sm=\"6\">\n                                    <Form className=\"mt-4 mt-sm-0 float-sm-right form-inline\">\n                                        <div className=\"search-box mr-2\">\n                                            <div className=\"position-relative\">\n                                                <Input type=\"text\" className=\"form-control border-0\" placeholder=\"Search...\" />\n                                                <i className=\"bx bx-search-alt search-icon\"></i>\n                                            </div>\n                                        </div>\n                                        <Nav className=\"product-view-nav\" pills>\n                                            <NavItem>\n                                                <NavLink\n                                                    className={classnames({ active: state.activeTab === '1' })}\n                                                    onClick={() => { this.toggleTab('1'); }}\n                                                >\n                                                    <i className=\"bx bx-grid-alt\"></i>\n                                                </NavLink>\n                                            </NavItem>\n                                            <NavItem>\n                                                <NavLink\n                                                    className={classnames({ active: state.activeTab === '2' })}\n                                                    onClick={() => { toggleTab('2'); }}\n                                                >\n                                                    <i className=\"bx bx-list-ul\"></i>\n                                                </NavLink>\n                                            </NavItem>\n                                        </Nav>\n                                    </Form>\n                                </Col>\n                            </Row>\n                            <Row>\n                                {\n                                    state.Products.map((product, key) =>\n                                        <Col xl=\"3\" sm=\"3\" key={\"_col_\" + key}>\n                                            <Card>\n                                                <CardBody>\n                                                    <div className=\"product-img position-relative\">\n                                                        {\n                                                            product.isOffer\n                                                                ? <div className=\"avatar-sm product-ribbon\">\n                                                                    <span className=\"avatar-title rounded-circle  bg-primary\">\n                                                                        {product.offer + \"%\"}\n                                                                    </span>\n                                                                </div>\n                                                                : null\n                                                        }\n\n                                                        <img src={product.image} alt=\"\" className=\"img-fluid mx-auto d-block\" />\n                                                    </div>\n                                                    <div className=\"mt-4 text-center\">\n                                                        <h5 className=\"mb-3 text-truncate\"><Link to={\"/ecommerce-product-detail/\" + product.id} className=\"text-dark\">{product.name} </Link></h5>\n                                                        <div className=\"text-muted mb-3\">\n                                                            <StarRatings\n                                                                rating={product.rating}\n                                                                starRatedColor=\"#F1B44C\"\n                                                                starEmptyColor=\"#2D363F\"\n                                                                numberOfStars={5}\n                                                                name='rating'\n                                                                starDimension=\"14px\"\n                                                                starSpacing=\"3px\"\n                                                            />\n                                                        </div>\n                                                        <h5 className=\"my-0\"><span className=\"text-muted mr-2\"><del>${product.oldPrice}</del></span> <b>${product.newPrice}</b></h5>\n                                                    </div>\n                                                </CardBody>\n                                            </Card>\n                                        </Col>\n                                    )\n                                }\n                            </Row>\n\n                            <Row>\n                                <Col lg=\"12\">\n                                    <Pagination className=\"pagination pagination-rounded justify-content-center\">\n                                        <PaginationItem disabled>\n                                            <PaginationLink previous href=\"#\" />\n                                        </PaginationItem>\n                                        <PaginationItem>\n                                            <PaginationLink href=\"#\">\n                                                1\n                                            </PaginationLink>\n                                        </PaginationItem>\n                                        <PaginationItem active>\n                                            <PaginationLink href=\"#\">\n                                                2\n                                            </PaginationLink>\n                                        </PaginationItem>\n                                        <PaginationItem>\n                                            <PaginationLink href=\"#\">\n                                                3\n                                            </PaginationLink>\n                                        </PaginationItem>\n                                        <PaginationItem>\n                                            <PaginationLink href=\"#\">\n                                                4\n                                            </PaginationLink>\n                                        </PaginationItem>\n                                        <PaginationItem>\n                                            <PaginationLink href=\"#\">\n                                                5\n                                            </PaginationLink>\n                                        </PaginationItem>\n                                        <PaginationItem>\n                                            <PaginationLink next href=\"#\" />\n                                        </PaginationItem>\n                                    </Pagination>\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default withRouter(withTranslation()(stateWrapper(GeneralStoreProducts)));","/Users/Tolulopeodueke/Developer/jumga-client/src/pages/Store/StoreProducts.js",["388","389","390","391","392","393","394","395","396"],"/Users/Tolulopeodueke/Developer/jumga-client/src/pages/Utility/comin-soon.js",["397"],"import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Col } from \"reactstrap\";\n\n//Import Images\nimport thank from \"../../assets/images/thank-you.jpg\";\n\nclass ComingSoon extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"account-pages my-5 pt-5\" style={{position: 'relative', top: 20}}>\n                    <Container>\n                        <Row>\n                            <Col lg=\"12\">\n                                <div className=\"text-center mb-5\">\n                                    <h1 className=\"display-1 font-weight-medium\">Coming S<i className=\"bx bx-buoy bx-spin text-primary display-3\"></i><i className=\"bx bx-buoy bx-spin text-primary display-3\"></i>n</h1>\n                                    <h4 className=\"display-2\" style={{fontSize:16, marginTop: 20, fontFamily: 'Sriracha, cursive'}}>This feature is in the development stack</h4>\n                                    <div className=\"mt-5 text-center\">\n                                        <Link \n                                            className=\"btn btn-success waves-effect waves-light\" \n                                            to=\"#\"\n                                            onClick={e => {\n                                                e.preventDefault();\n                                                this.props.history.goBack();\n                                            }}\n                                        >Go Back</Link>\n                                    </div>\n                                </div>\n                            </Col>\n                        </Row>\n                    </Container>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default ComingSoon;","/Users/Tolulopeodueke/Developer/jumga-client/src/pages/Store/Checkout.js",[],"/Users/Tolulopeodueke/Developer/jumga-client/src/pages/Utility/payment-close.js",[],"/Users/Tolulopeodueke/Developer/jumga-client/src/containers/MasterContainer.js",["398","399"],"import _ from \"lodash\";\nimport firebase from \"firebase/app\";\nimport { v4 as uuidv4 } from 'uuid';\n\n// Add the Firebase products that you want to use\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/functions\";\nimport \"firebase/storage\";\nimport \"firebase/remote-config\";\n\nimport { Container } from \"unstated\";\nimport instance from '../helpers/axiosly';\nimport CONSTANTS from \"../App.constant\";\n\nclass MasterContainer extends Container {\n\n    constructor() {\n        super();\n        this.state = {\n            categories: [],\n            remoteConfigLoading: true,\n            remoteConfigs: {\n                store_cost: 20,\n                currency: 'USD',\n                // facebook_url: 'https://www.facebook.com/jumga',\n                // instagram_url: 'https://www.instagram.com/jumga/?hl=en',\n                // contact_email1: 'info@jumga.com',\n                // contact_phone_no: '+234 807 443 4878',\n                // terms_of_service_url:  'https://www.termsfeed.com/terms-conditions-generator',\n                // privacy_policy_url: 'https://jumga.com/pages/privacy-policy'\n            }\n        }\n\n        this.asyncgetAllRemoteConfigs();\n        this.getAllCategories();\n        \n    }\n\n    getAllRemoteConfigs = async (state) => {\n    \n        try {\n          firebase.remoteConfig().defaultConfig = ({\n            ...state.remoteConfigs\n          });\n          await firebase.remoteConfig().fetchAndActivate();\n          // console.log(\"remoteConfig activated == \", activated);\n          let jsonRemoteConfig = firebase.remoteConfig().getAll();\n    \n          if (!_.isEmpty(jsonRemoteConfig)) {\n    \n            let updatedState = {...state};\n    \n            let remoteConfig = {};\n            \n            Object.entries(jsonRemoteConfig).forEach(($) => {\n              \n              const [key, entry] = $;\n              remoteConfig[key] = entry._value;\n             \n            });\n    \n            updatedState.remoteConfigs = remoteConfig;\n    \n            return updatedState;\n          }\n        } \n        catch (error) {\n          console.log(`fetching values for remoteConfig produced an error == `, error);\n          return state.remoteConfig;\n        }\n    }  \n\n    asyncgetAllRemoteConfigs = async () => {\n        let config = await this.getAllRemoteConfigs(this.state);\n        this.setState({\n            ...this.state,\n            remoteConfigs: config.remoteConfigs,\n            remoteConfigLoading: false\n        }, () => {\n            \n        });\n        return config;\n    }\n\n    searchForId = async (searchDetails = {\n      id: '',\n      filter: false,\n      filterPriceMinRange: 0,\n      filterPriceMaxRange: 1000000000,\n      filterDiscountRate: 50,\n      filterCustomerRating: 5,\n      startAt: 0,\n      limit: 10,\n  }) => {\n      try {\n        if (!_.isObject(searchDetails)) return [];\n        const callable = firebase.functions().httpsCallable(CONSTANTS.FUNCNTIONS.SEARCHPRODUCT);\n        const response = await callable(searchDetails);\n        return response.data;\n      } catch(e) {\n        console.log(e);\n        return [];\n      }\n    }\n\n    getProducts = async (searchDetails = {\n      storeId: '',\n      startAt: 0,\n      limit: 10,\n  }) => {\n      try {\n        if (!_.isObject(searchDetails)) return [];\n        const callable = firebase.functions().httpsCallable(CONSTANTS.FUNCNTIONS.GETPRODUCTS);\n        const response = await callable(searchDetails);\n        return response.data;\n      } catch(e) {\n        console.log(e);\n        return [];\n      }\n    }\n\n    getProduct = async (searchDetails = {\n      id: '',\n  }) => {\n      try {\n        if (!_.isObject(searchDetails)) return {};\n        const callable = firebase.functions().httpsCallable(CONSTANTS.FUNCNTIONS.GETPRODUCT);\n        const response = await callable(searchDetails);\n        return response.data;\n      } catch(e) {\n        console.log(e);\n        return [];\n      }\n    }\n\n    getAllCategories = async () => {\n        if (this.state.categories.length > 0) return this.state.categories;\n        const categoriesCollection = CONSTANTS.SCHEMA.CATEGORIES;\n        const categoriesDetailsRef = firebase.firestore().collection(categoriesCollection);\n        const snapshot = await categoriesDetailsRef.get();\n        let cat = [];\n        snapshot.forEach(doc => {\n            cat[doc.id] = doc.data();\n        });\n\n        this.setState({\n            ...this.state,\n            categories: cat\n        });\n\n        return this.state.categories;\n    }\n}\n\nexport { MasterContainer }","/Users/Tolulopeodueke/Developer/jumga-client/src/containers/LayoutContainer.js",[],"/Users/Tolulopeodueke/Developer/jumga-client/src/config.js",[],"/Users/Tolulopeodueke/Developer/jumga-client/src/containers/PaymentContainer.js",["400","401"],"import * as _ from \"lodash\";\nimport firebase from \"firebase/app\";\nimport { v4 as uuidv4 } from 'uuid';\n\n// Add the Firebase products that you want to use\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/functions\";\nimport \"firebase/storage\";\nimport \"firebase/remote-config\";\n\nimport { Container } from \"unstated\";\nimport CONSTANTS from \"../App.constant\";\nimport axios from 'axios';\nimport { firebaseConfigParams } from '../config';\nimport { get } from \"lodash\";\n\nclass PaymentContainer extends Container {\n\n    constructor() {\n        super();\n        this.state = {}        \n    }\n\n    initiatePayment = async (paymentDetails) => {\n        try {\n            const callable = firebase.functions().httpsCallable(CONSTANTS.FUNCNTIONS.PROCESSPAYMENT);\n            const response = await callable(paymentDetails);\n            return response.data;\n        } catch(e) {\n            console.log(e);\n        }\n    }\n\n    convertToLocalCurrency = async (price, currency) => {\n        try {\n            if (_.isNull(currency) || _.isNull(price)) return;\n            let ip = await axios.get(firebaseConfigParams.geolocationIpRoute);\n            let result = await axios.get(`${firebaseConfigParams.geolocationRoute}&ip=${ip.data.ip}`);\n            // if (result.data?.status === 'success') {\n                \n            // }\n            let newCurrency = result.data?.currency?.code;\n            if (newCurrency === currency) {\n                const formatter = new Intl.NumberFormat('en-US', {\n                    style: 'currency',\n                    currency: newCurrency,\n                    minimumFractionDigits: 2\n                });\n\n                return {\n                    store_cost: formatter.format(price),\n                    currency: newCurrency,\n                    currencyPricePerDollar: 1,\n                };\n            }\n            let newExchange = await axios.get(`https://free.currconv.com/api/v7/convert?q=${currency}_${newCurrency}&compact=ultra&apiKey=${firebaseConfigParams.currencyExchangeApiKey}`);\n            if(_.isEmpty(newExchange.data)) throw new Error('Something went wrong with currency exchange');\n            let x = Object.keys(newExchange.data).map(i => {\n                return newExchange.data[i];\n            });\n            const formatter = new Intl.NumberFormat('en-US', {\n                style: 'currency',\n                currency: newCurrency,\n                minimumFractionDigits: 2\n            });\n\n            return {\n                store_cost: formatter.format(x[0] * price),\n                currency: newCurrency,\n                currencyPricePerDollar: x[0]\n            };\n            // throw new Error(`${result.data?.status} ${result.data?.message}`);\n        } catch(err) {\n            throw new Error(err);\n        }\n    }\n\n}\n\nexport { PaymentContainer }","/Users/Tolulopeodueke/Developer/jumga-client/src/containers/UserContainer.js",["402","403","404","405","406","407","408","409","410"],"import _ from \"lodash\";\nimport firebase from \"firebase/app\";\nimport { v4 as uuidv4 } from 'uuid';\n\n// Add the Firebase products that you want to use\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/functions\";\nimport \"firebase/storage\";\nimport \"firebase/remote-config\";\n\nimport { Container } from \"unstated\";\nimport instance from '../helpers/axiosly';\nimport CONSTANTS from \"../App.constant\";\nimport { resolve } from \"path\";\n\nclass UserContainer extends Container {\n    \n    constructor(firebaseConfig) {\n        super();\n        this.state = {\n            user: null,\n            stores: [],\n            storeLoaded: false,\n        }\n\n        if (firebaseConfig) {\n            // Initialize Firebase\n            firebase.initializeApp(firebaseConfig);\n            firebase.auth().onAuthStateChanged(user => {\n              if (user) {\n                localStorage.setItem(CONSTANTS.SESSIONSTORE, JSON.stringify(user));\n                this.getUserDataFromFirebase();\n              } else {\n                localStorage.removeItem(CONSTANTS.SESSIONSTORE);\n              }\n            });\n            this.firebase = firebase;\n        }\n    }\n\n    _handleError(error) {\n        let errorMessage = error.message;\n        console.log(errorMessage);\n        return errorMessage;\n    }\n\n    goBack = (props) => {\n        props.history.goBack();\n    }\n\n    checkIfUserHasPaid = async (email) => {\n        return false;\n    }\n\n    uploadImage = (image, getTransferRate = () => {}) => {\n        return new Promise((resolve, reject) => {\n            try {\n                if (!String(image?.type).includes(\"image\")) {\n                    return;\n                }\n                var storageRef = firebase.storage().ref();\n                let ref = storageRef.child(uuidv4());\n                let uploadTask = ref.put(image);\n                uploadTask.on('state_changed', function(snapshot){\n                    // Observe state change events such as progress, pause, and resume\n                    // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n                    var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                    getTransferRate('Upload is ' + progress + '% done');\n                    console.log('Upload is ' + progress + '% done');\n                    switch (snapshot.state) {\n                      case firebase.storage.TaskState.PAUSED: // or 'paused'\n                        console.log('Upload is paused');\n                        break;\n                      case firebase.storage.TaskState.RUNNING: // or 'running'\n                        console.log('Upload is running');\n                        break;\n                    }\n                  }, function(error) {\n                    // Handle unsuccessful uploads\n                    reject();\n                  }, function() {\n                    // Handle successful uploads on complete\n                    // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n                    uploadTask.snapshot.ref.getDownloadURL().then(function(downloadURL) {\n                      console.log('File available at', downloadURL);\n                      resolve(downloadURL);\n                    });\n                  });\n               } catch(e) {\n                   this._handleError(e);\n               }\n        });\n    }\n\n    createProduct = async ({\n        images = [],\n        productname,\n        manufacturename,\n        manufacturebrand,\n        pastprice,\n        currentprice,\n        productdesc,\n        metaname,\n        metakeywords,\n        metadescription,\n        categories,\n        storeId,\n    }) => {\n        try {\n\n            const productCollection = CONSTANTS.SCHEMA.PRODUCTS;\n            const id = `${storeId}${uuidv4()}`;\n            const productRef = firebase.firestore().doc(`${productCollection}/${id}`);\n            await productRef.set({\n                images,\n                productname,\n                manufacturename,\n                manufacturebrand,\n                pastprice,\n                currentprice,\n                productdesc,\n                metaname,\n                metakeywords,\n                metadescription,\n                categories,\n                storeId,\n                starRating: 0,\n                reviews: [],\n                createdAt: Date.now()\n            });\n            return id;\n\n        } catch(e) {\n            throw new Error(e);\n        }\n    }\n\n    signUp = async ({\n        email,\n        password,\n        username,\n        userType,\n        downloadURL,\n        approved = false,\n        createdAt = Date.now(),\n        paymentDates = [],\n        stores = []\n    }, checkError = () => {}) => {\n        try {\n            let auth = firebase.auth();\n            await auth.createUserWithEmailAndPassword(email, password);\n            const userCollection = CONSTANTS.SCHEMA.USER;\n            const userDetailsRef = firebase.firestore().doc(`${userCollection}/${email}`);\n            await userDetailsRef.set({\n                email,\n                username,\n                stores,\n                userType,\n                downloadURL,\n                approved,\n                createdAt,\n                paymentDates\n            });\n\n            await this.signIn({email, password});\n        } catch(err) {\n            console.log(err);\n            checkError(err?.message);\n        }\n    }\n\n    getUserStore = async (callback = () => {}) => {\n        const storeCollection = CONSTANTS.SCHEMA.STORES;\n        const storeDetailsRef = firebase.firestore().collection(storeCollection);\n        const query = storeDetailsRef.where('userEmail', '==', this.state.user.email);\n        const docs = await query.get();\n\n        if (docs.empty) return null;\n\n        let x = [];\n\n        docs.forEach(doc => {\n            const store = doc.data();\n            x.push(store);\n        });\n\n        this.setState({\n            stores: x,\n            storeLoaded: true\n        }, callback);\n\n        return x;\n    }\n\n    checkifApproved = (storeId) => {\n        let checkApproval = this.state.stores.filter(item => {\n            return item.storeId == storeId && item.approved == true\n        });\n\n        if (checkApproval.length > 0) return true;\n        return false;\n    }\n\n    createStore = async ({\n        store,\n        categories = [],\n        storeId,\n        paymentDates = [],\n        approved = false,\n        userEmail,\n        dispatchRiders = null,\n        createdDate = Date.now(),\n        dateVisited = Date.now(),\n    }, props) => {\n        const storeCollection = CONSTANTS.SCHEMA.STORES;\n        const userCollection = CONSTANTS.SCHEMA.USER;\n        const storeDetailsRef = firebase.firestore().doc(`${storeCollection}/${storeId}`);\n        const userDetailsRef = firebase.firestore().doc(`${userCollection}/${userEmail}`);\n        const userData = await userDetailsRef.get();\n        const storeData = await storeDetailsRef.get();\n        if (storeData.exists) {\n            storeId = `${storeId}${Date.now()}`;\n        }\n\n        await storeDetailsRef.set({\n            store,\n            categories,\n            storeId,\n            paymentDates,\n            approved,\n            userEmail,\n            dispatchRiders,\n            createdDate,\n            dateVisited,\n            wallentBalance: 0.00\n        });\n\n        let user = {...userData.data()};\n        user.stores.push(storeId);\n        await userDetailsRef.update(user);\n        await this.getUserStore(() => {props.history.push('/store/get-approved')});\n    }\n\n    getUser = () => {\n        let user = localStorage.getItem(CONSTANTS.SESSIONSTORE);\n        if (user) {\n            user = JSON.parse(user);\n            return user.data;\n        } \n        return {}\n    }\n\n    storeNameCleanUp = name => {\n        return String(name).trim().replace(/\\s/g, '-').replace(/[\\@\\\"\\']+/g, '').toLowerCase();\n    }\n\n    checkIfStoreNameExists = async (storename) => {\n        let db = this.firebase.firestore();\n        const store = db.collection(CONSTANTS.SCHEMA.STORES);\n        const query = store.where(\"storeId\", '==', storename);\n        const docs = await query.get();\n        if (docs.empty) {\n            return {\n                status: false,\n            }\n        }\n        let x = uuidv4();\n\n        return {\n            status: true,\n            recommendation: this.storeNameCleanUp(`${storename}${String(x).substring(0, parseInt(_.random(3, x.length)))}`)\n        }\n    }\n\n    checkIfEmailExists = async (email) => {\n        let db = this.firebase.firestore();\n        const user = db.collection(CONSTANTS.SCHEMA.USER);\n        const query = user.where(\"email\", '==', email);\n        const docs = await query.get();\n        if (docs.empty) {\n            return {\n                status: false,\n            }\n        }\n\n        return {\n            status: true,\n        }\n    }\n\n    logOut = async (props) => {\n        try {\n            let user = await firebase.auth().signOut();\n            localStorage.removeItem(CONSTANTS.SESSIONBEARER);\n            localStorage.removeItem(CONSTANTS.SESSIONSTORE);\n            this.setState({\n                user: null,\n                stores: [],\n                storeLoaded: false,\n            })\n            props.history.push(\"/store/login\");\n        } catch(err) {\n            this._handleError(err);\n        }\n    }\n\n    getUserDataFromFirebase = async () => {\n        if (!_.isNull(this.state.user)) return;\n        const auth = firebase.auth();\n        const user = await auth.currentUser;\n\n        if (user) {\n            const userCollection = CONSTANTS.SCHEMA.USER;\n            const userDetailsRef = firebase.firestore().doc(`${userCollection}/${user.email}`);\n            const userDoc = await userDetailsRef.get();\n            if(userDoc.exists) {\n                await this.setState({\n                    user: userDoc.data()\n                }, () => {\n                    this.getUserStore();\n                });\n            }\n        }\n    }\n\n    trackApproval = async (storeId, callback) => {\n        const doc = firebase.firestore().collection(CONSTANTS.SCHEMA.STORES).doc(storeId);\n        doc.onSnapshot(docSnapShot => {\n            callback(docSnapShot.data());\n        });\n    }\n\n    signIn = async ({\n        email,\n        password\n    }) => {\n        try {\n            let auth = firebase.auth();\n            await auth.signInWithEmailAndPassword(email, password);\n            await this.getUserDataFromFirebase();\n            return {\n                status: true\n            }\n        } catch(err) {\n            return {\n                status: false,\n                message: err?.message\n            }\n        }\n    }\n\n}\n\nexport { UserContainer }","/Users/Tolulopeodueke/Developer/jumga-client/src/components/Layout/Footer.js",[],"/Users/Tolulopeodueke/Developer/jumga-client/src/components/Layout/Sidebar.js",[],"/Users/Tolulopeodueke/Developer/jumga-client/src/components/Layout/Header.js",["411","412","413","414","415","416","417","418","419","420","421"],"import React, { useState } from 'react';\n\nimport { Row, Col } from \"reactstrap\";\n\nimport { Route,Redirect,withRouter, Link } from \"react-router-dom\";\nimport {  UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from \"reactstrap\";\n\n// Import menuDropdown\nimport NotificationDropdown from \"../CommonForBoth/TopbarDropdown/NotificationDropdown\";\nimport ProfileMenu from \"../CommonForBoth/TopbarDropdown/ProfileMenu\";\nimport logo from \"../../assets/images/jumga basket logo.png\";\nimport logoDark from \"../../assets/images/jumga logo.png\";\n\n\n\n//i18n\nimport { withTranslation } from 'react-i18next';\nimport stateWrapper from '../../containers/provider';\n\n\nconst Header = (props) => {\n\n  const [search, setsearch] = useState(false);\n  const [megaMenu, setmegaMenu] = useState(false);\n  const [socialDrp, setsocialDrp] = useState(false);\n\n  const storeId = props.match.params?.id;\n\n  function tToggle()\n{\n    props.layoutStore._toggleLeftmenu(!props.layoutStore.state.leftMenu);\n    if (props.layoutStore.state.leftSideBarType === \"default\") {\n        props.layoutStore._changeSidebarType(\"condensed\", props.layoutStore.state.leftMenu);\n        props.layoutStore.changeLeftSidebarType({ payload: { sidebarType: \"condensed\", isMobile: props.layoutStore.state.leftMenu}});\n    } else if (props.layoutStore.state.leftSideBarType === \"condensed\") {\n      props.layoutStore.changeLeftSidebarType({ payload: { sidebarType: \"default\", isMobile: props.layoutStore.state.leftMenu}});\n      props.layoutStore._changeSidebarType(\"default\", props.layoutStore.state.leftMenu);\n    }  \n}\n\n  const isMobile =  /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n\n  const processStoreListiing = () => {\n    let x = props.userStore.state.stores.filter(item => {\n      return item.storeId !== storeId;\n    });\n\n    return x.length > 0 ? x.map((item, id) => {\n      return (\n        <div key={id}>\n          <Link to={`/store/front/${item.storeId}`}>\n            {item.store}\n          </Link>\n        </div>\n      )\n    }) : (\n      <div>Nothing Here</div>\n    )\n  }\n\n      return (\n       <React.Fragment>\n        <header id=\"page-topbar\">\n          <div className=\"navbar-header\">\n            <div className=\"d-flex\">\n              <div className=\"navbar-brand-box\">\n                <Link to=\"/store/front\" className=\"logo logo-dark\">\n                  <span className=\"logo-sm\" style={{position: 'relative', left: '-60%'}}>\n                    <img src={logo} alt=\"\" height=\"30\" />\n                  </span>\n                  <span className=\"logo-lg\">\n                    <img src={logoDark} alt=\"\" height=\"30\" />\n                  </span>\n                </Link>\n              </div>\n\n              <div onClick={() => {   tToggle() }}>\n                  <UncontrolledDropdown>\n                      <DropdownToggle href=\"#\" className=\"card-drop\" tag=\"i\">\n                        <span className=\"d-none d-lg-inline-block\">Stores</span>\n                      <button \n                         type=\"button\"\n                         className=\"btn btn-sm px-3 font-size-16 header-item waves-effect\" id=\"vertical-menu-btn\"\n                         style={{display: 'inline-block'}}\n                         >\n                        <i className=\"fa fa-fw fa-bars\"></i>\n                      </button>\n                      </DropdownToggle>\n                      <DropdownMenu left>\n                          <DropdownItem href=\"#\" onClick={e => e.preventDefault()}>\n                              {processStoreListiing()}\n                          </DropdownItem>\n                      </DropdownMenu>\n                  </UncontrolledDropdown>\n              </div>\n            </div>\n            <div className=\"d-flex\">\n              <NotificationDropdown />\n              <ProfileMenu />\n            </div>\n          </div>\n        </header>\n      </React.Fragment>\n      );\n    }\n\nexport default withRouter(withTranslation()(stateWrapper(Header)));\n","/Users/Tolulopeodueke/Developer/jumga-client/src/components/UserLayout/Header.js",["422","423","424","425","426","427","428","429","430","431","432"],"import React, { useState } from 'react';\n\nimport { Row, Col } from \"reactstrap\";\n\nimport { Route,Redirect,withRouter, Link } from \"react-router-dom\";\nimport {  UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from \"reactstrap\";\n\n// Import menuDropdown\nimport NotificationDropdown from \"../CommonForBoth/TopbarDropdown/NotificationDropdown\";\nimport ProfileMenu from \"../CommonForBoth/TopbarDropdown/ProfileMenu\";\nimport logo from \"../../assets/images/jumga basket logo.png\";\nimport logoDark from \"../../assets/images/jumga logo.png\";\n\n\n\n//i18n\nimport { withTranslation } from 'react-i18next';\nimport stateWrapper from '../../containers/provider';\n\n\nconst Header = (props) => {\n  const [search, setsearch] = useState(false);\n  const [megaMenu, setmegaMenu] = useState(false);\n  const [socialDrp, setsocialDrp] = useState(false);\n\n  const storeId = props.match.params?.id;\n\n  const isMobile =  /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n\n  const processStoreListiing = () => {\n    let x = props.userStore.state.stores.filter(item => {\n      return item.storeId !== storeId;\n    })\n\n    return x.length > 0 ? x.map((item, id) => {\n      return (\n        <div key={id}>\n          <Link to={`/store/front/${item.storeId}`}>\n            {item.store}\n          </Link>\n        </div>\n      )\n    }) : (\n      <div>Nothing Here</div>\n    )\n  }\n\n      return (\n       <React.Fragment>\n        <header id=\"page-topbar\">\n          <div className=\"navbar-header\">\n            <div className=\"d-flex\">\n              <div className=\"navbar-brand-box\">\n                <Link to=\"/\" className=\"logo logo-dark\">\n                  <span className=\"logo-sm\" style={{position: 'relative', left: '-60%'}}>\n                    <img src={logo} alt=\"\" height=\"30\" />\n                  </span>\n                  <span className=\"logo-lg\">\n                    <img src={logoDark} alt=\"\" height=\"30\" />\n                  </span>\n                </Link>\n              </div>\n\n              <div>\n                  <UncontrolledDropdown>\n                      <DropdownToggle href=\"#\" className=\"card-drop\" tag=\"i\">\n                        <span className=\"d-none d-lg-inline-block\">Stores</span>\n                      <button \n                         type=\"button\"\n                         className=\"btn btn-sm px-3 font-size-16 header-item waves-effect\" id=\"vertical-menu-btn\"\n                         style={{display: 'inline-block'}}\n                         >\n                        <i className=\"fa fa-fw fa-bars\"></i>\n                      </button>\n                      </DropdownToggle>\n                      <DropdownMenu left>\n                          <DropdownItem href=\"#\" onClick={e => e.preventDefault()}>\n                              {processStoreListiing()}\n                          </DropdownItem>\n                      </DropdownMenu>\n                  </UncontrolledDropdown>\n              </div>\n            </div>\n            <div className=\"d-flex\">\n              <NotificationDropdown />\n              <ProfileMenu />\n            </div>\n          </div>\n        </header>\n      </React.Fragment>\n      );\n    }\n\nexport default withRouter(withTranslation()(stateWrapper(Header)));\n","/Users/Tolulopeodueke/Developer/jumga-client/src/components/Common/Breadcrumb.js",[],"/Users/Tolulopeodueke/Developer/jumga-client/src/components/CommonForBoth/TopbarDropdown/ProfileMenu.js",["433"],"import React, { useState, useEffect } from 'react';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport * as _ from 'lodash';\nimport stateWrapper from \"../../../containers/provider\";\n\n//i18n\nimport { withTranslation } from 'react-i18next';\n// Redux\nimport { withRouter, Link } from 'react-router-dom';\n\n\n// users\nimport  {firebaseConfigParams} from '../../../config';\n\nconst configParams = firebaseConfigParams;\n\nconst ProfileMenu = (props) => {\n   // Declare a new state variable, which we'll call \"menu\"\n   const [menu, setMenu] = useState(false);\n   const [username, setusername] = useState(\"User\");\n   const [image, setImage] = useState(null);\n\n   useEffect(() => {\n       let user = props.userStore.state.user;\n\n       if (!_.isNull(user)) {\n            setusername(String(user?.username).split(' ')[0]);\n            if(String(user?.downloadURL).length >0 || user?.downloadURL != null) {\n                setImage(user?.downloadURL);\n            }\n       }\n   },[props.userStore.state.user]);\n\n   const logOut = (e) => {\n        e.preventDefault();\n        props.userStore.logOut(props);\n   }\n\n  return (\n    <React.Fragment>\n                <Dropdown isOpen={menu} toggle={() => setMenu(!menu)} className=\"d-inline-block\" >\n                    <DropdownToggle className=\"btn header-item waves-effect\" id=\"page-header-user-dropdown\" tag=\"button\">\n                        {_.isNull(image) ? \n                            < div \n                                style={{\n                                    color: 'white', \n                                    backgroundColor: 'rgba(230,0,103, 1)', \n                                    borderRadius: '50%',\n                                    fontWeight: 'bold',\n                                    paddingTop: 5,\n                                    width: 30,\n                                    height: 30,\n                                    textAlign: 'center'\n                                }}\n                            >\n                                {String(username).substring(0,2).toUpperCase()}\n                            </div> :\n                            <img className=\"rounded-circle header-profile-user \" src={image} alt=\"\" />\n                        }\n                        <i className=\"mdi mdi-chevron-down d-none d-xl-inline-block\"></i>\n                    </DropdownToggle>\n                    <DropdownMenu right>\n                        <DropdownItem tag=\"a\"  href=\"/profile\"> <i className=\"bx bx-user font-size-16 align-middle mr-1\"></i>{props.t('Profile')}  </DropdownItem>\n                        <DropdownItem tag=\"a\" href=\"#\"><span className=\"badge badge-success float-right\">11</span><i className=\"mdi mdi-settings font-size-17 align-middle mr-1\"></i>{props.t('Settings')}</DropdownItem>\n                        <div className=\"dropdown-divider\"></div>\n                        <Link to=\"/logout\" onClick={logOut} className=\"dropdown-item\">\n                            <i className=\"bx bx-power-off font-size-16 align-middle mr-1 text-danger\"></i>\n                            <span>{props.t('Logout')}</span>\n                        </Link>\n                    </DropdownMenu>\n                </Dropdown>\n            </React.Fragment>\n  );\n}\n\nexport default withRouter(withTranslation()(stateWrapper(ProfileMenu)));\n\n","/Users/Tolulopeodueke/Developer/jumga-client/src/components/CommonForBoth/TopbarDropdown/NotificationDropdown.js",[],"/Users/Tolulopeodueke/Developer/jumga-client/src/components/Layout/SidebarContent.js",[],"/Users/Tolulopeodueke/Developer/jumga-client/src/helpers/axiosly.js",[],"/Users/Tolulopeodueke/Developer/jumga-client/src/pages/Store/CreateStore.js",["434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458"],"import React, { useEffect, useState, useRef }  from 'react';\nimport _ from 'lodash';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport { AvForm, AvField, AvGroup, AvInput, AvFeedback, AvRadioGroup, AvRadio, AvCheckboxGroup, AvCheckbox } from 'availity-reactstrap-validation';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport { Container, Row, Col, Button, Card, CardBody, CardTitle, Modal, ModalHeader, ModalBody, ModalFooter, Media, Table } from \"reactstrap\";\nimport stateWrapper from '../../containers/provider';\nimport storefront from \"../../assets/images/store-umbrella.png\";\nimport storefront2 from \"../../assets/images/store-umbrella1.png\";\nimport { withRouter, Link } from 'react-router-dom';\nimport './create-store.scss';\nimport { withTranslation } from 'react-i18next';\nimport { createStore } from 'redux';\n\nconst CreateStore = (props) => {\n    const [state, setState] = useState({\n        isOpen: props.isOpen,\n        store: null,\n        storeId: null,\n    });\n\n    const [categories, setCat] = useState([]);\n    const [checkedCat, setCheckedCat] = useState({});\n\n    useEffect(() => {\n        let x = async () => {\n            let t = await props.masterStore.getAllCategories();\n            let temp = {};\n            let newTemp = [];\n            Object.keys(t).map(i => {\n                temp[i] = false;\n                newTemp.push(i);\n                let x = t[i];\n                Object.keys(x).map(y => {\n                    temp[y] = false;\n                    newTemp.push(y);\n                    x[y].map(z => {\n                        temp[z] = false;\n                        newTemp.push(z);\n                    });\n                })\n            });\n\n            setCheckedCat(temp);\n            setCat(newTemp);\n        }\n\n        x();\n    }, [props.masterStore]);\n\n    const form = useRef();\n\n    let timeout = null;\n\n    useEffect(() => {\n        setState({...state, isOpen: props.isOpen});\n    }, [props.isOpen]);\n\n    let drawerClasses =  state.isOpen ? 'side-drawer open' : 'side-drawer';\n\n    const bigScreen = (children) => (\n        <div style={{width: '70%',  marginTop: '4%'}} className=\"d-none d-md-block\">\n            {children}\n        </div>\n    );\n\n    const smallScreen = (children) => (\n        <div style={{width: '100%', marginTop: '4%'}} className=\"d-md-none\">\n            {children}\n        </div>\n    );\n\n    const checkBox = item => {\n        let temp = {...checkedCat};\n        temp[`${item}`] = !temp[`${item}`];\n        setCheckedCat(temp);\n    }\n\n    const handleValidSubmit = (e, v) => {\n        e.preventDefault();\n        let newValues = {\n            ...v,\n            categories: Object.keys(checkedCat).filter(itemx => {\n                if (checkedCat[itemx] == true) return itemx;\n            }),\n            storeId: state.storeId,\n            paymentDates: [],\n            approved: false,\n            userEmail: props?.userStore?.state?.user?.email,\n            dispatchRiders: null,\n            createdDate: Date.now(),\n            dateVisited: Date.now(),\n        }\n\n        props.userStore.createStore(newValues, props);\n    }\n\n      const processStoreName = async (e) => {\n        let checker = await props.userStore.checkIfStoreNameExists(props.userStore.storeNameCleanUp(e));\n        console.log(checker);\n        if (checker?.status) {\n            await setState({\n                ...state, \n                storeId: checker?.recommendation,\n            });\n            return;\n        }\n\n        await setState({...state, storeId: props.userStore.storeNameCleanUp(e)});\n        return;\n    }\n\n    const screen = (\n        <Row>\n            <Col xs=\"12\">\n                <Card style={{backgroundColor: '#f8f8fb'}}>\n                    <CardBody>\n                        <div>\n                            <i\n                                 className=\"bx bx-arrow-back\" style={{marginRight: 10, fontSize: 16, cursor: 'pointer'}}\n                                 onClick={props.createStore}\n                            ></i>\n                            <span style={{fontSize: 16, fontWeight: 'lighter'}}>Create a store</span>\n                        </div>\n                        <div style={{marginTop: '10%'}}>\n                            <div style={{fontSize: '23px', lineHeight: '32px', fontWeight: '500'}}>\n                                Let's start with a name for your \n                                <h1 className=\"ml1\" style={{color: '#d3212d'}}>\n                                    <span className=\"text-wrapper\">\n                                        <span className=\"line line1\"></span>\n                                        <span className=\"letters\">Store</span>\n                                        <span className=\"line line2\"></span>\n                                    </span>\n                                </h1>\n                            </div>\n\n                            <AvForm ref={form} className=\"form-horizontal\" onValidSubmit={(e,v) => { handleValidSubmit(e,v) }}>\n                                <AvGroup>\n                                    <AvInput\n                                        style={{fontSize: '23px', color: 'black', outline: 0, backgroundColor: 'inherit', fontWeight: '500'}}\n                                        validate={{\n                                            minLength: { value: 3, errorMessage: \"Storename must be more than 3 letters\"},\n                                            maxLength: { value: 20, errorMessage: 'Storename must be lest than 20 letters'}\n                                        }}\n                                        placeholder=\"Enter your store name\"\n                                        name=\"store\" \n                                        id=\"store\" \n                                        required\n                                        autoComplete=\"off\"\n                                        onChange={async (e) => {\n                                            const { name, value} = e.target;\n                                            let temp = state;\n                                            await setState({\n                                                ...temp, \n                                                store: value\n                                            });\n                                            clearTimeout(timeout);\n                                            if (String(value).length >= 3) {    \n                                                timeout = setTimeout(() => {\n                                                    processStoreName(value);\n                                                }, 1000);\n                                            }\n                                        }}\n\n                                    />\n                                </AvGroup>\n                                \n                                <div className=\"bg-warning\" style={{padding: 3, color: 'white', borderRadius: 10, display: 'inline-block', marginBottom: '4%'}}>{state.storeId}</div>\n                                    \n                                <div style={{fontSize: '23px', lineHeight: '32px', fontWeight: '500', marginBottom: '4%'}}>\n                                    Now choose your store categories (max of 10)\n                                </div>\n                                \n                                <div style={{marginBottom: '5%'}}>\n                                    {\n                                        categories.map((item, idd) => {\n                                            return (\n                                                <span className=\"custom-control custom-checkbox mb-3\" key={idd} style={{margin: 5, display: 'inline-block'}}>\n                                                    <input name={item} type=\"checkbox\" className=\"custom-control-input\" id=\"CustomCheck1\" onChange={() => checkBox(item)} checked={checkedCat[`${item}`]} />\n                                                    <label className=\"custom-control-label\" onClick={() => checkBox(item)} >{item}</label>\n                                                </span>\n                                                \n                                            )\n                                        })\n                                    }\n                                </div>\n\n                                <div className=\"mt-3\">\n                                    <button\n                                        className=\"btn btn-primary btn-block waves-effect waves-light\" \n                                        type=\"submit\"\n                                        style={{width: 300}}\n                                    >\n                                        Create & Prooceed to Payment\n                                    </button>\n                                </div>\n                            </AvForm>\n\n\n                        </div>\n                    </CardBody>\n                </Card>\n            </Col>\n        </Row>\n    )\n\n    return (\n        <React.Fragment>\n            <div style={{width: '100%'}}>   \n            <div className={drawerClasses} style={{position: state.isOpen ? 'absolute' : 'fixed'}}>\n                    <div className=\"d-none d-md-block\" style={{position: 'fixed', backgroundColor: 'white', width: '25%', height: '100%', right: '0%'}}>\n                        <Row>\n                            <Col xs=\"12\">\n                                <div className=\"page-title-box\">\n                                    <LazyLoadImage\n                                        alt={\"Store front\"}\n                                        src={storefront}\n                                        width={300}\n                                        className=\"d-none d-md-block store-front\"\n                                        style={{position:'relative', marginTop: '70%', marginRight: 10, left: -20}}\n                                    />\n                                </div>\n                            </Col>\n                        </Row>\n                    </div>\n                    <div className=\"page-content\">\n                        <Container fluid>\n                            {bigScreen(screen)}\n                            {smallScreen(screen)}\n                        </Container>\n                    </div>\n            </div>\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport const Backdrop = props => {\n    return(\n        <div className=\"backdrop\" onClick={props.createStore}/>\n      )\n  }\n  \n\nexport default withRouter(withTranslation()(stateWrapper(CreateStore)));","/Users/Tolulopeodueke/Developer/jumga-client/src/components/Common/ErrorMessage.js",["459","460","461","462","463","464","465","466","467"],"import React, { useEffect, useState } from 'react';\nimport { Row, Col, CardBody, Card, Alert,Container, Label } from \"reactstrap\";\nimport \"./errormsg.scss\";\n\n\nconst ErrorMessage = ({\n    isError = false,\n    message = '',\n}) => {\n    return isError ? (\n        <center>\n            <div className=\"error\">\n                {message}\n            </div>\n        </center>\n    ) : <></>;\n}\n\nexport default ErrorMessage;","/Users/Tolulopeodueke/Developer/jumga-client/src/pages/Store/card-store-checkout.js",[],{"ruleId":"468","replacedBy":"469"},{"ruleId":"470","replacedBy":"471"},{"ruleId":"472","severity":1,"message":"473","line":1,"column":28,"nodeType":"474","messageId":"475","endLine":1,"endColumn":37},{"ruleId":"472","severity":1,"message":"476","line":2,"column":42,"nodeType":"474","messageId":"475","endLine":2,"endColumn":47},{"ruleId":"472","severity":1,"message":"477","line":7,"column":8,"nodeType":"474","messageId":"475","endLine":7,"endColumn":22},{"ruleId":"472","severity":1,"message":"478","line":1,"column":8,"nodeType":"474","messageId":"475","endLine":1,"endColumn":13},{"ruleId":"472","severity":1,"message":"479","line":2,"column":10,"nodeType":"474","messageId":"475","endLine":2,"endColumn":18},{"ruleId":"472","severity":1,"message":"480","line":60,"column":7,"nodeType":"474","messageId":"475","endLine":60,"endColumn":24},{"ruleId":"472","severity":1,"message":"473","line":1,"column":17,"nodeType":"474","messageId":"475","endLine":1,"endColumn":26},{"ruleId":"472","severity":1,"message":"479","line":2,"column":16,"nodeType":"474","messageId":"475","endLine":2,"endColumn":24},{"ruleId":"472","severity":1,"message":"481","line":4,"column":13,"nodeType":"474","messageId":"475","endLine":4,"endColumn":14},{"ruleId":"472","severity":1,"message":"482","line":6,"column":8,"nodeType":"474","messageId":"475","endLine":6,"endColumn":16},{"ruleId":"472","severity":1,"message":"483","line":7,"column":16,"nodeType":"474","messageId":"475","endLine":7,"endColumn":22},{"ruleId":"472","severity":1,"message":"484","line":15,"column":8,"nodeType":"474","messageId":"475","endLine":15,"endColumn":17},{"ruleId":"472","severity":1,"message":"473","line":1,"column":17,"nodeType":"474","messageId":"475","endLine":1,"endColumn":26},{"ruleId":"472","severity":1,"message":"479","line":2,"column":16,"nodeType":"474","messageId":"475","endLine":2,"endColumn":24},{"ruleId":"472","severity":1,"message":"484","line":3,"column":8,"nodeType":"474","messageId":"475","endLine":3,"endColumn":17},{"ruleId":"472","severity":1,"message":"473","line":1,"column":17,"nodeType":"474","messageId":"475","endLine":1,"endColumn":26},{"ruleId":"472","severity":1,"message":"481","line":4,"column":13,"nodeType":"474","messageId":"475","endLine":4,"endColumn":14},{"ruleId":"472","severity":1,"message":"482","line":6,"column":8,"nodeType":"474","messageId":"475","endLine":6,"endColumn":16},{"ruleId":"472","severity":1,"message":"483","line":7,"column":16,"nodeType":"474","messageId":"475","endLine":7,"endColumn":22},{"ruleId":"472","severity":1,"message":"473","line":1,"column":17,"nodeType":"474","messageId":"475","endLine":1,"endColumn":26},{"ruleId":"472","severity":1,"message":"485","line":1,"column":28,"nodeType":"474","messageId":"475","endLine":1,"endColumn":36},{"ruleId":"472","severity":1,"message":"481","line":4,"column":13,"nodeType":"474","messageId":"475","endLine":4,"endColumn":14},{"ruleId":"472","severity":1,"message":"482","line":6,"column":8,"nodeType":"474","messageId":"475","endLine":6,"endColumn":16},{"ruleId":"472","severity":1,"message":"483","line":7,"column":16,"nodeType":"474","messageId":"475","endLine":7,"endColumn":22},{"ruleId":"472","severity":1,"message":"473","line":1,"column":17,"nodeType":"474","messageId":"475","endLine":1,"endColumn":26},{"ruleId":"472","severity":1,"message":"481","line":4,"column":13,"nodeType":"474","messageId":"475","endLine":4,"endColumn":14},{"ruleId":"472","severity":1,"message":"482","line":6,"column":8,"nodeType":"474","messageId":"475","endLine":6,"endColumn":16},{"ruleId":"472","severity":1,"message":"483","line":7,"column":16,"nodeType":"474","messageId":"475","endLine":7,"endColumn":22},{"ruleId":"486","severity":1,"message":"487","line":78,"column":29,"nodeType":"488","messageId":"489","endLine":78,"endColumn":31},{"ruleId":"490","severity":1,"message":"491","line":5,"column":1,"nodeType":"492","endLine":29,"endColumn":3},{"ruleId":"472","severity":1,"message":"493","line":33,"column":10,"nodeType":"474","messageId":"475","endLine":33,"endColumn":19},{"ruleId":"472","severity":1,"message":"494","line":33,"column":21,"nodeType":"474","messageId":"475","endLine":33,"endColumn":33},{"ruleId":"495","severity":1,"message":"496","line":45,"column":6,"nodeType":"497","endLine":45,"endColumn":8,"suggestions":"498"},{"ruleId":"472","severity":1,"message":"499","line":4,"column":36,"nodeType":"474","messageId":"475","endLine":4,"endColumn":41},{"ruleId":"472","severity":1,"message":"500","line":6,"column":18,"nodeType":"474","messageId":"475","endLine":6,"endColumn":25},{"ruleId":"472","severity":1,"message":"501","line":6,"column":57,"nodeType":"474","messageId":"475","endLine":6,"endColumn":69},{"ruleId":"472","severity":1,"message":"502","line":6,"column":71,"nodeType":"474","messageId":"475","endLine":6,"endColumn":78},{"ruleId":"472","severity":1,"message":"503","line":6,"column":80,"nodeType":"474","messageId":"475","endLine":6,"endColumn":95},{"ruleId":"472","severity":1,"message":"504","line":6,"column":97,"nodeType":"474","messageId":"475","endLine":6,"endColumn":107},{"ruleId":"472","severity":1,"message":"505","line":17,"column":8,"nodeType":"474","messageId":"475","endLine":17,"endColumn":16},{"ruleId":"472","severity":1,"message":"506","line":18,"column":10,"nodeType":"474","messageId":"475","endLine":18,"endColumn":22},{"ruleId":"495","severity":1,"message":"507","line":145,"column":8,"nodeType":"497","endLine":145,"endColumn":31,"suggestions":"508"},{"ruleId":"472","severity":1,"message":"485","line":1,"column":17,"nodeType":"474","messageId":"475","endLine":1,"endColumn":25},{"ruleId":"472","severity":1,"message":"473","line":1,"column":27,"nodeType":"474","messageId":"475","endLine":1,"endColumn":36},{"ruleId":"472","severity":1,"message":"481","line":2,"column":8,"nodeType":"474","messageId":"475","endLine":2,"endColumn":9},{"ruleId":"472","severity":1,"message":"509","line":3,"column":21,"nodeType":"474","messageId":"475","endLine":3,"endColumn":24},{"ruleId":"472","severity":1,"message":"510","line":3,"column":26,"nodeType":"474","messageId":"475","endLine":3,"endColumn":29},{"ruleId":"472","severity":1,"message":"511","line":3,"column":31,"nodeType":"474","messageId":"475","endLine":3,"endColumn":37},{"ruleId":"472","severity":1,"message":"512","line":3,"column":39,"nodeType":"474","messageId":"475","endLine":3,"endColumn":43},{"ruleId":"472","severity":1,"message":"513","line":3,"column":45,"nodeType":"474","messageId":"475","endLine":3,"endColumn":53},{"ruleId":"472","severity":1,"message":"514","line":3,"column":55,"nodeType":"474","messageId":"475","endLine":3,"endColumn":64},{"ruleId":"472","severity":1,"message":"515","line":3,"column":66,"nodeType":"474","messageId":"475","endLine":3,"endColumn":71},{"ruleId":"472","severity":1,"message":"516","line":3,"column":73,"nodeType":"474","messageId":"475","endLine":3,"endColumn":84},{"ruleId":"472","severity":1,"message":"517","line":3,"column":86,"nodeType":"474","messageId":"475","endLine":3,"endColumn":95},{"ruleId":"472","severity":1,"message":"518","line":3,"column":97,"nodeType":"474","messageId":"475","endLine":3,"endColumn":108},{"ruleId":"472","severity":1,"message":"519","line":3,"column":110,"nodeType":"474","messageId":"475","endLine":3,"endColumn":115},{"ruleId":"472","severity":1,"message":"520","line":3,"column":117,"nodeType":"474","messageId":"475","endLine":3,"endColumn":122},{"ruleId":"472","severity":1,"message":"521","line":5,"column":22,"nodeType":"474","messageId":"475","endLine":5,"endColumn":26},{"ruleId":"472","severity":1,"message":"481","line":2,"column":8,"nodeType":"474","messageId":"475","endLine":2,"endColumn":9},{"ruleId":"472","severity":1,"message":"499","line":4,"column":36,"nodeType":"474","messageId":"475","endLine":4,"endColumn":41},{"ruleId":"472","severity":1,"message":"500","line":6,"column":18,"nodeType":"474","messageId":"475","endLine":6,"endColumn":25},{"ruleId":"472","severity":1,"message":"501","line":6,"column":57,"nodeType":"474","messageId":"475","endLine":6,"endColumn":69},{"ruleId":"472","severity":1,"message":"502","line":6,"column":71,"nodeType":"474","messageId":"475","endLine":6,"endColumn":78},{"ruleId":"472","severity":1,"message":"503","line":6,"column":80,"nodeType":"474","messageId":"475","endLine":6,"endColumn":95},{"ruleId":"472","severity":1,"message":"504","line":6,"column":97,"nodeType":"474","messageId":"475","endLine":6,"endColumn":107},{"ruleId":"495","severity":1,"message":"507","line":60,"column":8,"nodeType":"497","endLine":60,"endColumn":31,"suggestions":"522"},{"ruleId":"472","severity":1,"message":"481","line":2,"column":8,"nodeType":"474","messageId":"475","endLine":2,"endColumn":9},{"ruleId":"472","severity":1,"message":"499","line":4,"column":36,"nodeType":"474","messageId":"475","endLine":4,"endColumn":41},{"ruleId":"472","severity":1,"message":"500","line":6,"column":18,"nodeType":"474","messageId":"475","endLine":6,"endColumn":25},{"ruleId":"472","severity":1,"message":"501","line":6,"column":57,"nodeType":"474","messageId":"475","endLine":6,"endColumn":69},{"ruleId":"472","severity":1,"message":"502","line":6,"column":71,"nodeType":"474","messageId":"475","endLine":6,"endColumn":78},{"ruleId":"472","severity":1,"message":"503","line":6,"column":80,"nodeType":"474","messageId":"475","endLine":6,"endColumn":95},{"ruleId":"472","severity":1,"message":"504","line":6,"column":97,"nodeType":"474","messageId":"475","endLine":6,"endColumn":107},{"ruleId":"495","severity":1,"message":"507","line":60,"column":8,"nodeType":"497","endLine":60,"endColumn":31,"suggestions":"523"},{"ruleId":"472","severity":1,"message":"476","line":3,"column":10,"nodeType":"474","messageId":"475","endLine":3,"endColumn":15},{"ruleId":"472","severity":1,"message":"479","line":3,"column":16,"nodeType":"474","messageId":"475","endLine":3,"endColumn":24},{"ruleId":"472","severity":1,"message":"524","line":9,"column":10,"nodeType":"474","messageId":"475","endLine":9,"endColumn":30},{"ruleId":"472","severity":1,"message":"484","line":15,"column":8,"nodeType":"474","messageId":"475","endLine":15,"endColumn":17},{"ruleId":"486","severity":1,"message":"525","line":48,"column":33,"nodeType":"488","messageId":"489","endLine":48,"endColumn":35},{"ruleId":"486","severity":1,"message":"525","line":55,"column":33,"nodeType":"488","messageId":"489","endLine":55,"endColumn":35},{"ruleId":"486","severity":1,"message":"525","line":55,"column":61,"nodeType":"488","messageId":"489","endLine":55,"endColumn":63},{"ruleId":"495","severity":1,"message":"526","line":83,"column":8,"nodeType":"497","endLine":83,"endColumn":47,"suggestions":"527"},{"ruleId":"495","severity":1,"message":"507","line":91,"column":8,"nodeType":"497","endLine":91,"endColumn":36,"suggestions":"528"},{"ruleId":"495","severity":1,"message":"529","line":98,"column":8,"nodeType":"497","endLine":98,"endColumn":73,"suggestions":"530"},{"ruleId":"495","severity":1,"message":"507","line":104,"column":8,"nodeType":"497","endLine":104,"endColumn":23,"suggestions":"531"},{"ruleId":"486","severity":1,"message":"525","line":113,"column":39,"nodeType":"488","messageId":"489","endLine":113,"endColumn":41},{"ruleId":"486","severity":1,"message":"525","line":113,"column":67,"nodeType":"488","messageId":"489","endLine":113,"endColumn":69},{"ruleId":"486","severity":1,"message":"525","line":160,"column":33,"nodeType":"488","messageId":"489","endLine":160,"endColumn":35},{"ruleId":"495","severity":1,"message":"532","line":169,"column":8,"nodeType":"497","endLine":169,"endColumn":10,"suggestions":"533"},{"ruleId":"486","severity":1,"message":"525","line":215,"column":105,"nodeType":"488","messageId":"489","endLine":215,"endColumn":107},{"ruleId":"486","severity":1,"message":"525","line":215,"column":133,"nodeType":"488","messageId":"489","endLine":215,"endColumn":135},{"ruleId":"534","severity":1,"message":"535","line":244,"column":73,"nodeType":"536","endLine":244,"endColumn":139},{"ruleId":"472","severity":1,"message":"537","line":1,"column":28,"nodeType":"474","messageId":"475","endLine":1,"endColumn":34},{"ruleId":"538","severity":1,"message":"539","line":18,"column":35,"nodeType":"540","messageId":"541","endLine":18,"endColumn":37},{"ruleId":"538","severity":1,"message":"539","line":20,"column":53,"nodeType":"540","messageId":"541","endLine":20,"endColumn":55},{"ruleId":"538","severity":1,"message":"539","line":23,"column":56,"nodeType":"540","messageId":"541","endLine":23,"endColumn":58},{"ruleId":"486","severity":1,"message":"525","line":65,"column":37,"nodeType":"488","messageId":"489","endLine":65,"endColumn":39},{"ruleId":"486","severity":1,"message":"525","line":65,"column":65,"nodeType":"488","messageId":"489","endLine":65,"endColumn":67},{"ruleId":"495","severity":1,"message":"542","line":73,"column":8,"nodeType":"497","endLine":73,"endColumn":73,"suggestions":"543"},{"ruleId":"486","severity":1,"message":"525","line":78,"column":33,"nodeType":"488","messageId":"489","endLine":78,"endColumn":35},{"ruleId":"495","severity":1,"message":"544","line":86,"column":8,"nodeType":"497","endLine":86,"endColumn":10,"suggestions":"545"},{"ruleId":"495","severity":1,"message":"507","line":92,"column":8,"nodeType":"497","endLine":92,"endColumn":44,"suggestions":"546"},{"ruleId":"495","severity":1,"message":"507","line":147,"column":8,"nodeType":"497","endLine":147,"endColumn":23,"suggestions":"547"},{"ruleId":"548","severity":1,"message":"549","line":396,"column":97,"nodeType":"550","endLine":396,"endColumn":120},{"ruleId":"486","severity":1,"message":"525","line":399,"column":68,"nodeType":"488","messageId":"489","endLine":399,"endColumn":70},{"ruleId":"472","severity":1,"message":"551","line":3,"column":10,"nodeType":"474","messageId":"475","endLine":3,"endColumn":23},{"ruleId":"472","severity":1,"message":"552","line":5,"column":8,"nodeType":"474","messageId":"475","endLine":5,"endColumn":19},{"ruleId":"472","severity":1,"message":"553","line":5,"column":22,"nodeType":"474","messageId":"475","endLine":5,"endColumn":30},{"ruleId":"472","severity":1,"message":"554","line":6,"column":10,"nodeType":"474","messageId":"475","endLine":6,"endColumn":19},{"ruleId":"472","severity":1,"message":"509","line":6,"column":21,"nodeType":"474","messageId":"475","endLine":6,"endColumn":24},{"ruleId":"472","severity":1,"message":"510","line":6,"column":26,"nodeType":"474","messageId":"475","endLine":6,"endColumn":29},{"ruleId":"472","severity":1,"message":"511","line":6,"column":31,"nodeType":"474","messageId":"475","endLine":6,"endColumn":37},{"ruleId":"472","severity":1,"message":"512","line":6,"column":39,"nodeType":"474","messageId":"475","endLine":6,"endColumn":43},{"ruleId":"472","severity":1,"message":"513","line":6,"column":45,"nodeType":"474","messageId":"475","endLine":6,"endColumn":53},{"ruleId":"472","severity":1,"message":"514","line":6,"column":55,"nodeType":"474","messageId":"475","endLine":6,"endColumn":64},{"ruleId":"472","severity":1,"message":"515","line":6,"column":66,"nodeType":"474","messageId":"475","endLine":6,"endColumn":71},{"ruleId":"472","severity":1,"message":"516","line":6,"column":73,"nodeType":"474","messageId":"475","endLine":6,"endColumn":84},{"ruleId":"472","severity":1,"message":"517","line":6,"column":86,"nodeType":"474","messageId":"475","endLine":6,"endColumn":95},{"ruleId":"472","severity":1,"message":"518","line":6,"column":97,"nodeType":"474","messageId":"475","endLine":6,"endColumn":108},{"ruleId":"472","severity":1,"message":"519","line":6,"column":110,"nodeType":"474","messageId":"475","endLine":6,"endColumn":115},{"ruleId":"472","severity":1,"message":"520","line":6,"column":117,"nodeType":"474","messageId":"475","endLine":6,"endColumn":122},{"ruleId":"472","severity":1,"message":"521","line":8,"column":22,"nodeType":"474","messageId":"475","endLine":8,"endColumn":26},{"ruleId":"486","severity":1,"message":"525","line":21,"column":37,"nodeType":"488","messageId":"489","endLine":21,"endColumn":39},{"ruleId":"486","severity":1,"message":"525","line":21,"column":65,"nodeType":"488","messageId":"489","endLine":21,"endColumn":67},{"ruleId":"495","severity":1,"message":"555","line":29,"column":8,"nodeType":"497","endLine":29,"endColumn":73,"suggestions":"556"},{"ruleId":"486","severity":1,"message":"525","line":34,"column":33,"nodeType":"488","messageId":"489","endLine":34,"endColumn":35},{"ruleId":"495","severity":1,"message":"544","line":44,"column":8,"nodeType":"497","endLine":44,"endColumn":10,"suggestions":"557"},{"ruleId":"472","severity":1,"message":"558","line":1,"column":17,"nodeType":"474","messageId":"475","endLine":1,"endColumn":26},{"ruleId":"495","severity":1,"message":"559","line":34,"column":8,"nodeType":"497","endLine":34,"endColumn":10,"suggestions":"560"},{"ruleId":"472","severity":1,"message":"499","line":4,"column":36,"nodeType":"474","messageId":"475","endLine":4,"endColumn":41},{"ruleId":"472","severity":1,"message":"500","line":6,"column":18,"nodeType":"474","messageId":"475","endLine":6,"endColumn":25},{"ruleId":"472","severity":1,"message":"501","line":6,"column":57,"nodeType":"474","messageId":"475","endLine":6,"endColumn":69},{"ruleId":"472","severity":1,"message":"502","line":6,"column":71,"nodeType":"474","messageId":"475","endLine":6,"endColumn":78},{"ruleId":"472","severity":1,"message":"503","line":6,"column":80,"nodeType":"474","messageId":"475","endLine":6,"endColumn":95},{"ruleId":"472","severity":1,"message":"504","line":6,"column":97,"nodeType":"474","messageId":"475","endLine":6,"endColumn":107},{"ruleId":"472","severity":1,"message":"505","line":17,"column":8,"nodeType":"474","messageId":"475","endLine":17,"endColumn":16},{"ruleId":"472","severity":1,"message":"506","line":18,"column":10,"nodeType":"474","messageId":"475","endLine":18,"endColumn":22},{"ruleId":"495","severity":1,"message":"507","line":145,"column":8,"nodeType":"497","endLine":145,"endColumn":31,"suggestions":"561"},{"ruleId":"472","severity":1,"message":"481","line":2,"column":8,"nodeType":"474","messageId":"475","endLine":2,"endColumn":9},{"ruleId":"472","severity":1,"message":"511","line":6,"column":31,"nodeType":"474","messageId":"475","endLine":6,"endColumn":37},{"ruleId":"472","severity":1,"message":"514","line":6,"column":55,"nodeType":"474","messageId":"475","endLine":6,"endColumn":64},{"ruleId":"472","severity":1,"message":"515","line":6,"column":66,"nodeType":"474","messageId":"475","endLine":6,"endColumn":71},{"ruleId":"472","severity":1,"message":"516","line":6,"column":73,"nodeType":"474","messageId":"475","endLine":6,"endColumn":84},{"ruleId":"472","severity":1,"message":"517","line":6,"column":86,"nodeType":"474","messageId":"475","endLine":6,"endColumn":95},{"ruleId":"472","severity":1,"message":"518","line":6,"column":97,"nodeType":"474","messageId":"475","endLine":6,"endColumn":108},{"ruleId":"472","severity":1,"message":"519","line":6,"column":110,"nodeType":"474","messageId":"475","endLine":6,"endColumn":115},{"ruleId":"472","severity":1,"message":"520","line":6,"column":117,"nodeType":"474","messageId":"475","endLine":6,"endColumn":122},{"ruleId":"472","severity":1,"message":"521","line":10,"column":22,"nodeType":"474","messageId":"475","endLine":10,"endColumn":26},{"ruleId":"495","severity":1,"message":"562","line":64,"column":8,"nodeType":"497","endLine":64,"endColumn":10,"suggestions":"563"},{"ruleId":"472","severity":1,"message":"514","line":3,"column":47,"nodeType":"474","messageId":"475","endLine":3,"endColumn":56},{"ruleId":"472","severity":1,"message":"564","line":3,"column":64,"nodeType":"474","messageId":"475","endLine":3,"endColumn":69},{"ruleId":"472","severity":1,"message":"565","line":13,"column":8,"nodeType":"474","messageId":"475","endLine":13,"endColumn":18},{"ruleId":"486","severity":1,"message":"525","line":40,"column":37,"nodeType":"488","messageId":"489","endLine":40,"endColumn":39},{"ruleId":"486","severity":1,"message":"525","line":40,"column":65,"nodeType":"488","messageId":"489","endLine":40,"endColumn":67},{"ruleId":"495","severity":1,"message":"542","line":48,"column":8,"nodeType":"497","endLine":48,"endColumn":73,"suggestions":"566"},{"ruleId":"486","severity":1,"message":"525","line":53,"column":33,"nodeType":"488","messageId":"489","endLine":53,"endColumn":35},{"ruleId":"495","severity":1,"message":"544","line":61,"column":8,"nodeType":"497","endLine":61,"endColumn":10,"suggestions":"567"},{"ruleId":"495","severity":1,"message":"568","line":73,"column":8,"nodeType":"497","endLine":73,"endColumn":10,"suggestions":"569"},{"ruleId":"472","severity":1,"message":"570","line":6,"column":8,"nodeType":"474","messageId":"475","endLine":6,"endColumn":13},{"ruleId":"472","severity":1,"message":"483","line":3,"column":16,"nodeType":"474","messageId":"475","endLine":3,"endColumn":22},{"ruleId":"472","severity":1,"message":"505","line":13,"column":8,"nodeType":"474","messageId":"475","endLine":13,"endColumn":16},{"ruleId":"472","severity":1,"message":"483","line":3,"column":16,"nodeType":"474","messageId":"475","endLine":3,"endColumn":22},{"ruleId":"472","severity":1,"message":"571","line":16,"column":10,"nodeType":"474","messageId":"475","endLine":16,"endColumn":13},{"ruleId":"472","severity":1,"message":"505","line":13,"column":8,"nodeType":"474","messageId":"475","endLine":13,"endColumn":16},{"ruleId":"472","severity":1,"message":"572","line":15,"column":10,"nodeType":"474","messageId":"475","endLine":15,"endColumn":17},{"ruleId":"573","severity":1,"message":"574","line":71,"column":21,"nodeType":"575","messageId":"576","endLine":78,"endColumn":22},{"ruleId":"486","severity":1,"message":"525","line":198,"column":33,"nodeType":"488","messageId":"489","endLine":198,"endColumn":35},{"ruleId":"486","severity":1,"message":"525","line":198,"column":61,"nodeType":"488","messageId":"489","endLine":198,"endColumn":63},{"ruleId":"577","severity":1,"message":"578","line":255,"column":66,"nodeType":"579","messageId":"580","endLine":255,"endColumn":67,"suggestions":"581"},{"ruleId":"577","severity":1,"message":"582","line":255,"column":68,"nodeType":"579","messageId":"580","endLine":255,"endColumn":69,"suggestions":"583"},{"ruleId":"577","severity":1,"message":"584","line":255,"column":70,"nodeType":"579","messageId":"580","endLine":255,"endColumn":71,"suggestions":"585"},{"ruleId":"472","severity":1,"message":"586","line":294,"column":17,"nodeType":"474","messageId":"475","endLine":294,"endColumn":21},{"ruleId":"472","severity":1,"message":"509","line":3,"column":10,"nodeType":"474","messageId":"475","endLine":3,"endColumn":13},{"ruleId":"472","severity":1,"message":"510","line":3,"column":15,"nodeType":"474","messageId":"475","endLine":3,"endColumn":18},{"ruleId":"472","severity":1,"message":"476","line":5,"column":10,"nodeType":"474","messageId":"475","endLine":5,"endColumn":15},{"ruleId":"472","severity":1,"message":"479","line":5,"column":16,"nodeType":"474","messageId":"475","endLine":5,"endColumn":24},{"ruleId":"472","severity":1,"message":"587","line":23,"column":10,"nodeType":"474","messageId":"475","endLine":23,"endColumn":16},{"ruleId":"472","severity":1,"message":"588","line":23,"column":18,"nodeType":"474","messageId":"475","endLine":23,"endColumn":27},{"ruleId":"472","severity":1,"message":"589","line":24,"column":10,"nodeType":"474","messageId":"475","endLine":24,"endColumn":18},{"ruleId":"472","severity":1,"message":"590","line":24,"column":20,"nodeType":"474","messageId":"475","endLine":24,"endColumn":31},{"ruleId":"472","severity":1,"message":"493","line":25,"column":10,"nodeType":"474","messageId":"475","endLine":25,"endColumn":19},{"ruleId":"472","severity":1,"message":"494","line":25,"column":21,"nodeType":"474","messageId":"475","endLine":25,"endColumn":33},{"ruleId":"472","severity":1,"message":"591","line":41,"column":9,"nodeType":"474","messageId":"475","endLine":41,"endColumn":17},{"ruleId":"472","severity":1,"message":"509","line":3,"column":10,"nodeType":"474","messageId":"475","endLine":3,"endColumn":13},{"ruleId":"472","severity":1,"message":"510","line":3,"column":15,"nodeType":"474","messageId":"475","endLine":3,"endColumn":18},{"ruleId":"472","severity":1,"message":"476","line":5,"column":10,"nodeType":"474","messageId":"475","endLine":5,"endColumn":15},{"ruleId":"472","severity":1,"message":"479","line":5,"column":16,"nodeType":"474","messageId":"475","endLine":5,"endColumn":24},{"ruleId":"472","severity":1,"message":"587","line":22,"column":10,"nodeType":"474","messageId":"475","endLine":22,"endColumn":16},{"ruleId":"472","severity":1,"message":"588","line":22,"column":18,"nodeType":"474","messageId":"475","endLine":22,"endColumn":27},{"ruleId":"472","severity":1,"message":"589","line":23,"column":10,"nodeType":"474","messageId":"475","endLine":23,"endColumn":18},{"ruleId":"472","severity":1,"message":"590","line":23,"column":20,"nodeType":"474","messageId":"475","endLine":23,"endColumn":31},{"ruleId":"472","severity":1,"message":"493","line":24,"column":10,"nodeType":"474","messageId":"475","endLine":24,"endColumn":19},{"ruleId":"472","severity":1,"message":"494","line":24,"column":21,"nodeType":"474","messageId":"475","endLine":24,"endColumn":33},{"ruleId":"472","severity":1,"message":"591","line":28,"column":9,"nodeType":"474","messageId":"475","endLine":28,"endColumn":17},{"ruleId":"472","severity":1,"message":"592","line":15,"column":7,"nodeType":"474","messageId":"475","endLine":15,"endColumn":19},{"ruleId":"472","severity":1,"message":"481","line":2,"column":8,"nodeType":"474","messageId":"475","endLine":2,"endColumn":9},{"ruleId":"472","severity":1,"message":"500","line":4,"column":18,"nodeType":"474","messageId":"475","endLine":4,"endColumn":25},{"ruleId":"472","severity":1,"message":"593","line":4,"column":45,"nodeType":"474","messageId":"475","endLine":4,"endColumn":55},{"ruleId":"472","severity":1,"message":"501","line":4,"column":57,"nodeType":"474","messageId":"475","endLine":4,"endColumn":69},{"ruleId":"472","severity":1,"message":"502","line":4,"column":71,"nodeType":"474","messageId":"475","endLine":4,"endColumn":78},{"ruleId":"472","severity":1,"message":"503","line":4,"column":80,"nodeType":"474","messageId":"475","endLine":4,"endColumn":95},{"ruleId":"472","severity":1,"message":"504","line":4,"column":97,"nodeType":"474","messageId":"475","endLine":4,"endColumn":107},{"ruleId":"472","severity":1,"message":"511","line":6,"column":31,"nodeType":"474","messageId":"475","endLine":6,"endColumn":37},{"ruleId":"472","severity":1,"message":"514","line":6,"column":55,"nodeType":"474","messageId":"475","endLine":6,"endColumn":64},{"ruleId":"472","severity":1,"message":"515","line":6,"column":66,"nodeType":"474","messageId":"475","endLine":6,"endColumn":71},{"ruleId":"472","severity":1,"message":"516","line":6,"column":73,"nodeType":"474","messageId":"475","endLine":6,"endColumn":84},{"ruleId":"472","severity":1,"message":"517","line":6,"column":86,"nodeType":"474","messageId":"475","endLine":6,"endColumn":95},{"ruleId":"472","severity":1,"message":"518","line":6,"column":97,"nodeType":"474","messageId":"475","endLine":6,"endColumn":108},{"ruleId":"472","severity":1,"message":"519","line":6,"column":110,"nodeType":"474","messageId":"475","endLine":6,"endColumn":115},{"ruleId":"472","severity":1,"message":"520","line":6,"column":117,"nodeType":"474","messageId":"475","endLine":6,"endColumn":122},{"ruleId":"472","severity":1,"message":"594","line":9,"column":8,"nodeType":"474","messageId":"475","endLine":9,"endColumn":19},{"ruleId":"472","severity":1,"message":"521","line":10,"column":22,"nodeType":"474","messageId":"475","endLine":10,"endColumn":26},{"ruleId":"472","severity":1,"message":"595","line":13,"column":10,"nodeType":"474","messageId":"475","endLine":13,"endColumn":21},{"ruleId":"538","severity":1,"message":"539","line":30,"column":34,"nodeType":"540","messageId":"541","endLine":30,"endColumn":36},{"ruleId":"538","severity":1,"message":"539","line":34,"column":38,"nodeType":"540","messageId":"541","endLine":34,"endColumn":40},{"ruleId":"538","severity":1,"message":"539","line":37,"column":32,"nodeType":"540","messageId":"541","endLine":37,"endColumn":34},{"ruleId":"495","severity":1,"message":"507","line":57,"column":8,"nodeType":"497","endLine":57,"endColumn":22,"suggestions":"596"},{"ruleId":"538","severity":1,"message":"597","line":83,"column":62,"nodeType":"540","messageId":"598","endLine":83,"endColumn":64},{"ruleId":"486","severity":1,"message":"525","line":84,"column":39,"nodeType":"488","messageId":"489","endLine":84,"endColumn":41},{"ruleId":"472","severity":1,"message":"599","line":151,"column":53,"nodeType":"474","messageId":"475","endLine":151,"endColumn":57},{"ruleId":"472","severity":1,"message":"473","line":1,"column":17,"nodeType":"474","messageId":"475","endLine":1,"endColumn":26},{"ruleId":"472","severity":1,"message":"485","line":1,"column":28,"nodeType":"474","messageId":"475","endLine":1,"endColumn":36},{"ruleId":"472","severity":1,"message":"509","line":2,"column":10,"nodeType":"474","messageId":"475","endLine":2,"endColumn":13},{"ruleId":"472","severity":1,"message":"510","line":2,"column":15,"nodeType":"474","messageId":"475","endLine":2,"endColumn":18},{"ruleId":"472","severity":1,"message":"513","line":2,"column":20,"nodeType":"474","messageId":"475","endLine":2,"endColumn":28},{"ruleId":"472","severity":1,"message":"512","line":2,"column":30,"nodeType":"474","messageId":"475","endLine":2,"endColumn":34},{"ruleId":"472","severity":1,"message":"499","line":2,"column":36,"nodeType":"474","messageId":"475","endLine":2,"endColumn":41},{"ruleId":"472","severity":1,"message":"554","line":2,"column":42,"nodeType":"474","messageId":"475","endLine":2,"endColumn":51},{"ruleId":"472","severity":1,"message":"564","line":2,"column":53,"nodeType":"474","messageId":"475","endLine":2,"endColumn":58},"no-native-reassign",["600"],"no-negated-in-lhs",["601"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Authmiddleware' is defined but never used.","'React' is defined but never used.","'Redirect' is defined but never used.","'jumgaAdmminRoutes' is assigned a value but never used.","'_' is defined but never used.","'firebase' is defined but never used.","'uuidv4' is defined but never used.","'CONSTANTS' is defined but never used.","'useState' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'socialDrp' is assigned a value but never used.","'setsocialDrp' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.masterStore'. Either include it or remove the dependency array.","ArrayExpression",["602"],"'Alert' is defined but never used.","'AvField' is defined but never used.","'AvRadioGroup' is defined but never used.","'AvRadio' is defined but never used.","'AvCheckboxGroup' is defined but never used.","'AvCheckbox' is defined but never used.","'instance' is defined but never used.","'configParams' is defined but never used.","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["603"],"'Row' is defined but never used.","'Col' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'CardBody' is defined but never used.","'CardTitle' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'Media' is defined but never used.","'Table' is defined but never used.","'Link' is defined but never used.",["604"],["605"],"'firebaseConfigParams' is defined but never used.","Expected '===' and instead saw '=='.","React Hook useEffect has a missing dependency: 'processCurrency'. Either include it or remove the dependency array.",["606"],["607"],"React Hook useEffect has missing dependencies: 'checkIfStoreExists', 'checkifApproved', 'props.history', 'state', and 'storeId'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["608"],["609"],"React Hook useEffect has missing dependencies: 'props.history', 'props.userStore', 'storeId', and 'windowRef'. Either include them or remove the dependency array.",["610"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'useRef' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'props.history', 'state', and 'storeId'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["611"],"React Hook useEffect has missing dependencies: 'props.history', 'props.userStore', and 'storeId'. Either include them or remove the dependency array.",["612"],["613"],["614"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'LazyLoadImage' is defined but never used.","'CreateStore' is defined but never used.","'Backdrop' is defined but never used.","'Container' is defined but never used.","React Hook useEffect has missing dependencies: 'props.history' and 'storeId'. Either include them or remove the dependency array.",["615"],["616"],"'Component' is defined but never used.","React Hook useEffect has missing dependencies: 'productId' and 'props'. Either include them or remove the dependency array.",["617"],["618"],"React Hook useEffect has missing dependencies: 'props' and 'searchId'. Either include them or remove the dependency array.",["619"],"'Label' is defined but never used.","'Nouislider' is defined but never used.",["620"],["621"],"React Hook useEffect has missing dependencies: 'props' and 'storeId'. Either include them or remove the dependency array.",["622"],"'thank' is defined but never used.","'get' is defined but never used.","'resolve' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-useless-escape","Unnecessary escape character: \\@.","Literal","unnecessaryEscape",["623","624"],"Unnecessary escape character: \\\".",["625","626"],"Unnecessary escape character: \\'.",["627","628"],"'user' is assigned a value but never used.","'search' is assigned a value but never used.","'setsearch' is assigned a value but never used.","'megaMenu' is assigned a value but never used.","'setmegaMenu' is assigned a value but never used.","'isMobile' is assigned a value but never used.","'configParams' is assigned a value but never used.","'AvFeedback' is defined but never used.","'storefront2' is defined but never used.","'createStore' is defined but never used.",["629"],"Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","'name' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"630","fix":"631"},{"desc":"632","fix":"633"},{"desc":"632","fix":"634"},{"desc":"632","fix":"635"},{"desc":"636","fix":"637"},{"desc":"638","fix":"639"},{"desc":"640","fix":"641"},{"desc":"642","fix":"643"},{"desc":"644","fix":"645"},{"desc":"646","fix":"647"},{"desc":"648","fix":"649"},{"desc":"650","fix":"651"},{"desc":"642","fix":"652"},{"desc":"653","fix":"654"},{"desc":"648","fix":"655"},{"desc":"656","fix":"657"},{"desc":"632","fix":"658"},{"desc":"659","fix":"660"},{"desc":"646","fix":"661"},{"desc":"648","fix":"662"},{"desc":"663","fix":"664"},{"messageId":"665","fix":"666","desc":"667"},{"messageId":"668","fix":"669","desc":"670"},{"messageId":"665","fix":"671","desc":"667"},{"messageId":"668","fix":"672","desc":"670"},{"messageId":"665","fix":"673","desc":"667"},{"messageId":"668","fix":"674","desc":"670"},{"desc":"675","fix":"676"},"Update the dependencies array to be: [props.masterStore]",{"range":"677","text":"678"},"Update the dependencies array to be: [state, state.postSubmitError]",{"range":"679","text":"680"},{"range":"681","text":"680"},{"range":"682","text":"680"},"Update the dependencies array to be: [processCurrency, props.masterStore.state.remoteConfigs]",{"range":"683","text":"684"},"Update the dependencies array to be: [props.userStore.state.user, state]",{"range":"685","text":"686"},"Update the dependencies array to be: [checkIfStoreExists, checkifApproved, props.history, props.userStore.state.storeLoaded, props.userStore.state.stores, state, storeId]",{"range":"687","text":"688"},"Update the dependencies array to be: [state, state.isError]",{"range":"689","text":"690"},"Update the dependencies array to be: [props.history, props.userStore, storeId, windowRef]",{"range":"691","text":"692"},"Update the dependencies array to be: [props.history, props.userStore.state.storeLoaded, props.userStore.state.stores, state, storeId]",{"range":"693","text":"694"},"Update the dependencies array to be: [props.history, props.userStore, storeId]",{"range":"695","text":"696"},"Update the dependencies array to be: [props.masterStore.state.categories, state]",{"range":"697","text":"698"},{"range":"699","text":"690"},"Update the dependencies array to be: [props.history, props.userStore.state.storeLoaded, props.userStore.state.stores, storeId]",{"range":"700","text":"701"},{"range":"702","text":"696"},"Update the dependencies array to be: [productId, props]",{"range":"703","text":"704"},{"range":"705","text":"680"},"Update the dependencies array to be: [props, searchId]",{"range":"706","text":"707"},{"range":"708","text":"694"},{"range":"709","text":"696"},"Update the dependencies array to be: [props, storeId]",{"range":"710","text":"711"},"removeEscape",{"range":"712","text":"713"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"714","text":"715"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"716","text":"713"},{"range":"717","text":"715"},{"range":"718","text":"713"},{"range":"719","text":"715"},"Update the dependencies array to be: [props.isOpen, state]",{"range":"720","text":"721"},[1289,1291],"[props.masterStore]",[4386,4409],"[state, state.postSubmitError]",[2133,2156],[2122,2145],[2924,2963],"[processCurrency, props.masterStore.state.remoteConfigs]",[3151,3179],"[props.userStore.state.user, state]",[3495,3560],"[checkIfStoreExists, checkifApproved, props.history, props.userStore.state.storeLoaded, props.userStore.state.stores, state, storeId]",[3720,3735],"[state, state.isError]",[6077,6079],"[props.history, props.userStore, storeId, windowRef]",[2504,2569],"[props.history, props.userStore.state.storeLoaded, props.userStore.state.stores, state, storeId]",[3020,3022],"[props.history, props.userStore, storeId]",[3275,3311],"[props.masterStore.state.categories, state]",[4868,4883],[1213,1278],"[props.history, props.userStore.state.storeLoaded, props.userStore.state.stores, storeId]",[1822,1824],[1402,1404],"[productId, props]",[4375,4398],[2865,2867],"[props, searchId]",[1990,2055],[2506,2508],[2869,2871],"[props, storeId]",[7931,7932],"",[7931,7931],"\\",[7933,7934],[7933,7933],[7935,7936],[7935,7935],[1961,1975],"[props.isOpen, state]"]