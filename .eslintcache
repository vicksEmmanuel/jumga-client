[{"C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\index.js":"1","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\i18n.js":"2","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\reportWebVitals.js":"3","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\App.js":"4","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\routes\\allRoutes.js":"5","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\Components\\NonAuthLayout.js":"6","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\routes\\middleware\\NonAuthMiddleware.js":"7","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\routes\\middleware\\Authmiddleware.js":"8","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\containers\\index.js":"9","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\App.constant.js":"10","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\pages\\Home\\Home.js":"11","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\pages\\Authentication\\Login.js":"12","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\pages\\Authentication\\Create.js":"13","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\containers\\LayoutContainer.js":"14","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\containers\\UserContainer.js":"15","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\config.js":"16","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\containers\\provider.js":"17","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\Components\\Common\\Breadcrumb.js":"18","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\helpers\\axiosly.js":"19","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\components\\NonAuthLayout.js":"20","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\components\\Layout\\index.js":"21","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\components\\Layout\\Footer.js":"22","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\components\\Layout\\Sidebar.js":"23","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\components\\Layout\\Header.js":"24","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\components\\Layout\\SidebarContent.js":"25","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\components\\CommonForBoth\\TopbarDropdown\\NotificationDropdown.js":"26","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\components\\CommonForBoth\\TopbarDropdown\\ProfileMenu.js":"27","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\components\\Common\\Breadcrumb.js":"28","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\components\\Common\\ErrorMessage.js":"29","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\pages\\Store\\store-checkout.js":"30","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\pages\\Store\\card-store-checkout.js":"31","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\containers\\MasterContainer.js":"32","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\components\\StoreLayout.js":"33","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\pages\\Store\\StoreListing.js":"34","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\routes\\middleware\\Storemiddleware.js":"35","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\components\\StoreHeader.js":"36","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\pages\\Store\\CreateStore.js":"37","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\pages\\Store\\StoreDetails.js":"38","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\routes\\middleware\\StoreAuthmiddleware.js":"39","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\containers\\PaymentContainer.js":"40","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\pages\\Utility\\payment-close.js":"41","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\pages\\Utility\\comin-soon.js":"42","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\pages\\Store\\StoreAddProduct.js":"43","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\routes\\middleware\\UserMiddleware.js":"44","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\components\\UserLayout\\index.js":"45","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\components\\UserLayout\\Footer.js":"46","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\components\\UserLayout\\Header.js":"47","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\pages\\Store\\StoreProductDetails.js":"48","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\pages\\Store\\StoreProducts.js":"49","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\pages\\Store\\GeneralStoreProducts.js":"50","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\pages\\Store\\Cart.js":"51","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\pages\\Store\\Checkout.js":"52","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\pages\\Authentication\\LoginX.js":"53","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\pages\\Authentication\\CreateX.js":"54","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\pages\\Utility\\pages-404.js":"55"},{"size":495,"mtime":1608161450000,"results":"56","hashOfConfig":"57"},{"size":1077,"mtime":1608161450000,"results":"58","hashOfConfig":"57"},{"size":362,"mtime":1608161450000,"results":"59","hashOfConfig":"57"},{"size":2462,"mtime":1609983654027,"results":"60","hashOfConfig":"57"},{"size":2812,"mtime":1610097590345,"results":"61","hashOfConfig":"57"},{"size":708,"mtime":1608161450000,"results":"62","hashOfConfig":"57"},{"size":418,"mtime":1609372896758,"results":"63","hashOfConfig":"57"},{"size":1129,"mtime":1609584050710,"results":"64","hashOfConfig":"57"},{"size":427,"mtime":1609716982822,"results":"65","hashOfConfig":"57"},{"size":530,"mtime":1610036464948,"results":"66","hashOfConfig":"57"},{"size":801,"mtime":1609413844873,"results":"67","hashOfConfig":"57"},{"size":12737,"mtime":1609608141805,"results":"68","hashOfConfig":"57"},{"size":23046,"mtime":1609973088627,"results":"69","hashOfConfig":"57"},{"size":4972,"mtime":1609587702206,"results":"70","hashOfConfig":"57"},{"size":11461,"mtime":1610097590271,"results":"71","hashOfConfig":"57"},{"size":1814,"mtime":1609940670925,"results":"72","hashOfConfig":"57"},{"size":612,"mtime":1609717728072,"results":"73","hashOfConfig":"57"},{"size":1087,"mtime":1608161450000,"results":"74","hashOfConfig":"57"},{"size":562,"mtime":1609381075864,"results":"75","hashOfConfig":"57"},{"size":706,"mtime":1609585624571,"results":"76","hashOfConfig":"57"},{"size":3892,"mtime":1609890325257,"results":"77","hashOfConfig":"57"},{"size":768,"mtime":1609888930842,"results":"78","hashOfConfig":"57"},{"size":845,"mtime":1608161450000,"results":"79","hashOfConfig":"57"},{"size":3949,"mtime":1609954308016,"results":"80","hashOfConfig":"57"},{"size":4865,"mtime":1609951173239,"results":"81","hashOfConfig":"57"},{"size":5093,"mtime":1608161450000,"results":"82","hashOfConfig":"57"},{"size":3342,"mtime":1609609646932,"results":"83","hashOfConfig":"57"},{"size":1087,"mtime":1608161450000,"results":"84","hashOfConfig":"57"},{"size":433,"mtime":1609536891074,"results":"85","hashOfConfig":"57"},{"size":12723,"mtime":1609977981120,"results":"86","hashOfConfig":"57"},{"size":573,"mtime":1609543387204,"results":"87","hashOfConfig":"57"},{"size":4690,"mtime":1610036546350,"results":"88","hashOfConfig":"57"},{"size":835,"mtime":1609589256970,"results":"89","hashOfConfig":"57"},{"size":8574,"mtime":1609706315825,"results":"90","hashOfConfig":"57"},{"size":1173,"mtime":1609587048655,"results":"91","hashOfConfig":"57"},{"size":8269,"mtime":1609954117521,"results":"92","hashOfConfig":"57"},{"size":10881,"mtime":1609678300271,"results":"93","hashOfConfig":"57"},{"size":2636,"mtime":1609980529126,"results":"94","hashOfConfig":"57"},{"size":1198,"mtime":1609682204876,"results":"95","hashOfConfig":"57"},{"size":2919,"mtime":1609943200988,"results":"96","hashOfConfig":"57"},{"size":1592,"mtime":1609983944820,"results":"97","hashOfConfig":"57"},{"size":1862,"mtime":1609895708599,"results":"98","hashOfConfig":"57"},{"size":24966,"mtime":1609979826407,"results":"99","hashOfConfig":"57"},{"size":951,"mtime":1609979585742,"results":"100","hashOfConfig":"57"},{"size":818,"mtime":1609980835932,"results":"101","hashOfConfig":"57"},{"size":768,"mtime":1609893884243,"results":"102","hashOfConfig":"57"},{"size":3211,"mtime":1610025476756,"results":"103","hashOfConfig":"57"},{"size":26783,"mtime":1610097590273,"results":"104","hashOfConfig":"57"},{"size":13955,"mtime":1610097206013,"results":"105","hashOfConfig":"57"},{"size":17538,"mtime":1610037802801,"results":"106","hashOfConfig":"57"},{"size":14014,"mtime":1609982967921,"results":"107","hashOfConfig":"57"},{"size":47051,"mtime":1609983076832,"results":"108","hashOfConfig":"57"},{"size":12726,"mtime":1609983815979,"results":"109","hashOfConfig":"57"},{"size":23035,"mtime":1609983808230,"results":"110","hashOfConfig":"57"},{"size":1624,"mtime":1610097590301,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"13k9l24",{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"114"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"114"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"114"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"114"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"114"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"114"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"114"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"114"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"114"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"114"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"114"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"114"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"114"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"114"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"114"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"114"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"114"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"114"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"114"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"114"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"114"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"114"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"114"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"114"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"114"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"114"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\index.js",[],["250","251"],"C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\i18n.js",[],"C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\reportWebVitals.js",[],"C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\App.js",["252","253","254"],"import React, { Component, useEffect } from 'react';\nimport { Switch, BrowserRouter as Router,Route } from \"react-router-dom\";\nimport { Provider, Subscribe } from \"unstated\";\n\nimport allStores from './containers';\nimport { userRoutes , authRoutes, storeRoutes, storeAuthRoutes, userAuthRoutes } from \"./routes/allRoutes\";\nimport Authmiddleware from \"./routes/middleware/Authmiddleware\";\nimport Storemiddleware from \"./routes/middleware/Storemiddleware\";\nimport NonAuthmiddleware from \"./routes/middleware/NonAuthMiddleware\";\nimport NonAuthLayout from './components/NonAuthLayout';\nimport StoreLayout from './components/StoreLayout';\nimport Layout from \"./components/Layout\";\nimport UserLayout from \"./components/UserLayout\";\n\nimport \"./assets/scss/theme.scss\";\nimport StoreAuthmiddleware from './routes/middleware/StoreAuthmiddleware';\nimport UserMiddleware from './routes/middleware/UserMiddleware';\n// import TestingSpeech from './components/TestingSpeech';\n\nclass App extends Component{\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.layoutStore = allStores[0];\n\t\tthis.userStore = allStores[2];\n\t\tthis.masterStore = allStores[3];\n\t\tthis.paymentStore = allStores[4];\n\t}\n\n\tappScreen = (layout) => \n\t\t<React.Fragment>\n\t\t\t<Router>\n\t\t\t\t<Switch>\n\t\t\t\t\t{userAuthRoutes.map((route, idx) => (\n\t\t\t\t\t\t<NonAuthmiddleware\n\t\t\t\t\t\t\tpath={route.path}\n\t\t\t\t\t\t\tcomponent={route.component}\n\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\tlayout={NonAuthLayout}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t\t\n\t\t\t\t\t{authRoutes.map((route, idx) => (\n\t\t\t\t\t\t<NonAuthmiddleware\n\t\t\t\t\t\t\tpath={route.path}\n\t\t\t\t\t\t\tcomponent={route.component}\n\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\tlayout={NonAuthLayout}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\n\t\t\t\t\t{storeAuthRoutes.map((route, idx) => (\n\t\t\t\t\t\t<StoreAuthmiddleware\n\t\t\t\t\t\t\tpath={route.path}\n\t\t\t\t\t\t\tcomponent={route.component}\n\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\tlayout={Layout}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\n\t\t\t\t\t{storeRoutes.map((route, idx) => (\n\t\t\t\t\t\t<Storemiddleware\n\t\t\t\t\t\t\tpath={route.path}\n\t\t\t\t\t\t\tcomponent={route.component}\n\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\tlayout={StoreLayout}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\n\t\t\t\t\t{userRoutes.map((route, idx) => (\n\t\t\t\t\t\t<UserMiddleware\n\t\t\t\t\t\t\tpath={route.path}\n\t\t\t\t\t\t\tcomponent={route.component}\n\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\tlayout={UserLayout}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t</React.Fragment>\n\n\trender() {\n\t\treturn (\n\t\t\t<Provider inject={allStores}>\n\t\t\t\t<Subscribe to={[this.layoutStore]}>\n\t\t\t\t\t{layoutStore => (\n\t\t\t\t\t\tthis.appScreen(layoutStore)\n\t\t\t\t\t)}\n\t\t\t\t</Subscribe>\n\t\t\t</Provider>\n\t\t)\n\t}\n}\n\nexport default App;\n","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\routes\\allRoutes.js",["255","256","257"],"import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport Home from \"../pages/Home/Home\";\r\nimport Login from \"../pages/Authentication/Login\";\r\nimport Create from \"../pages/Authentication/Create\";\r\nimport StoreCheckout from \"../pages/Store/store-checkout\";\r\nimport Store from \"../pages/Store/StoreListing\";\r\nimport StoreDetails from \"../pages/Store/StoreDetails\";\r\nimport PaymentClose from \"../pages/Utility/payment-close\";\r\nimport ComingSoon from \"../pages/Utility/comin-soon\";\r\nimport StoreAddProduct from \"../pages/Store/StoreAddProduct\";\r\nimport StoreProductDetails from \"../pages/Store/StoreProductDetails\";\r\nimport StoreProducts from \"../pages/Store/StoreProducts\";\r\nimport GeneralStoreProducts from \"../pages/Store/GeneralStoreProducts\";\r\nimport Cart from \"../pages/Store/Cart\";\r\nimport Checkout from \"../pages/Store/Checkout\";\r\nimport LoginX from \"../pages/Authentication/LoginX\";\r\nimport CreateX from \"../pages/Authentication/CreateX\";\r\n\r\n\r\nconst userRoutes = [\r\n\t{ path: \"/search/:id\", component: GeneralStoreProducts}, //TODO:\r\n\t{ path: \"/search/\", component: GeneralStoreProducts}, //TODO:\r\n\t{ path: \"/categories/:id\", component: ComingSoon}, //TODO:\r\n\t{ path: \"/cart\", component: Cart}, //TODO:\r\n\t{ path: \"/checkout/:id\", component: Checkout}, //TODO:\r\n\t{ path: \"/:productId\", component: StoreProductDetails}, //TODO: //View a particular product\r\n\t{ path: \"/\", exact: true, component: Home } //TODO:\r\n];\r\n\r\nconst storeRoutes  = [\r\n\t{ path: \"/store/front\", component: Store},\r\n];\r\n\r\nconst storeAuthRoutes = [\r\n\t{ path: \"/store/front/:id/overview\", component: ComingSoon}, //TODO: \r\n\t{ path: \"/store/front/:id/analysis\", component: ComingSoon}, //TODO: \r\n\t{ path: \"/store/front/:id/account\", component: ComingSoon}, //TODO: \r\n\t{ path: \"/store/front/:id/settings\", component: ComingSoon}, //TODO: \r\n\t{ path: \"/store/front/:id/customers\", component: ComingSoon},  //TODO: \r\n\t{ path: \"/store/front/:id/orders\", component: ComingSoon}, //TODO: \r\n\t{ path: \"/store/front/:id/add-products\", component: StoreAddProduct}, //Add product\r\n\t{ path: \"/store/front/:id/products\", component: StoreProducts},  //TODO: //View all product\r\n\t{ path: \"/store/front/:id\", component: StoreDetails}, //Home\r\n];\r\n\r\nconst authRoutes = [\r\n\t{ path: \"/store/login\", component: Login },\r\n\t{ path: \"/store/get-approved/:id\", component: StoreCheckout},\r\n\t{ path: \"/store/register\", component: Create},\r\n\t{ path: \"/payment/close\", component: PaymentClose},\r\n];\r\n\r\nconst userAuthRoutes = [\r\n\t{ path: \"/login\", component: LoginX },\r\n\t{ path: \"/register\", component: CreateX},\r\n];\r\n\r\nconst jumgaAdmminRoutes = [\r\n\t{ path: \"/dispatch-rider-display\" },\r\n\t{ path: \"/categories\"}\r\n]\r\n\r\nexport { userRoutes, authRoutes, storeRoutes, storeAuthRoutes, userAuthRoutes };\r\n","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\Components\\NonAuthLayout.js",[],["258","259"],"C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\routes\\middleware\\NonAuthMiddleware.js",["260","261","262"],"import React, { useEffect } from \"react\";\nimport { Route,Redirect,withRouter } from \"react-router-dom\";\nimport CONSTANTS from '../../App.constant';\n\nconst NonAuthmiddleware = ({\n\tcomponent: Component,\n\tlayout: Layout,\n\tpath\n}) => {\n\treturn (\n\t\t<Route\n\t\t\tpath={path}\n\t\t\trender={props => {\n\t\t\t\treturn <Layout>\n\t\t\t\t\t<Component {...props} />\n\t\t\t\t</Layout>;\n\t\t\t}}\n\t\t/>\n\t);\n}\n\nexport default withRouter(NonAuthmiddleware);\n\n","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\routes\\middleware\\Authmiddleware.js",["263","264","265","266"],"import React, { useEffect } from \"react\";\nimport { Route,Redirect,withRouter } from \"react-router-dom\";\nimport { withTranslation } from 'react-i18next';\nimport * as _ from 'lodash';\nimport stateWrapper from \"../../containers/provider\";\nimport firebase from \"firebase/app\";\nimport { v4 as uuidv4 } from 'uuid';\n\n// Add the Firebase products that you want to use\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/functions\";\nimport \"firebase/storage\";\nimport \"firebase/remote-config\";\nimport CONSTANTS from '../../App.constant';\n\nconst Authmiddleware = (superProps) => {\n\tconst Layout = superProps?.layout;\n\tconst Component = superProps?.component;\n\tconst path = superProps?.path;\n\treturn (\n\t\t<Route\n\t\t\tpath={path}\n\t\t\trender={(props) => {\n\t\t\t\n\t\t\t\t// here you can apply condition\n\t\t\t\tif (!localStorage.getItem(CONSTANTS.SESSIONSTORE)) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Redirect to={{ pathname: \"/store/login\", state: { from: props.location } }} />\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn <Layout>\n\t\t\t\t\t<Component {...props} />\n\t\t\t\t</Layout>;\n\t\t\t}}\n\t\t/>\n\t);\n}\n\nexport default withRouter(withTranslation()(stateWrapper(Authmiddleware)));\n\n","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\containers\\index.js",[],"C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\App.constant.js",[],"C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\pages\\Home\\Home.js",["267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282"],"import React, { useState, useEffect } from 'react';\nimport _ from 'lodash';\nimport { Container, Row, Col, Button, Card, CardBody, CardTitle, Modal, ModalHeader, ModalBody, ModalFooter, Media, Table } from \"reactstrap\";\nimport Breadcrumb from '../../components/Common/Breadcrumb';\nimport { withRouter, Link } from 'react-router-dom';\nimport { withTranslation } from 'react-i18next';\nimport \"./home.scss\";\n\n const Home = (props) => {\n        return (\n            <React.Fragment>\n                <div className=\"page-content\">\n                    <Container fluid>\n                        <Breadcrumb title={props.t('Home')} breadcrumbItem={''} />\n                    </Container>\n                </div>\n            </React.Fragment>\n        );\n    }\n\nexport default withRouter(withTranslation()(Home))\n","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\pages\\Authentication\\Login.js",["283","284","285","286","287","288","289","290"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport _ from 'lodash';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { Row, Col, CardBody, Card, Alert,Container, Label } from \"reactstrap\";\r\nimport { withTranslation } from 'react-i18next';\r\nimport { AvForm, AvField, AvGroup, AvInput, AvFeedback, AvRadioGroup, AvRadio, AvCheckboxGroup, AvCheckbox } from 'availity-reactstrap-validation';\r\nimport \"../../styles/Login.scss\";\r\nimport logo from \"../../assets/images/jumga logo.png\";\r\nimport team1 from \"../../assets/images/team1.png\";\r\nimport team2 from \"../../assets/images/team2.png\";\r\nimport team3 from \"../../assets/images/team3.png\";\r\nimport team4 from \"../../assets/images/team4.png\";\r\nimport team5 from \"../../assets/images/team5.png\";\r\nimport stadium from \"../../assets/images/stadium.jpg\";\r\nimport stateWrapper from '../../containers/provider';\r\nimport ErrorMessage from '../../components/Common/ErrorMessage';\r\n\r\n\r\n const Login = (props) => {\r\n    const [state, setState] = useState({\r\n        loading: false,\r\n        doesEmailExists: true,\r\n        postSubmitError: false,\r\n        postSubmitMessage: '',\r\n        error: {\r\n            email: 'Email is required',\r\n            password: 'Password is required',\r\n            watch: {\r\n                email: '',\r\n                password: ''\r\n            }\r\n        },\r\n        email: '',\r\n        password: ''\r\n    });\r\n    const form = useRef();\r\n    async function  handleValidSubmit(event, values) {\r\n        event.preventDefault();\r\n        console.log(values);\r\n        let doesEmailExists = await processEmail(state.email);\r\n        if (!doesEmailExists) return;\r\n        let done = await props.userStore.signIn(values, props);\r\n        if (!done.status) {\r\n            await checkError(done?.message);\r\n            return;\r\n        }\r\n\r\n        props.history.push('/store/front');\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     props.userStore.logOut(props);\r\n    //     console.log('jerr')\r\n    // }, [])\r\n\r\n    useEffect(() => {\r\n        if (state.postSubmitError) {\r\n            setTimeout(() => {setState({...state, postSubmitError: false, postSubmitMessage: ''})}, 10000);\r\n        }\r\n    }, [state.postSubmitError]);\r\n\r\n    const processEmail = async (e) => {\r\n\r\n        let checker = await props.userStore.checkIfEmailExists(e);\r\n        if (!checker?.status) {\r\n            let error = state.error;\r\n            error.watch = {\r\n                ...error.watch,\r\n                email: `This email does not exist`\r\n            }\r\n            await setState({\r\n                ...state, \r\n                doesEmailExists: !checker?.status, \r\n                error\r\n            });\r\n            return checker?.status;\r\n        }\r\n    \r\n        await setState({ ...state, doesEmailExists: !checker?.status});\r\n        return checker?.status;\r\n      }\r\n\r\n    const checkError = async (e) => {\r\n        await setState({\r\n            ...state,  \r\n            postSubmitError: true,\r\n            postSubmitMessage: e,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>  \r\n            <div onClick={() => {setState({...state, postSubmitMessage: '', postSubmitError: false})}}>\r\n                <ErrorMessage isError={state.postSubmitError} message={state.postSubmitMessage} />\r\n            </div>\r\n            <div>\r\n                <Link to=\"/\">\r\n                    <img className=\"logo d-none d-md-inline-block\" src={logo} alt=\"logo\" />\r\n                    <img className=\"logo-small d-md-none\" src={logo} alt=\"logo\" />\r\n                </Link>\r\n            </div>\r\n            <div className=\"account-pages my-5 pt-sm-5\">\r\n                <Container>\r\n                    <div>\r\n                        <img className=\"avatar  team1 d-none d-md-inline-block\" src={team1} alt=\"team1\" />\r\n                        <img className=\"avatar team2 d-none d-md-inline-block\" src={team2} alt=\"team2\" />\r\n                        <img className=\"avatar team3 d-none d-md-inline-block\" src={team3} alt=\"team3\" />\r\n                        <img className=\"avatar team4 d-none d-md-inline-block\" src={team4} alt=\"team4\" />\r\n                        <img className=\"avatar team5 d-none d-md-inline-block\" src={team5} alt=\"team5\" />\r\n                        <img className=\"avatar  team1-small d-md-none\" src={team1} alt=\"team1\" />\r\n                        <img className=\"avatar team2-small d-md-none\" src={team2} alt=\"team2\" />\r\n                        <img className=\"avatar team3-small d-md-none\" src={team3} alt=\"team3\" />\r\n                        <img className=\"avatar team4-small d-md-none\" src={team4} alt=\"team4\" />\r\n                        <img className=\"avatar team5-small d-md-none\" src={team5} alt=\"team5\" />\r\n                    </div>\r\n                    <Row className=\"justify-content-center overflow-hidden\">\r\n                        <Col className=\"box\" style={{padding:0}} lg={9} md={12} sm={12}>\r\n                            <Row>\r\n                                <Col style={{padding: 30}} md={6} lg={4} xl={6} sm={12}>\r\n                                        <Card className=\"overflow-hidden border-0\">\r\n                                            <div>\r\n                                                <Row>\r\n                                                    <Col className=\"col-12\">\r\n                                                        <div className=\"text-primary text-center text-dark\">\r\n                                                            <h5 className=\"text-primary text-dark\">Welcome back !</h5>\r\n                                                            <p>We're so excited to see you again!</p>\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </div>\r\n                                            <CardBody className=\"pt-0 border-0\">\r\n                                                <div className=\"p-2\">\r\n\r\n                                                    <AvForm ref={form} className=\"form-horizontal\" onValidSubmit={(e,v) => { handleValidSubmit(e,v) }}>\r\n                                                        <AvGroup>\r\n                                                            <Label className=\"form-label\" for=\"email\">EMAIL</Label>\r\n                                                            <AvInput \r\n                                                                onChange={e =>\r\n                                                                    setState({\r\n                                                                    ...state, \r\n                                                                    email: e.target.value,\r\n                                                                    error: {\r\n                                                                        ...state.error,\r\n                                                                        watch: {\r\n                                                                            ...state.error.watch,\r\n                                                                            email: ''\r\n                                                                        }\r\n                                                                    }\r\n                                                                })} \r\n                                                                name=\"email\" \r\n                                                                id=\"email\" \r\n                                                                required \r\n                                                                type=\"email\"\r\n                                                            />\r\n                                                            <AvFeedback><i className=\"error-field\">{state.error.email}</i></AvFeedback>\r\n                                                            <i className=\"error-field\">{state.error.watch.email}</i>\r\n                                                        </AvGroup>\r\n\r\n                                                        <AvGroup>\r\n                                                            <Label className=\"form-label\" for=\"password\">PASSWORD</Label>\r\n                                                            <AvInput \r\n                                                                onChange={e => \r\n                                                                    setState({\r\n                                                                        ...state, \r\n                                                                        password: e.target.value,\r\n                                                                        error: {\r\n                                                                            ...state.error,\r\n                                                                            watch: {\r\n                                                                                ...state.error.watch,\r\n                                                                                password: ''\r\n                                                                            }\r\n                                                                        }\r\n                                                                    })\r\n                                                                } \r\n                                                                name=\"password\" \r\n                                                                validate={{\r\n                                                                    minLength: { value: 6, errorMessage: \"Password must be more than 5 letters\"}\r\n                                                                }}\r\n                                                                id=\"password\" \r\n                                                                required \r\n                                                                type=\"password\"\r\n                                                            />\r\n                                                            <AvFeedback><i className=\"error-field\">{state.error.password}</i></AvFeedback>\r\n                                                            <i className=\"error-field\">{state.error.watch.password}</i>\r\n                                                        </AvGroup>\r\n\r\n                                                        <div className=\"mt-4\">\r\n                                                            <Link to=\"/forgot-password\" className=\"text-muted text-primary link\"><i className=\"mdi mdi-lock mr-1\"></i> Forgot your password?</Link>\r\n                                                        </div>\r\n                                                        <div className=\"mt-3\">\r\n                                                            <button\r\n                                                                disabled={state.loading} className=\"btn btn-primary btn-block waves-effect waves-light btn-dark\" type=\"submit\" style={{backgroundColor: '#EE5C43', borderColor: '#EE5C43'}}>\r\n                                                                Login\r\n                                                            </button>\r\n                                                        </div>\r\n                                                        <div className=\"mt-4 link-ext\">\r\n                                                            Need an account?<Link to=\"/store/register\" className=\"link text-primary\"> Register</Link>\r\n                                                        </div>\r\n                                                    </AvForm>\r\n                                                </div>\r\n                                            </CardBody>\r\n                                        </Card>\r\n                                    </Col> \r\n                                <Col md={6} lg={6} xl={6} sm={12}>\r\n                                    <img className=\"stadium\" src={stadium} alt=\"stadium\" />\r\n                                    <div className=\"writing\">\r\n                                        <div className=\"text-to-show\">\r\n                                            A market place for all\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        </React.Fragment>\r\n     );\r\n    }\r\n\r\nexport default withRouter(withTranslation()(stateWrapper(Login)))","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\pages\\Authentication\\Create.js",["291","292","293","294","295","296","297","298","299"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport _ from 'lodash';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { Row, Col, CardBody, Card, Alert,Container, Label } from \"reactstrap\";\r\nimport ErrorMessage from '../../components/Common/ErrorMessage';\r\nimport { AvForm, AvField, AvGroup, AvInput, AvFeedback, AvRadioGroup, AvRadio, AvCheckboxGroup, AvCheckbox } from 'availity-reactstrap-validation';\r\nimport { withTranslation } from 'react-i18next';\r\nimport stateWrapper from \"../../containers/provider\";\r\nimport \"../../styles/Login.scss\";\r\nimport logo from \"../../assets/images/jumga logo.png\";\r\nimport team1 from \"../../assets/images/team1.png\";\r\nimport team2 from \"../../assets/images/team2.png\";\r\nimport team3 from \"../../assets/images/team3.png\";\r\nimport team4 from \"../../assets/images/team4.png\";\r\nimport team5 from \"../../assets/images/team5.png\";\r\nimport stadium from \"../../assets/images/stadium.jpg\";\r\nimport instance from '../../helpers/axiosly';\r\nimport { configParams } from '../../config';\r\n\r\n/**\r\n * TODO: Add terms and condition\r\n */\r\n const Create = (props) => {\r\n    const [state, setState] = useState({\r\n        loading: false,\r\n        error: {\r\n            email: 'Email is required',\r\n            password: 'Password is required',\r\n            username: 'Store name is required',\r\n            watch: {\r\n                email: '',\r\n                password: '',\r\n                username: ''\r\n            }\r\n        },\r\n        email: '',\r\n        password: '',\r\n        username: '',\r\n        doesStoreNameExists: true,\r\n        doesEmailExists: true,\r\n        imageFile: null,\r\n        imageSrc: null,\r\n        userType: 'Business',\r\n        postSubmitError: false,\r\n        postSubmitMessage: ''\r\n    });\r\n\r\n    const form = useRef();\r\n    const useImageRef = useRef();\r\n    const callImageInput = () => {\r\n        document.getElementById(\"imageFile\").click();\r\n    }\r\n  async function  handleValidSubmit(event, values) {\r\n    event.preventDefault();\r\n    let doesEmailExists = await processEmail(state.email);\r\n    // let doesStoreNameExists = await processStoreName(state.username);\r\n\r\n\r\n    if (doesEmailExists) return;\r\n    let newValues = {\r\n        ...values,\r\n        imageFile: state.imageFile,\r\n        userType: state.userType,\r\n        downloadURL: null\r\n    }\r\n\r\n    let create = async () => {\r\n            console.log(newValues);\r\n            await props.userStore.signUp(newValues, checkError);\r\n            props.history.push('/store/front');\r\n    }\r\n\r\n    if (_.isNull(newValues.imageFile)) {\r\n        await create();\r\n        return;\r\n    }\r\n    let snaps = await props.userStore.uploadImage(newValues.imageFile, e => {});\r\n    console.log(snaps);\r\n    newValues.downloadURL = snaps;\r\n    await create();\r\n    return;\r\n  }\r\n  const showPreviewAndSetValue = (e) => {\r\n    if(e.target.files && e.target.files[0]) {\r\n        let imageFile = e.target.files[0];\r\n        console.log(imageFile);\r\n        if (String(imageFile.type).includes(\"image\")) {\r\n            const reader = new FileReader();\r\n            reader.onload = x => {\r\n                setState({\r\n                    ...state,\r\n                    imageFile,\r\n                    imageSrc: x.target.result\r\n                })\r\n            }\r\n            reader.readAsDataURL(imageFile);\r\n        } else {\r\n            setState({\r\n                ...state,\r\n                imageFile: null,\r\n                imageSrc: null\r\n            })\r\n        }\r\n    } else {\r\n        setState({\r\n            ...state,\r\n            imageFile: null,\r\n            imageSrc: null\r\n        })\r\n    }\r\n  }\r\n  const checkError =(e) => {\r\n    console.log(e);\r\n    setState({\r\n        ...state,\r\n        postSubmitError: true,\r\n        postSubmitMessage: e\r\n    });\r\n  }\r\n  const processEmail = async (e) => {\r\n\r\n    let checker = await props.userStore.checkIfEmailExists(e);\r\n    if (checker?.status) {\r\n        let error = state.error;\r\n        error.watch = {\r\n            ...error.watch,\r\n            email: `This email already exists`\r\n        }\r\n        await setState({\r\n            ...state, \r\n            doesEmailExists: checker?.status, \r\n            error\r\n        });\r\n        return checker?.status;\r\n    }\r\n\r\n    await setState({ ...state, doesEmailExists: checker?.status});\r\n    return checker?.status;\r\n  }\r\n\r\n  useEffect(() => {\r\n        if (state.postSubmitError) {\r\n            setTimeout(() => {setState({...state, postSubmitError: false, postSubmitMessage: ''})}, 10000);\r\n        }\r\n    }, [state.postSubmitError]);\r\n    return (\r\n        <React.Fragment> \r\n            <div onClick={() => {setState({...state, postSubmitMessage: '', postSubmitError: false})}}>\r\n                <ErrorMessage isError={state.postSubmitError} message={state.postSubmitMessage} />\r\n            </div>\r\n            <div>\r\n                <Link to=\"/\">\r\n                    <img className=\"logo d-none d-md-inline-block\" src={logo} alt=\"logo\" />\r\n                    <img className=\"logo-small d-md-none\" src={logo} alt=\"logo\" />\r\n                </Link>\r\n            </div>\r\n            <div className=\"account-pages my-5 pt-sm-5\">\r\n                <Container>\r\n                    <div>\r\n                        <img className=\"avatar  team1 d-none d-md-inline-block\" src={team1} alt=\"team1\" />\r\n                        <img className=\"avatar team2 d-none d-md-inline-block\" src={team2} alt=\"team2\" />\r\n                        <img className=\"avatar team3 d-none d-md-inline-block\" src={team3} alt=\"team3\" />\r\n                        <img className=\"avatar team4 d-none d-md-inline-block\" src={team4} alt=\"team4\" />\r\n                        <img className=\"avatar team5 d-none d-md-inline-block\" src={team5} alt=\"team5\" />\r\n                        <img className=\"avatar  team1-small d-md-none\" src={team1} alt=\"team1\" />\r\n                        <img className=\"avatar team2-small d-md-none\" src={team2} alt=\"team2\" />\r\n                        <img className=\"avatar team3-small d-md-none\" src={team3} alt=\"team3\" />\r\n                        <img className=\"avatar team4-small d-md-none\" src={team4} alt=\"team4\" />\r\n                        <img className=\"avatar team5-small d-md-none\" src={team5} alt=\"team5\" />\r\n                    </div>\r\n                    <Row className=\"justify-content-center overflow-hidden\">\r\n                        <Col className=\"box\" style={{padding:0}} lg={9} md={12} sm={12}>\r\n                            <Row>\r\n                                <Col style={{padding: 30}} md={6} lg={4} xl={6} sm={12}>\r\n                                        <Card className=\"overflow-hidden border-0\">\r\n                                            <div>\r\n                                                <Row>\r\n                                                    <Col className=\"col-12\">\r\n                                                        <div className=\"text-primary text-center text-dark\">\r\n                                                            <h5 className=\"text-primary text-dark\">JOIN US!</h5>\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </div>\r\n                                            <CardBody className=\"pt-0 border-0\">\r\n                                                <div className=\"p-2\">\r\n\r\n                                                    <AvForm ref={form} className=\"form-horizontal\" onValidSubmit={(e,v) => { handleValidSubmit(e,v) }}>\r\n                                                        <div className=\"business-logo\">Business logo</div>\r\n                                                        <center  className=\"avatar-container\">\r\n                                                            <div \r\n                                                                onClick={callImageInput} \r\n                                                                className=\"user-avatar\"\r\n                                                                style={{\r\n                                                                    backgroundImage: `url(${state.imageSrc != null ? state.imageSrc : stadium})`,\r\n                                                                    backgroundSize: 'cover',\r\n                                                                    backgroundRepeat: 'no-repeat'\r\n                                                                }}\r\n                                                            >\r\n                                                                <svg \r\n                                                                    version=\"1.1\" \r\n                                                                    id=\"Layer_1\" \r\n                                                                    xmlns=\"http://www.w3.org/2000/svg\" \r\n                                                                    x=\"0px\" y=\"0px\"\r\n                                                                    viewBox=\"0 0 512 512\" \r\n                                                                    className=\"avatar-icon\"\r\n                                                                >\r\n                                                                    <g>\r\n                                                                        <g>\r\n                                                                            <g>\r\n                                                                                <circle cx=\"256\" cy=\"277.333\" r=\"106.667\"/>\r\n                                                                                <path d=\"M469.333,106.667h-67.656c-8.552,0-16.583-3.333-22.635-9.375l-39-39c-10.073-10.073-23.469-15.625-37.719-15.625\r\n                                                                                    h-92.646c-14.25,0-27.646,5.552-37.719,15.625l-39,39c-6.052,6.042-14.083,9.375-22.635,9.375H42.667\r\n                                                                                    C19.135,106.667,0,125.802,0,149.333v277.333c0,23.531,19.135,42.667,42.667,42.667h426.667\r\n                                                                                    c23.531,0,42.667-19.135,42.667-42.667V149.333C512,125.802,492.865,106.667,469.333,106.667z M256,405.333\r\n                                                                                    c-70.583,0-128-57.417-128-128s57.417-128,128-128s128,57.417,128,128S326.583,405.333,256,405.333z M426.667,213.333\r\n                                                                                    c-11.76,0-21.333-9.573-21.333-21.333s9.573-21.333,21.333-21.333S448,180.24,448,192S438.427,213.333,426.667,213.333z\"/>\r\n                                                                            </g>\r\n                                                                        </g>\r\n                                                                    </g>\r\n                                                                    <g>\r\n                                                                    </g>\r\n                                                                    <g>\r\n                                                                    </g>\r\n                                                                    <g>\r\n                                                                    </g>\r\n                                                                    <g>\r\n                                                                    </g>\r\n                                                                    <g>\r\n                                                                    </g>\r\n                                                                    <g>\r\n                                                                    </g>\r\n                                                                    <g>\r\n                                                                    </g>\r\n                                                                    <g>\r\n                                                                    </g>\r\n                                                                    <g>\r\n                                                                    </g>\r\n                                                                    <g>\r\n                                                                    </g>\r\n                                                                    <g>\r\n                                                                    </g>\r\n                                                                    <g>\r\n                                                                    </g>\r\n                                                                    <g>\r\n                                                                    </g>\r\n                                                                    <g>\r\n                                                                    </g>\r\n                                                                    <g>\r\n                                                                    </g>\r\n                                                                    </svg>\r\n\r\n                                                            </div>\r\n                                                        </center>\r\n\r\n                                                        <AvGroup>\r\n                                                            <Label className=\"form-label\" for=\"email\">EMAIL</Label>\r\n                                                            <AvInput\r\n                                                                onChange={e =>  setState({\r\n                                                                    ...state, \r\n                                                                    email: e.target.value,\r\n                                                                    error: {\r\n                                                                        ...state.error,\r\n                                                                        watch: {\r\n                                                                            ...state.error.watch,\r\n                                                                            email: ''\r\n                                                                        }\r\n                                                                    }\r\n                                                                })} \r\n                                                                name=\"email\" \r\n                                                                id=\"email\" \r\n                                                                required \r\n                                                                type=\"email\"\r\n                                                            />\r\n                                                            <AvFeedback><i className=\"error-field\">{state.error.email}</i></AvFeedback>\r\n                                                            <i className=\"error-field\">{state.error.watch.email}</i>\r\n                                                        </AvGroup>\r\n\r\n                                                        <AvGroup>\r\n                                                            <Label className=\"form-label\" for=\"username\">FULL NAME</Label>\r\n                                                            <AvInput \r\n                                                                onChange={e => setState({\r\n                                                                    ...state, \r\n                                                                    username: e.target.value,\r\n                                                                    error: {\r\n                                                                        ...state.error,\r\n                                                                        watch: {\r\n                                                                            ...state.error.watch,\r\n                                                                            username: ''\r\n                                                                        }\r\n                                                                    }\r\n                                                                })} \r\n                                                                validate={{\r\n                                                                    minLength: { value: 3, errorMessage: \"Username must be more than 3 letters\"}\r\n                                                                }}\r\n                                                                name=\"username\" \r\n                                                                id=\"username\" \r\n                                                                required\r\n                                                            />\r\n                                                            <AvFeedback>\r\n                                                                <i className=\"error-field\">{state.error.username}</i>\r\n                                                            </AvFeedback>\r\n                                                            <i className=\"error-field\">{state.error.watch.username}</i>\r\n                                                        </AvGroup>\r\n\r\n                                                        <AvGroup>\r\n                                                            <Label className=\"form-label\" for=\"password\">PASSWORD</Label>\r\n                                                            <AvInput \r\n                                                                onChange={e => \r\n                                                                    setState({\r\n                                                                        ...state, \r\n                                                                        password: e.target.value,\r\n                                                                        error: {\r\n                                                                            ...state.error,\r\n                                                                            watch: {\r\n                                                                                ...state.error.watch,\r\n                                                                                password: ''\r\n                                                                            }\r\n                                                                        }\r\n                                                                    })\r\n                                                                } \r\n                                                                validate={{\r\n                                                                    minLength: { value: 6, errorMessage: \"Password must be more than 5 letters\"}\r\n                                                                }}\r\n                                                                name=\"password\" \r\n                                                                id=\"password\" \r\n                                                                required \r\n                                                                type=\"password\"\r\n                                                            />\r\n                                                            <AvFeedback><i className=\"error-field\">{state.error.password}</i></AvFeedback>\r\n                                                            <i className=\"error-field\">{state.error.watch.password}</i>\r\n                                                        </AvGroup>\r\n                                                            \r\n                                                        <input\r\n                                                            ref={useImageRef} \r\n                                                            onChange={showPreviewAndSetValue} \r\n                                                            name=\"imageFile\" \r\n                                                            id=\"imageFile\"\r\n                                                            type=\"file\"\r\n                                                            accept=\"image/*\"\r\n                                                            hidden\r\n                                                        />\r\n\r\n                                                        <div className=\"mt-3\">\r\n                                                            <button\r\n                                                                disabled={state.loading} className=\"btn btn-primary btn-block waves-effect waves-light btn-dark\" type=\"submit\"\r\n                                                                style={{backgroundColor: '#EE5C43', borderColor: '#EE5C43'}}\r\n                                                            >\r\n                                                                Submit\r\n                                                            </button>\r\n                                                        </div>\r\n                                                        <div className=\"mt-3 link-ext\">\r\n                                                            By clicking the “Submit” button, you agree to Jumga’s <Link to=\"/terms-and-condition\" className=\"link text-pprimary\">terms of acceptable use</Link>.\r\n                                                        </div>\r\n                                                        <div className=\"mt-4 link-ext\">\r\n                                                            Have an account?<Link to=\"/store/login\" className=\"link text-primary\">Login</Link>\r\n                                                        </div>\r\n                                                    </AvForm>\r\n                                                </div>\r\n                                            </CardBody>\r\n                                        </Card>\r\n                                    </Col> \r\n                                <Col md={6} lg={6} xl={6} sm={12}>\r\n                                    <img className=\"stadium stadium-create\" src={stadium} alt=\"stadium\" />\r\n                                    <div className=\"writing\">\r\n                                        <div className=\"text-to-show\">\r\n                                            A market place for all\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        </React.Fragment>\r\n     );\r\n    }\r\n\r\nexport default withRouter(withTranslation()(stateWrapper(Create)))","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\containers\\LayoutContainer.js",[],"C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\containers\\UserContainer.js",["300","301","302","303","304","305","306"],"C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\config.js",[],"C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\containers\\provider.js",["307"],"import React from \"react\";\nimport { Subscribe } from \"unstated\";\nimport allStores from \"./index\";\n\nexport default WrappedComponent => {\n  \n  const subscribeWrapper = ({ ...props }) => (\n\n    <Subscribe to={allStores}>\n        {(\n          layoutStore,\n          userStore,\n          masterStore,\n          paymentStore\n        ) => (\n          <WrappedComponent\n            layoutStore={layoutStore}\n            userStore={userStore}\n            masterStore={masterStore}\n            paymentStore={paymentStore}\n            {...props}\n          />\n        )}\n    </Subscribe>\n\n  )\n\n  return subscribeWrapper;\n};\n","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\Components\\Common\\Breadcrumb.js",[],"C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\helpers\\axiosly.js",[],"C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\components\\NonAuthLayout.js",[],"C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\components\\Layout\\index.js",["308"],"import React, { Component } from \"react\";\n\nimport { withRouter } from \"react-router-dom\";\nimport stateWrapper from \"../../containers/provider\";\n\n// Layout Related Components\nimport Sidebar from \"./Sidebar\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\n\nclass Layout extends Component {\n  constructor(props) {\n    super(props);\n    this.layoutProps = props.layoutStore;\n    this.state = {\n      isMobile: /iPhone|iPad|iPod|Android/i.test(navigator.userAgent)\n    };\n  }\n\n  capitalizeFirstLetter = string => {\n    return string.charAt(1).toUpperCase() + string.slice(2);\n  };\n\n  componentDidMount() {\n\n    if (this.layoutProps.state.isPreloader === true) {\n      document.getElementById('preloader').style.display = \"block\";\n      document.getElementById('status').style.display = \"block\";\n\n      setTimeout(function () {\n\n        document.getElementById('preloader').style.display = \"none\";\n        document.getElementById('status').style.display = \"none\";\n\n      }, 2500);\n    }\n    else {\n      document.getElementById('preloader').style.display = \"none\";\n      document.getElementById('status').style.display = \"none\";\n    }\n\n    // Scroll Top to 0\n    window.scrollTo(0, 0);\n    let currentage = this.capitalizeFirstLetter(this.props.location.pathname);\n\n    document.title =\n      currentage + \" | Jumga\";\n\n      if (this.layoutProps.state.leftSideBarTheme) {\n        this.layoutProps._changeSidebarTheme(this.layoutProps.state.leftSideBarTheme);\n      }\n  \n      if (this.layoutProps.state.layoutWidth) {\n        this.layoutProps._changeLayoutWidth(this.layoutProps.state.layoutWidth);\n      }\n  \n      if (this.layoutProps.state.leftSideBarType) {\n        this.layoutProps._changeSidebarType(this.layoutProps.state.leftSideBarType);\n      }\n      if (this.layoutProps.state.topbarTheme) {\n        this.layoutProps._changeTopbarTheme(this.layoutProps.state.topbarTheme);\n      }\n\n      if(this.state.isMobile)\n        this.toogleMenuCallback();\n      \n      window.addEventListener(\"resize\", () => {\n        this.setState({\n          isMobile: /iPhone|iPad|iPod|Android/i.test(navigator.userAgent)\n        });\n        this.toogleMenuCallback();\n      });\n  }\n\n\n  toogleMenuCallback = () => {\n    this.layoutProps._toggleLeftmenu(!this.layoutProps.state.leftMenu);\n    if (this.state.isMobile != true) {\n      this.layoutProps.changeLeftSidebarType({ payload: { sidebarType: \"default\", isMobile: this.layoutProps.state.leftMenu}});\n      this.layoutProps._changeSidebarType(\"default\", this.layoutProps.state.leftMenu);\n    } else {\n      this.layoutProps._changeSidebarType(\"condensed\", this.layoutProps.state.leftMenu);\n      this.layoutProps.changeLeftSidebarType({ payload: { sidebarType: \"condensed\", isMobile: this.layoutProps.state.leftMenu}});\n      if (document.body) {\n        document.body.classList.add('sidebar-enable');\n        document.body.classList.add('vertical-collpsed');\n      } \n    } \n  }\n\n  render() {\n    \n    return (\n      <React.Fragment>\n        <div id=\"preloader\">\n          <div id=\"status\">\n            <div className=\"spinner-chase\">\n              <div className=\"chase-dot\"></div>\n              <div className=\"chase-dot\"></div>\n              <div className=\"chase-dot\"></div>\n              <div className=\"chase-dot\"></div>\n              <div className=\"chase-dot\"></div>\n              <div className=\"chase-dot\"></div>\n            </div>\n          </div>\n        </div>\n\n        <div id=\"layout-wrapper\">\n          <Header/>\n          <Sidebar \n            theme={this.layoutProps.state.leftSideBarTheme}\n            type={this.layoutProps.state.leftSideBarType}\n            isMobile={this.state.isMobile} \n          />\n          <div className=\"main-content\">\n            {this.props.children}\n          </div>\n          <Footer />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(stateWrapper(Layout));\n","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\components\\Layout\\Footer.js",[],"C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\components\\Layout\\Sidebar.js",[],"C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\components\\Layout\\Header.js",["309","310","311","312","313","314","315","316","317","318","319"],"import React, { useState } from 'react';\n\nimport { Row, Col } from \"reactstrap\";\n\nimport { Route,Redirect,withRouter, Link } from \"react-router-dom\";\nimport {  UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from \"reactstrap\";\n\n// Import menuDropdown\nimport NotificationDropdown from \"../CommonForBoth/TopbarDropdown/NotificationDropdown\";\nimport ProfileMenu from \"../CommonForBoth/TopbarDropdown/ProfileMenu\";\nimport logo from \"../../assets/images/jumga basket logo.png\";\nimport logoDark from \"../../assets/images/jumga logo.png\";\n\n\n\n//i18n\nimport { withTranslation } from 'react-i18next';\nimport stateWrapper from '../../containers/provider';\n\n\nconst Header = (props) => {\n\n  const [search, setsearch] = useState(false);\n  const [megaMenu, setmegaMenu] = useState(false);\n  const [socialDrp, setsocialDrp] = useState(false);\n\n  const storeId = props.match.params?.id;\n\n  function tToggle()\n{\n    props.layoutStore._toggleLeftmenu(!props.layoutStore.state.leftMenu);\n    if (props.layoutStore.state.leftSideBarType === \"default\") {\n        props.layoutStore._changeSidebarType(\"condensed\", props.layoutStore.state.leftMenu);\n        props.layoutStore.changeLeftSidebarType({ payload: { sidebarType: \"condensed\", isMobile: props.layoutStore.state.leftMenu}});\n    } else if (props.layoutStore.state.leftSideBarType === \"condensed\") {\n      props.layoutStore.changeLeftSidebarType({ payload: { sidebarType: \"default\", isMobile: props.layoutStore.state.leftMenu}});\n      props.layoutStore._changeSidebarType(\"default\", props.layoutStore.state.leftMenu);\n    }  \n}\n\n  const isMobile =  /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n\n  const processStoreListiing = () => {\n    let x = props.userStore.state.stores.filter(item => {\n      return item.storeId !== storeId;\n    });\n\n    return x.length > 0 ? x.map((item, id) => {\n      return (\n        <div key={id}>\n          <Link to={`/store/front/${item.storeId}`}>\n            {item.store}\n          </Link>\n        </div>\n      )\n    }) : (\n      <div>Nothing Here</div>\n    )\n  }\n\n      return (\n       <React.Fragment>\n        <header id=\"page-topbar\">\n          <div className=\"navbar-header\">\n            <div className=\"d-flex\">\n              <div className=\"navbar-brand-box\">\n                <Link to=\"/store/front\" className=\"logo logo-dark\">\n                  <span className=\"logo-sm\" style={{position: 'relative', left: '-60%'}}>\n                    <img src={logo} alt=\"\" height=\"30\" />\n                  </span>\n                  <span className=\"logo-lg\">\n                    <img src={logoDark} alt=\"\" height=\"30\" />\n                  </span>\n                </Link>\n              </div>\n\n              <div onClick={() => {   tToggle() }}>\n                  <UncontrolledDropdown>\n                      <DropdownToggle href=\"#\" className=\"card-drop\" tag=\"i\">\n                        <span className=\"d-none d-lg-inline-block\">Stores</span>\n                      <button \n                         type=\"button\"\n                         className=\"btn btn-sm px-3 font-size-16 header-item waves-effect\" id=\"vertical-menu-btn\"\n                         style={{display: 'inline-block'}}\n                         >\n                        <i className=\"fa fa-fw fa-bars\"></i>\n                      </button>\n                      </DropdownToggle>\n                      <DropdownMenu left>\n                          <DropdownItem href=\"#\" onClick={e => e.preventDefault()}>\n                              {processStoreListiing()}\n                          </DropdownItem>\n                      </DropdownMenu>\n                  </UncontrolledDropdown>\n              </div>\n            </div>\n            <div className=\"d-flex\">\n              <NotificationDropdown />\n              <ProfileMenu />\n            </div>\n          </div>\n        </header>\n      </React.Fragment>\n      );\n    }\n\nexport default withRouter(withTranslation()(stateWrapper(Header)));\n","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\components\\Layout\\SidebarContent.js",[],"C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\components\\CommonForBoth\\TopbarDropdown\\NotificationDropdown.js",[],"C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\components\\CommonForBoth\\TopbarDropdown\\ProfileMenu.js",["320"],"import React, { useState, useEffect } from 'react';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport * as _ from 'lodash';\nimport stateWrapper from \"../../../containers/provider\";\n\n//i18n\nimport { withTranslation } from 'react-i18next';\n// Redux\nimport { withRouter, Link } from 'react-router-dom';\n\n\n// users\nimport  {firebaseConfigParams} from '../../../config';\n\nconst configParams = firebaseConfigParams;\n\nconst ProfileMenu = (props) => {\n   // Declare a new state variable, which we'll call \"menu\"\n   const [menu, setMenu] = useState(false);\n   const [username, setusername] = useState(\"User\");\n   const [image, setImage] = useState(null);\n\n   useEffect(() => {\n       let user = props.userStore.state.user;\n\n       if (!_.isNull(user)) {\n            setusername(String(user?.username).split(' ')[0]);\n            if(String(user?.downloadURL).length >0 || user?.downloadURL != null) {\n                setImage(user?.downloadURL);\n            }\n       }\n   },[props.userStore.state.user]);\n\n   const logOut = (e) => {\n        e.preventDefault();\n        props.userStore.logOut(props);\n   }\n\n  return (\n    <React.Fragment>\n                <Dropdown isOpen={menu} toggle={() => setMenu(!menu)} className=\"d-inline-block\" >\n                    <DropdownToggle className=\"btn header-item waves-effect\" id=\"page-header-user-dropdown\" tag=\"button\">\n                        {_.isNull(image) ? \n                            < div \n                                style={{\n                                    color: 'white', \n                                    backgroundColor: 'rgba(230,0,103, 1)', \n                                    borderRadius: '50%',\n                                    fontWeight: 'bold',\n                                    paddingTop: 5,\n                                    width: 30,\n                                    height: 30,\n                                    textAlign: 'center'\n                                }}\n                            >\n                                {String(username).substring(0,2).toUpperCase()}\n                            </div> :\n                            <img className=\"rounded-circle header-profile-user \" src={image} alt=\"\" />\n                        }\n                        <i className=\"mdi mdi-chevron-down d-none d-xl-inline-block\"></i>\n                    </DropdownToggle>\n                    <DropdownMenu right>\n                        <DropdownItem tag=\"a\"  href=\"/profile\"> <i className=\"bx bx-user font-size-16 align-middle mr-1\"></i>{props.t('Profile')}  </DropdownItem>\n                        <DropdownItem tag=\"a\" href=\"#\"><span className=\"badge badge-success float-right\">11</span><i className=\"mdi mdi-settings font-size-17 align-middle mr-1\"></i>{props.t('Settings')}</DropdownItem>\n                        <div className=\"dropdown-divider\"></div>\n                        <Link to=\"/logout\" onClick={logOut} className=\"dropdown-item\">\n                            <i className=\"bx bx-power-off font-size-16 align-middle mr-1 text-danger\"></i>\n                            <span>{props.t('Logout')}</span>\n                        </Link>\n                    </DropdownMenu>\n                </Dropdown>\n            </React.Fragment>\n  );\n}\n\nexport default withRouter(withTranslation()(stateWrapper(ProfileMenu)));\n\n","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\components\\Common\\Breadcrumb.js",[],"C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\components\\Common\\ErrorMessage.js",["321","322","323","324","325","326","327","328","329"],"import React, { useEffect, useState } from 'react';\r\nimport { Row, Col, CardBody, Card, Alert,Container, Label } from \"reactstrap\";\r\nimport \"./errormsg.scss\";\r\n\r\n\r\nconst ErrorMessage = ({\r\n    isError = false,\r\n    message = '',\r\n}) => {\r\n    return isError ? (\r\n        <center>\r\n            <div className=\"error\">\r\n                {message}\r\n            </div>\r\n        </center>\r\n    ) : <></>;\r\n}\r\n\r\nexport default ErrorMessage;","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\pages\\Store\\store-checkout.js",["330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Route,Redirect,withRouter } from \"react-router-dom\";\r\nimport { withTranslation } from 'react-i18next';\r\nimport * as _ from 'lodash';\r\nimport ErrorMessage from '../../components/Common/ErrorMessage';\r\nimport stateWrapper from \"../../containers/provider\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport { firebaseConfigParams } from '../../config';\r\nimport './store.scss';\r\n\r\nimport CardMaintenance from \"./card-store-checkout\";\r\n\r\nimport logo from \"../../assets/images/jumga logo.png\";\r\nimport CONSTANTS from '../../App.constant';\r\n\r\nconst StoreCheckout = (props) => {\r\n    const storeId = props.match.params.id;\r\n\r\n    const processCurrency = async () => {\r\n        let { remoteConfigs, remoteConfigLoading } = props.masterStore.state;\r\n        if (_.isEmpty(remoteConfigs)) return;\r\n        if (state.currencyLoaded) return;\r\n        await (async () => {\r\n            try {\r\n                // state.currency TODO: Change back to this\r\n                let result = await props.paymentStore.convertToLocalCurrency(props.masterStore.state.remoteConfigs?.store_cost,'USD');\r\n                setState({\r\n                    ...state,\r\n                    currencyLoaded: true,\r\n                    store_cost: result?.store_cost,\r\n                    currency: result?.currency,\r\n                    currencyPricePerDollar: result?.currencyPricePerDollar,\r\n                    remoteConfigCheck: !remoteConfigLoading\r\n                });\r\n            } catch(err) {\r\n                setState({\r\n                    ...state,\r\n                    isError: true,\r\n                    errMsg: 'Something went wrong when trying to load currency',\r\n                });\r\n            }\r\n        })();\r\n    }\r\n\r\n    const checkIfStoreExists = (storeId) => {\r\n        let isExists = props.userStore.state.stores.filter(item => {\r\n            return item.storeId == storeId\r\n        });\r\n        if (isExists.length > 0) return true;\r\n        return false;\r\n    }\r\n    const checkifApproved = (storeId) => {\r\n        let checkApproval = props.userStore.state.stores.filter(item => {\r\n            return item.storeId == storeId && item.approved == true\r\n        });\r\n        if (checkApproval.length > 0) return true;\r\n        return false;\r\n    }\r\n\r\n    const [state, setState] = useState({\r\n        currencyLoaded: false,\r\n        isOpen: true,\r\n        store_cost: null,\r\n        currency: null,\r\n        currencyPricePerDollar: 0,\r\n        isError: false,\r\n        errMsg: '',\r\n        storeCheck: !checkifApproved(storeId),\r\n        remoteConfigCheck: !props.masterStore.state.remoteConfigLoading,\r\n        bgColor: 'white',\r\n        color: 'rgb(22, 46, 88)',\r\n        clicked: false,\r\n        currencyLoadedTimes: 1,\r\n        user: props.userStore.state.user,\r\n        url: null\r\n    });\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            await processCurrency();\r\n        })();\r\n    }, [props.masterStore.state.remoteConfigs]);\r\n\r\n    useEffect(() => {\r\n        if (_.isNull(props.userStore.state.user)) return;\r\n        setState({\r\n            ...state,\r\n           user: props.userStore.state.user\r\n        });\r\n    }, [props.userStore.state.user])\r\n\r\n    useEffect(() => {\r\n        if (!props.userStore.state.storeLoaded) return;\r\n        if (!checkIfStoreExists(storeId))  return props.history.push(`/store/front/`);\r\n        if (!checkifApproved(storeId)) return setState({...state, storeCheck: true});\r\n        props.history.push(`/store/front/${storeId}`);\r\n    }, [props.userStore.state.storeLoaded, props.userStore.state.stores])\r\n\r\n    useEffect(() => {\r\n        if (state.isError) {\r\n            setTimeout(() => {setState({...state, isError: false, errMsg: ''})}, 10000);\r\n        }\r\n    }, [state.isError]);\r\n\r\n    let windowRef = null;\r\n\r\n    const openNewWindow = (url) => {\r\n        windowRef = window.open(url, 'Payment', 'statusbar=no,height=600,width=400');    \r\n    }\r\n\r\n    const handlePayment = async () => {\r\n        if (!(state.remoteConfigCheck == true && state.storeCheck == true) || state.clicked || _.isNull(state.user)) {\r\n            setState({...state, isError: true, errMsg: 'Wait for the loading to be completed'});\r\n            return;\r\n        }\r\n        setState({\r\n            ...state,\r\n            bgColor: 'rgb(22, 46, 88)',\r\n            color: 'white',\r\n            clicked: true\r\n        });\r\n        try {\r\n            const options = {\r\n                email: state.user?.email,\r\n                name: state.user?.username,\r\n                storename: storeId,\r\n                // payment_plan: firebaseConfigParams.storePaymentPlanID,\r\n                paymentTitle: `Payment for access to ${storeId}`,\r\n                description: `${props.userStore.state.user.username} is to pay ${state.store_cost} to have access to ${storeId} store`,\r\n                currency: state.currency,\r\n                currencyPricePerDollar: state.currencyPricePerDollar\r\n            };\r\n\r\n            let payment = await  props.paymentStore.initiatePayment(options);\r\n            const { link } = payment?.data?.data;\r\n            setState({\r\n                ...state,\r\n                bgColor: 'white',\r\n                color: 'rgb(22, 46, 88)',\r\n                clicked: false,\r\n                url: link\r\n            });\r\n            openNewWindow(link);\r\n        } catch(e) {\r\n            setState({\r\n                ...state,\r\n                bgColor: 'white',\r\n                color: 'rgb(22, 46, 88)',\r\n                clicked: false,\r\n                isError: true,\r\n                errMsg: 'Something went wrong...Probably your network',\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.userStore.trackApproval(storeId, (result) => {\r\n            if (_.isUndefined(result)) return;\r\n            if (result.approved == true) {\r\n               (async () => {\r\n                if (_.isNull(props.userStore.state.user)) return;\r\n                await props.userStore.getUserStore();\r\n                if (!_.isNull(windowRef)) windowRef.close();\r\n                props.history.push(`/store/front/${storeId}`);\r\n               })();\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n            <React.Fragment>\r\n                <div onClick={() => {setState({...state, errMsg: '', isError: false})}}>\r\n                    <ErrorMessage isError={state.isError} message={state.errMsg} />\r\n                </div>\r\n                <section className=\"my-5 pt-sm-5\">\r\n                    <Container>\r\n                        <Row>\r\n                            <Col xs=\"12\" className=\"text-center\">\r\n                                <div className=\"home-wrapper\">\r\n                                    <div className=\"mb-5\">\r\n                                        <Link to={'/'}>\r\n                                            <img src={logo} alt=\"logo\" height=\"44\" />\r\n                                        </Link>\r\n                                    </div>\r\n                                    <h3 className=\"mt-5\">Get Approved</h3>\r\n                                    <Row>\r\n                                        <Col md=\"4\"></Col>\r\n                                        <Col md=\"4\">\r\n                                            <p>Jumga requires you to pay an annual fee before you can access the store services</p>\r\n                                        </Col>\r\n                                        <Col md=\"4\"></Col>\r\n                                    </Row>\r\n\r\n                                    <Row>\r\n                                        <Col md=\"3\"></Col>\r\n                                        <CardMaintenance>\r\n                                            <div style={{cursor: 'pointer', width: '5%'}} align=\"left\" onClick={() => {\r\n                                                props.history.push('/store/front');\r\n                                            }}>\r\n                                                <i align=\"left\" className=\"bx bx-arrow-back mb-4 h4 text-primary\"></i>\r\n                                            </div>\r\n                                            <div align=\"left\">\r\n                                                <Row>\r\n                                                    <Col md=\"12\">\r\n                                                        <h5 className=\"font-size-25 text-uppercase\" style={{color: 'white', fontSize: 25}}>\r\n                                                            {state.store_cost == null ? \"\" : state.store_cost}\r\n                                                        </h5>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Col md=\"12\">\r\n                                                            <div align=\"right\">\r\n                                                                <button\r\n                                                                    disabled={!(state.remoteConfigCheck == true && state.storeCheck == true) || state.clicked || _.isNull(state.user)}\r\n                                                                    onClick={handlePayment}\r\n                                                                    style={{\r\n                                                                        borderRadius: 20, \r\n                                                                        backgroundColor: state.bgColor, \r\n                                                                        display: 'inline-block',\r\n                                                                        padding: '1%',\r\n                                                                        paddingLeft: '3%',\r\n                                                                        paddingRight: '3%',\r\n                                                                        cursor: 'pointer',\r\n                                                                        fontFamily: 'Sriracha, cursive',\r\n                                                                        color: state.color,\r\n                                                                        transition: 'all 0.5s ease'\r\n                                                                    }}\r\n                                                                >\r\n                                                                    pay {state.clicked? (\r\n                                                                        <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\r\n                                                                    ): <></>}\r\n                                                                </button>\r\n                                                            </div>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Col md=\"12\">\r\n                                                        <div align=\"left\">\r\n                                                            {\r\n                                                                _.isNull(state.url) ? <></> : (\r\n                                                                    <span style={{color: 'white', fontSize: '12'}}>\r\n                                                                        If window does not open click this  \r\n                                                                        <a target=\"_blank\" style={{color: 'dodgerblue'}} href={state.url}>Link</a>\r\n                                                                    </span>\r\n                                                                )\r\n                                                            }\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </div>\r\n                                        </CardMaintenance>\r\n\r\n                                        <Col md=\"3\"></Col>\r\n                                    </Row>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </section>\r\n            </React.Fragment>\r\n            );\r\n}\r\n            \r\nexport default withRouter(withTranslation()(stateWrapper(StoreCheckout)));","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\pages\\Store\\card-store-checkout.js",[],"C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\containers\\MasterContainer.js",["348","349"],"C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\components\\StoreLayout.js",[],"C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\pages\\Store\\StoreListing.js",["350","351","352","353","354","355","356","357","358","359"],"import React, { useEffect, useState }  from 'react';\r\nimport _ from 'lodash';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport CreateStore, {Backdrop} from './CreateStore';\r\nimport { Container, Row, Col, Button, Card, CardBody, CardTitle, Modal, ModalHeader, ModalBody, ModalFooter, Media, Table } from \"reactstrap\";\r\nimport stateWrapper from '../../containers/provider';\r\nimport storefront from \"../../assets/images/store-umbrella.png\";\r\nimport storefront2 from \"../../assets/images/store-umbrella1.png\";\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { withTranslation } from 'react-i18next';\r\nimport './store.scss';\r\n\r\nvar randomColor = require('randomcolor');\r\n\r\nconst StoreListing = (props) => {\r\n\r\n    const [stores, setStores] = useState([]);\r\n\r\n    // const [cat, useCat] = useState([]);\r\n    const [isOpen, setOpen] = useState(false);\r\n\r\n    const createStore = () => {\r\n        setOpen(!isOpen);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setStores(props.userStore.state.stores);\r\n    }, [props.userStore.state.stores]);\r\n\r\n    useEffect(() => {\r\n    }, [props.masterStore.state.remoteConfig]);\r\n\r\n    const bigScreen = (children) => (\r\n        <div style={{width: '70%'}} className=\"d-none d-md-block\">\r\n            {children}\r\n        </div>\r\n    );\r\n\r\n    const smallScreen = (children) => (\r\n        <div style={{width: '100%'}} className=\"d-md-none\">\r\n            {children}\r\n        </div>\r\n    );\r\n\r\n    const cardBurrow = (children, color = '#f6f7f9') => {\r\n        const lagreBox = () => <div style={{width: '30%', display: 'block', marginRight: 10, float: 'left'}} className='d-none d-md-inline-block' align=\"left\"> {box} </div>\r\n        const smallBox = () => <div style={{width: '100%', display: 'block', marginRight: 10, float: 'left'}} className='d-md-none' align=\"left\"> {box} </div>\r\n\r\n        const box = (\r\n            <Card\r\n                className=\"mt-4 store-listing-card\" \r\n                style={{borderRadius: 5, backgroundColor: '#faf0be', height: 200}}\r\n            >\r\n                <CardBody>\r\n                    {children}\r\n                </CardBody>\r\n            </Card>\r\n        )\r\n\r\n        return (\r\n            <div key={Date.now()} style={{width: '100%'}}>\r\n                {lagreBox()}\r\n                {smallBox()}\r\n            </div>\r\n        )\r\n    }\r\n    const storelisting = () => {\r\n        return (\r\n            <div style={{width: '100%', marginTop: '10%'}}>\r\n                <Row>\r\n                    <Col xs=\"12\">\r\n                        <div className=\"page-title-box d-flex align-items-center justify-content-between\" style={{margin: 0, padding: 0}}>\r\n                            <h4 className=\"mb-0 font-size-18\">{props.t(\"Recent stores\")}</h4>\r\n                        </div>\r\n                        <div style={{width: '100%', margin: 0}} align=\"left\">\r\n                            {cardBurrow((\r\n                                <div \r\n                                    onClick={() => {\r\n                                        createStore();\r\n                                    }}\r\n                                    style={{width: '100%', alignContent: 'center', height: '100%', cursor: 'pointer'}}\r\n                                >\r\n                                    <center style={{height: '80%', paddingTop: '20%'}} className=\"d-none d-md-block\">\r\n                                        <div>\r\n                                            <i className=\"bx bx-plus text-primary\" style={{fontSize: 20, fontWeight: 'bold'}}></i>\r\n                                        </div>\r\n                                        <h4 className=\"mb-0 font-size-16 text-primary\">Add store</h4>\r\n                                    </center>\r\n                                    <center style={{height: '100%', paddingTop: '20%'}} className='d-md-none' >\r\n                                        <div>\r\n                                            <i className=\"bx bx-plus text-primary\" style={{fontSize: 20, fontWeight: 'bold'}}></i>\r\n                                        </div>\r\n                                        <h4 className=\"mb-0 font-size-16 text-primary\">Add store</h4>\r\n                                    </center>\r\n                                    <div style={{width: '100%', backgroundColor: 'black', height: 1, opacity: 0.3}}></div>\r\n                                </div>\r\n                            ))}\r\n                            {stores.map((item, id) => {\r\n                                let categories = item.categories.length > 2 ? item.categories.splice(0,2) : item.categories;\r\n                                return cardBurrow((\r\n                                    <div \r\n                                        key={id}\r\n                                        onClick={() => {\r\n                                            props.history.push(`/store/front/${item?.storeId}`);\r\n                                        }}\r\n                                        style={{width: '100%', height: '100%', cursor: 'pointer'}}\r\n                                    >\r\n                                       <div style={{height: '80%'}}>\r\n                                            <h4 style={{fontSize: 16}}>{item.store}</h4>\r\n                                            <p>{item.storeId}</p>\r\n                                       </div>\r\n                                       <div style={{height: '20%'}}>\r\n                                            {categories.map((val, idx) => {\r\n                                                return (\r\n                                                    <div key={idx} style={{display: 'inline', marginRight: 4}}>\r\n                                                        <i className=\"bx bxs-circle font-size-10\" style={{color: randomColor(), marginRight: 3}}></i>\r\n                                                        <span \r\n                                                            style={{fontSize: 10 }}\r\n                                                        >\r\n                                                            {val}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                )\r\n                                            })}\r\n                                       </div>\r\n                                    </div>\r\n                                ), '#f7fcf1')\r\n                            })}\r\n                       </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n          <React.Fragment>\r\n                <div style={{position: 'fixed', backgroundColor: 'white', width: '100%', marginTop: 70, height: '40%'}}>\r\n                    <Row>\r\n                        <Col xs=\"12\">\r\n                            <div className=\"page-title-box\">\r\n                                <LazyLoadImage\r\n                                    alt={\"Store front\"}\r\n                                    src={storefront}\r\n                                    width={300}\r\n                                    className=\"d-none d-md-block\"\r\n                                    style={{float: 'right', marginTop: 20, marginRight: 10}}\r\n                                />\r\n                                <LazyLoadImage\r\n                                    alt={\"Store front\"}\r\n                                    src={storefront2}\r\n                                    width={300}\r\n                                    className=\"d-none d-md-block\"\r\n                                    style={{float: 'left', marginTop: 20, marginLeft: 10}}\r\n                                />\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                <div className=\"page-content\">\r\n                    <Container fluid>\r\n                        <center>\r\n                            {bigScreen(storelisting())}\r\n                            {smallScreen(storelisting())}\r\n                        </center>\r\n                    </Container>\r\n                </div>\r\n                <CreateStore isOpen={isOpen} createStore={createStore} categories={props.masterStore.state.categories}/>\r\n                {isOpen ? <Backdrop createStore={createStore} /> : <></>}\r\n            </React.Fragment>\r\n          );\r\n    }\r\n        \r\nexport default withRouter(withTranslation()(stateWrapper(StoreListing)));","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\routes\\middleware\\Storemiddleware.js",["360","361","362","363"],"import React, { useEffect } from \"react\";\r\nimport { Route,Redirect,withRouter } from \"react-router-dom\";\r\nimport { withTranslation } from 'react-i18next';\r\nimport * as _ from 'lodash';\r\nimport stateWrapper from \"../../containers/provider\";\r\nimport firebase from \"firebase/app\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n// Add the Firebase products that you want to use\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/functions\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/remote-config\";\r\nimport CONSTANTS from '../../App.constant';\r\n\r\nconst Storemiddleware = (superProps) => {\r\n\tconst Layout = superProps?.layout;\r\n\tconst Component = superProps?.component;\r\n\tconst path = superProps?.path;\r\n\treturn (\r\n\t\t<Route\r\n\t\t\tpath={path}\r\n\t\t\trender={(props) => {\r\n\t\t\t\r\n\t\t\t\t// here you can apply condition\r\n\t\t\t\tif (!localStorage.getItem(CONSTANTS.SESSIONSTORE)) {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Redirect to={{ pathname: \"/store/login\", state: { from: props.location } }} />\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn <Layout>\r\n\t\t\t\t\t<Component {...props} />\r\n\t\t\t\t</Layout>;\r\n\t\t\t}}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport default withRouter(withTranslation()(stateWrapper(Storemiddleware)));\r\n\r\n","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\components\\StoreHeader.js",["364","365","366"],"import React, { useState, useEffect } from 'react';\r\nimport * as _ from 'lodash';\r\n\r\nimport { Row, Col } from \"reactstrap\";\r\n\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\n// Reactstrap\r\nimport { Dropdown, DropdownToggle, DropdownMenu } from \"reactstrap\";\r\n\r\n// Import menuDropdown\r\nimport NotificationDropdown from \"./CommonForBoth/TopbarDropdown/NotificationDropdown\";\r\nimport ProfileMenu from \"./CommonForBoth/TopbarDropdown/ProfileMenu\";\r\n\r\nimport logo from \"../assets/images/jumga basket logo.png\";\r\nimport logoDark from \"../assets/images/jumga logo.png\";\r\nimport megamenuImg from \"../assets/images/megamenu-img.png\";\r\n\r\n\r\n\r\n\r\n//i18n\r\nimport { withTranslation } from 'react-i18next';\r\nimport stateWrapper from '../containers/provider';\r\n\r\n\r\nconst StoreHeader = (props) => {\r\n\r\n  const [search, setsearch] = useState(false);\r\n  const [searchtext, setSearchText] = useState('');\r\n  const [megaMenuDrp, setmegaMenu] = useState(false);\r\n  const [cat, setCat] = useState({});\r\n  const [socialDrp, setsocialDrp] = useState(false);\r\n  const searchFor = (e) => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  const trimAndReplaceSpaces = (text) => {\r\n      return String(text).trim().replace(/\\s/g, '-').toLowerCase();\r\n  }\r\n\r\n  useEffect(() => {\r\n      let x = async () => await props.masterStore.getAllCategories();\r\n      x();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setCat(props.masterStore.state.categories);\r\n  }, [props.masterStore.state.categories]);\r\n\r\n      return (\r\n       <React.Fragment>\r\n        <header id=\"page-topbar\">\r\n          <div className=\"navbar-header\">\r\n            <div className=\"d-flex\">\r\n              <div className=\"navbar-brand-box\" style={{position: 'relative', left: -30, paddingLeft: 0}}>\r\n                <Link to=\"/\" className=\"logo logo-dark\">\r\n                  <span className=\"logo-sm\">\r\n                    <img src={logo} alt=\"\" height=\"30\" />\r\n                  </span>\r\n                  <span className=\"logo-lg\">\r\n                    <img src={logoDark} alt=\"\" height=\"30\" />\r\n                  </span>\r\n                </Link>\r\n              </div>\r\n\r\n              <form onSubmit={searchFor} className=\"app-search d-none d-lg-block\">\r\n                <div className=\"position-relative\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={e => setSearchText(e.target.value)}\r\n                    value={searchtext}\r\n                    placeholder=\"Search...\"\r\n                  />\r\n                  <span className=\"bx bx-search-alt\"></span>\r\n                </div>\r\n              </form>\r\n\r\n              <Dropdown className=\"dropdown-mega d-none d-lg-block ml-2\" isOpen={megaMenuDrp} toggle={() => { setmegaMenu( !megaMenuDrp ) }}>\r\n                <DropdownToggle className=\"btn header-item waves-effect\" caret tag=\"button\"> \r\n              {props.t('Categories')}  {\" \"}\r\n                  <i className=\"mdi mdi-chevron-down\"></i></DropdownToggle>\r\n                <DropdownMenu className=\"dropdown-megamenu\">\r\n                    {\r\n                        <Row>\r\n                            <Col sm={10}>  \r\n                                {\r\n                                    Object.keys(cat).map((item, id) => {\r\n                                        return (\r\n                                            <div key={id} className=\"list-unstyled megamenu-list\">\r\n                                                <Link to={`/categories/${trimAndReplaceSpaces(item)}`}>\r\n                                                    <h5 className=\"font-size-14 mt-0\">{props.t(item)}</h5>\r\n                                                </Link>\r\n                                                {\r\n                                                    Object.keys(cat[item]).map((item2, idx) => {\r\n                                                        let x = cat[item];\r\n                                                        return (\r\n                                                            <div key={idx} style={{float: 'left', margin: 20}}>\r\n                                                                <Link to={`/categories/${trimAndReplaceSpaces(item2)}`}><h6 className=\"font-size-14 mt-0\">{props.t(item2)}</h6></Link>\r\n                                                                <div style={{width: '100%', borderColor: 'black', borderWidth: 1, height: 1, backgroundColor: 'slategray'}}>&nbsp;</div>\r\n                                                                {_.isArray(x[item2])? x[item2].map((val, valKey) => {\r\n                                                                    return (\r\n                                                                        <Link key={valKey} to={`/categories/${trimAndReplaceSpaces(val)}`}><div className=\"font-size-14\">{val}</div></Link>\r\n                                                                    )\r\n                                                                }) : <></>}\r\n                                                            </div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Col>\r\n                            <Col sm={2}>\r\n                                <Row>\r\n                                    <Col sm={5}>\r\n                                        <div>\r\n                                            <img\r\n                                            src={megamenuImg}\r\n                                            alt=\"\"\r\n                                            className=\"img-fluid mx-auto d-block\"\r\n                                            />\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    }\r\n                </DropdownMenu>\r\n              </Dropdown>\r\n            </div>\r\n            <div className=\"d-flex\">\r\n                <div className=\"dropdown d-inline-block d-lg-none ml-2\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn header-item noti-icon waves-effect\"\r\n                        id=\"page-header-search-dropdown\"\r\n                        onClick={() => { setsearch(!search); }}>\r\n                        <i className=\"mdi mdi-magnify\"></i>\r\n                    </button>\r\n                    <div\r\n                    className={search ? \"dropdown-menu dropdown-menu-lg dropdown-menu-right p-0 show\" : \"dropdown-menu dropdown-menu-lg dropdown-menu-right p-0\"}\r\n                    aria-labelledby=\"page-header-search-dropdown\"\r\n                    >\r\n                    <form className=\"p-3\" onSubmit={searchFor}>\r\n                        <div className=\"form-group m-0\">\r\n                        <div className=\"input-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder={props.t('Search') + \"...\"}\r\n                                value={searchtext}\r\n                                onChange={e => setSearchText(e.target.value)}\r\n                                aria-label=\"Recipient's username\"\r\n                            />\r\n                            <div className=\"input-group-append\">\r\n                                <button className=\"btn btn-primary\" type=\"submit\">\r\n                                    <i className=\"mdi mdi-magnify\"></i>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </form>\r\n                    </div>\r\n                </div>\r\n\r\n              <NotificationDropdown />\r\n              <ProfileMenu />\r\n            </div>\r\n          </div>\r\n        </header>\r\n      </React.Fragment>\r\n      );\r\n    }\r\n\r\nexport default withRouter(withTranslation()(stateWrapper(StoreHeader)));\r\n\r\n","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\pages\\Store\\CreateStore.js",["367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391"],"import React, { useEffect, useState, useRef }  from 'react';\r\nimport _ from 'lodash';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport { AvForm, AvField, AvGroup, AvInput, AvFeedback, AvRadioGroup, AvRadio, AvCheckboxGroup, AvCheckbox } from 'availity-reactstrap-validation';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport { Container, Row, Col, Button, Card, CardBody, CardTitle, Modal, ModalHeader, ModalBody, ModalFooter, Media, Table } from \"reactstrap\";\r\nimport stateWrapper from '../../containers/provider';\r\nimport storefront from \"../../assets/images/store-umbrella.png\";\r\nimport storefront2 from \"../../assets/images/store-umbrella1.png\";\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport './create-store.scss';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { createStore } from 'redux';\r\n\r\nconst CreateStore = (props) => {\r\n    const [state, setState] = useState({\r\n        isOpen: props.isOpen,\r\n        store: null,\r\n        storeId: null,\r\n    });\r\n\r\n    const [categories, setCat] = useState([]);\r\n    const [checkedCat, setCheckedCat] = useState({});\r\n\r\n    useEffect(() => {\r\n        let x = async () => {\r\n            let t = await props.masterStore.getAllCategories();\r\n            let temp = {};\r\n            let newTemp = [];\r\n            Object.keys(t).map(i => {\r\n                temp[i] = false;\r\n                newTemp.push(i);\r\n                let x = t[i];\r\n                Object.keys(x).map(y => {\r\n                    temp[y] = false;\r\n                    newTemp.push(y);\r\n                    x[y].map(z => {\r\n                        temp[z] = false;\r\n                        newTemp.push(z);\r\n                    });\r\n                })\r\n            });\r\n\r\n            setCheckedCat(temp);\r\n            setCat(newTemp);\r\n        }\r\n\r\n        x();\r\n    }, [props.masterStore]);\r\n\r\n    const form = useRef();\r\n\r\n    let timeout = null;\r\n\r\n    useEffect(() => {\r\n        setState({...state, isOpen: props.isOpen});\r\n    }, [props.isOpen]);\r\n\r\n    let drawerClasses =  state.isOpen ? 'side-drawer open' : 'side-drawer';\r\n\r\n    const bigScreen = (children) => (\r\n        <div style={{width: '70%',  marginTop: '4%'}} className=\"d-none d-md-block\">\r\n            {children}\r\n        </div>\r\n    );\r\n\r\n    const smallScreen = (children) => (\r\n        <div style={{width: '100%', marginTop: '4%'}} className=\"d-md-none\">\r\n            {children}\r\n        </div>\r\n    );\r\n\r\n    const checkBox = item => {\r\n        let temp = {...checkedCat};\r\n        temp[`${item}`] = !temp[`${item}`];\r\n        setCheckedCat(temp);\r\n    }\r\n\r\n    const handleValidSubmit = (e, v) => {\r\n        e.preventDefault();\r\n        let newValues = {\r\n            ...v,\r\n            categories: Object.keys(checkedCat).filter(itemx => {\r\n                if (checkedCat[itemx] == true) return itemx;\r\n            }),\r\n            storeId: state.storeId,\r\n            paymentDates: [],\r\n            approved: false,\r\n            userEmail: props?.userStore?.state?.user?.email,\r\n            dispatchRiders: null,\r\n            createdDate: Date.now(),\r\n            dateVisited: Date.now(),\r\n        }\r\n\r\n        props.userStore.createStore(newValues, props);\r\n    }\r\n\r\n      const processStoreName = async (e) => {\r\n        let checker = await props.userStore.checkIfStoreNameExists(props.userStore.storeNameCleanUp(e));\r\n        console.log(checker);\r\n        if (checker?.status) {\r\n            await setState({\r\n                ...state, \r\n                storeId: checker?.recommendation,\r\n            });\r\n            return;\r\n        }\r\n\r\n        await setState({...state, storeId: props.userStore.storeNameCleanUp(e)});\r\n        return;\r\n    }\r\n\r\n    const screen = (\r\n        <Row>\r\n            <Col xs=\"12\">\r\n                <Card style={{backgroundColor: '#f8f8fb'}}>\r\n                    <CardBody>\r\n                        <div>\r\n                            <i\r\n                                 className=\"bx bx-arrow-back\" style={{marginRight: 10, fontSize: 16, cursor: 'pointer'}}\r\n                                 onClick={props.createStore}\r\n                            ></i>\r\n                            <span style={{fontSize: 16, fontWeight: 'lighter'}}>Create a store</span>\r\n                        </div>\r\n                        <div style={{marginTop: '10%'}}>\r\n                            <div style={{fontSize: '23px', lineHeight: '32px', fontWeight: '500'}}>\r\n                                Let's start with a name for your \r\n                                <h1 className=\"ml1\" style={{color: '#d3212d'}}>\r\n                                    <span className=\"text-wrapper\">\r\n                                        <span className=\"line line1\"></span>\r\n                                        <span className=\"letters\">Store</span>\r\n                                        <span className=\"line line2\"></span>\r\n                                    </span>\r\n                                </h1>\r\n                            </div>\r\n\r\n                            <AvForm ref={form} className=\"form-horizontal\" onValidSubmit={(e,v) => { handleValidSubmit(e,v) }}>\r\n                                <AvGroup>\r\n                                    <AvInput\r\n                                        style={{fontSize: '23px', color: 'black', outline: 0, backgroundColor: 'inherit', fontWeight: '500'}}\r\n                                        validate={{\r\n                                            minLength: { value: 3, errorMessage: \"Storename must be more than 3 letters\"},\r\n                                            maxLength: { value: 20, errorMessage: 'Storename must be lest than 20 letters'}\r\n                                        }}\r\n                                        placeholder=\"Enter your store name\"\r\n                                        name=\"store\" \r\n                                        id=\"store\" \r\n                                        required\r\n                                        autoComplete=\"off\"\r\n                                        onChange={async (e) => {\r\n                                            const { name, value} = e.target;\r\n                                            let temp = state;\r\n                                            await setState({\r\n                                                ...temp, \r\n                                                store: value\r\n                                            });\r\n                                            clearTimeout(timeout);\r\n                                            if (String(value).length >= 3) {    \r\n                                                timeout = setTimeout(() => {\r\n                                                    processStoreName(value);\r\n                                                }, 1000);\r\n                                            }\r\n                                        }}\r\n\r\n                                    />\r\n                                </AvGroup>\r\n                                \r\n                                <div className=\"bg-warning\" style={{padding: 3, color: 'white', borderRadius: 10, display: 'inline-block', marginBottom: '4%'}}>{state.storeId}</div>\r\n                                    \r\n                                <div style={{fontSize: '23px', lineHeight: '32px', fontWeight: '500', marginBottom: '4%'}}>\r\n                                    Now choose your store categories (max of 10)\r\n                                </div>\r\n                                \r\n                                <div style={{marginBottom: '5%'}}>\r\n                                    {\r\n                                        categories.map((item, idd) => {\r\n                                            return (\r\n                                                <span className=\"custom-control custom-checkbox mb-3\" key={idd} style={{margin: 5, display: 'inline-block'}}>\r\n                                                    <input name={item} type=\"checkbox\" className=\"custom-control-input\" id=\"CustomCheck1\" onChange={() => checkBox(item)} checked={checkedCat[`${item}`]} />\r\n                                                    <label className=\"custom-control-label\" onClick={() => checkBox(item)} >{item}</label>\r\n                                                </span>\r\n                                                \r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </div>\r\n\r\n                                <div className=\"mt-3\">\r\n                                    <button\r\n                                        className=\"btn btn-primary btn-block waves-effect waves-light\" \r\n                                        type=\"submit\"\r\n                                        style={{width: 300}}\r\n                                    >\r\n                                        Create & Prooceed to Payment\r\n                                    </button>\r\n                                </div>\r\n                            </AvForm>\r\n\r\n\r\n                        </div>\r\n                    </CardBody>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div style={{width: '100%'}}>   \r\n            <div className={drawerClasses} style={{position: state.isOpen ? 'absolute' : 'fixed'}}>\r\n                    <div className=\"d-none d-md-block\" style={{position: 'fixed', backgroundColor: 'white', width: '25%', height: '100%', right: '0%'}}>\r\n                        <Row>\r\n                            <Col xs=\"12\">\r\n                                <div className=\"page-title-box\">\r\n                                    <LazyLoadImage\r\n                                        alt={\"Store front\"}\r\n                                        src={storefront}\r\n                                        width={300}\r\n                                        className=\"d-none d-md-block store-front\"\r\n                                        style={{position:'relative', marginTop: '70%', marginRight: 10, left: -20}}\r\n                                    />\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                    <div className=\"page-content\">\r\n                        <Container fluid>\r\n                            {bigScreen(screen)}\r\n                            {smallScreen(screen)}\r\n                        </Container>\r\n                    </div>\r\n            </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport const Backdrop = props => {\r\n    return(\r\n        <div className=\"backdrop\" onClick={props.createStore}/>\r\n      )\r\n  }\r\n  \r\n\r\nexport default withRouter(withTranslation()(stateWrapper(CreateStore)));","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\pages\\Store\\StoreDetails.js",["392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413"],"import React, { useEffect, useState }  from 'react';\r\nimport _ from 'lodash';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport CreateStore, {Backdrop} from './CreateStore';\r\nimport { Container, Row, Col, Button, Card, CardBody, CardTitle, Modal, ModalHeader, ModalBody, ModalFooter, Media, Table } from \"reactstrap\";\r\nimport stateWrapper from '../../containers/provider';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { withTranslation } from 'react-i18next';\r\nimport './store.scss';\r\n\r\n\r\nconst StoreDetails = (props) => {\r\n    const [isLoading, setLoading] = useState(true);\r\n    const storeId = props.match.params.id;\r\n\r\n    useEffect(() => {\r\n        if (!props.userStore.state.storeLoaded) return;\r\n        const checkifApproved = (storeId) => {\r\n            let checkApproval = props.userStore.state.stores.filter(item => {\r\n                return item.storeId == storeId && item.approved == true\r\n            });\r\n\r\n            if (checkApproval.length > 0) return true;\r\n            return false;\r\n        }\r\n        if (!checkifApproved(storeId)) props.history.push(`/store/get-approved/${storeId}`);\r\n        setLoading(false);\r\n    }, [props.userStore.state.storeLoaded, props.userStore.state.stores])\r\n\r\n    useEffect(() => {\r\n        props.userStore.trackApproval(storeId, (result) => {\r\n            if (_.isUndefined(result)) return;\r\n            if (result.approved == false) {\r\n               (async () => {\r\n                if (_.isNull(props.userStore.state.user)) return;\r\n                await props.userStore.getUserStore();\r\n                props.history.push(`/store/get-approved/${storeId}`);\r\n               })();\r\n            } else {\r\n                props.history.push(`/store/front/${storeId}/overview`);\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n          <React.Fragment>\r\n                {\r\n                    isLoading ? (\r\n                        <div style={{position: 'fixed', top: '0%', width: '100%', height: '100%', left: '0%', zIndex: 5000, backgroundColor: '#f8f8fb'}}>\r\n                            <div style={{position: 'relative', top: '45%', left: '43%'}}>\r\n                                <div className=\"lds-ring-x\"><div></div><div></div><div></div><div></div></div>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <div></div>\r\n                    )\r\n                }\r\n            </React.Fragment>\r\n          );\r\n    }\r\n        \r\nexport default withRouter(withTranslation()(stateWrapper(StoreDetails)));","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\routes\\middleware\\StoreAuthmiddleware.js",["414","415","416","417","418"],"import React, { useEffect, useState } from \"react\";\r\nimport { Route,Redirect,withRouter } from \"react-router-dom\";\r\nimport { withTranslation } from 'react-i18next';\r\nimport * as _ from 'lodash';\r\nimport stateWrapper from \"../../containers/provider\";\r\nimport firebase from \"firebase/app\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n// Add the Firebase products that you want to use\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/functions\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/remote-config\";\r\nimport CONSTANTS from '../../App.constant';\r\n\r\nconst StoreAuthmiddleware = (superProps) => {\r\n\tconst Layout = superProps?.layout;\r\n\tconst Component = superProps?.component;\r\n    const path = superProps?.path;\r\n\r\n\treturn (\r\n\t\t<Route\r\n\t\t\tpath={path}\r\n\t\t\trender={(props) => {\r\n\t\t\t\r\n\t\t\t\t// here you can apply condition\r\n\t\t\t\tif (!localStorage.getItem(CONSTANTS.SESSIONSTORE)) {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Redirect to={{ pathname: \"/store/login\", state: { from: props.location } }} />\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\treturn <Layout>\r\n\t\t\t\t\t<Component {...props} />\r\n\t\t\t\t</Layout>;\r\n\t\t\t}}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport default withRouter(withTranslation()(stateWrapper(StoreAuthmiddleware)));\r\n\r\n","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\containers\\PaymentContainer.js",["419","420"],"import * as _ from \"lodash\";\r\nimport firebase from \"firebase/app\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n// Add the Firebase products that you want to use\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/functions\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/remote-config\";\r\n\r\nimport { Container } from \"unstated\";\r\nimport CONSTANTS from \"../App.constant\";\r\nimport axios from 'axios';\r\nimport { firebaseConfigParams } from '../config';\r\nimport { get } from \"lodash\";\r\n\r\nclass PaymentContainer extends Container {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {}        \r\n    }\r\n\r\n    initiatePayment = async (paymentDetails) => {\r\n        try {\r\n            const callable = firebase.functions().httpsCallable(CONSTANTS.FUNCNTIONS.PROCESSPAYMENT);\r\n            const response = await callable(paymentDetails);\r\n            return response.data;\r\n        } catch(e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    convertToLocalCurrency = async (price, currency) => {\r\n        try {\r\n            if (_.isNull(currency) || _.isNull(price)) return;\r\n            let ip = await axios.get(firebaseConfigParams.geolocationIpRoute);\r\n            let result = await axios.get(`${firebaseConfigParams.geolocationRoute}&ip=${ip.data.ip}`);\r\n            // if (result.data?.status === 'success') {\r\n                \r\n            // }\r\n            let newCurrency = result.data?.currency?.code;\r\n            if (newCurrency === currency) {\r\n                const formatter = new Intl.NumberFormat('en-US', {\r\n                    style: 'currency',\r\n                    currency: newCurrency,\r\n                    minimumFractionDigits: 2\r\n                });\r\n\r\n                return {\r\n                    store_cost: formatter.format(price),\r\n                    currency: newCurrency,\r\n                    currencyPricePerDollar: 1,\r\n                };\r\n            }\r\n            let newExchange = await axios.get(`https://free.currconv.com/api/v7/convert?q=${currency}_${newCurrency}&compact=ultra&apiKey=${firebaseConfigParams.currencyExchangeApiKey}`);\r\n            if(_.isEmpty(newExchange.data)) throw new Error('Something went wrong with currency exchange');\r\n            let x = Object.keys(newExchange.data).map(i => {\r\n                return newExchange.data[i];\r\n            });\r\n            const formatter = new Intl.NumberFormat('en-US', {\r\n                style: 'currency',\r\n                currency: newCurrency,\r\n                minimumFractionDigits: 2\r\n            });\r\n\r\n            return {\r\n                store_cost: formatter.format(x[0] * price),\r\n                currency: newCurrency,\r\n                currencyPricePerDollar: x[0]\r\n            };\r\n            // throw new Error(`${result.data?.status} ${result.data?.message}`);\r\n        } catch(err) {\r\n            throw new Error(err);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport { PaymentContainer }","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\pages\\Utility\\payment-close.js",[],"C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\pages\\Utility\\comin-soon.js",["421"],"import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\n\r\n//Import Images\r\nimport thank from \"../../assets/images/thank-you.jpg\";\r\n\r\nclass ComingSoon extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"account-pages my-5 pt-5\" style={{position: 'relative', top: 20}}>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col lg=\"12\">\r\n                                <div className=\"text-center mb-5\">\r\n                                    <h1 className=\"display-1 font-weight-medium\">Coming S<i className=\"bx bx-buoy bx-spin text-primary display-3\"></i><i className=\"bx bx-buoy bx-spin text-primary display-3\"></i>n</h1>\r\n                                    <h4 className=\"display-2\" style={{fontSize:16, marginTop: 20, fontFamily: 'Sriracha, cursive'}}>This feature is in the development stack</h4>\r\n                                    <div className=\"mt-5 text-center\">\r\n                                        <Link \r\n                                            className=\"btn btn-success waves-effect waves-light\" \r\n                                            to=\"#\"\r\n                                            onClick={e => {\r\n                                                e.preventDefault();\r\n                                                this.props.history.goBack();\r\n                                            }}\r\n                                        >Go Back</Link>\r\n                                    </div>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ComingSoon;","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\pages\\Store\\StoreAddProduct.js",["422","423","424","425","426","427","428","429","430","431","432","433","434"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport * as _ from 'lodash';\r\nimport { Container, Row, Col, Form, FormGroup, Input, Card, CardBody, CardTitle, CardSubtitle, Button, Label } from \"reactstrap\";\r\nimport Select from 'react-select';\r\nimport Dropzone from 'react-dropzone';\r\nimport stateWrapper from '../../containers/provider';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ErrorMessage from '../../components/Common/ErrorMessage';\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from '../../components/Common/Breadcrumb';\r\n\r\nconst  StoreAddProduct = (props) => {\r\n    const storeId = props.match.params?.id;\r\n    const cleanUpCategories = (cat) => {\r\n        let tmp = []\r\n        Object.keys(cat).map(item => {\r\n            tmp.push({value: item, label: item});\r\n            Object.keys(cat[item]).map((item2, idx) => {\r\n                let x = cat[item];\r\n                tmp.push({value: item2, label: item2});\r\n                _.isArray(x[item2]) ? x[item2].map(val => {\r\n                    tmp.push({value: val, label: val});\r\n                }) : (()=> {})();\r\n            })\r\n        });\r\n        return tmp;\r\n    }\r\n    const [state, setState] = useState({\r\n        selectedFiles: [],\r\n        isLoading: true,\r\n        productname: '',\r\n        manufacturename: '',\r\n        manufacturebrand: '',\r\n        pastprice: 0.00,\r\n        currentprice: 0.00,\r\n        isError: false,\r\n        errMsg: '',\r\n        productdesc: '',\r\n        metaname: '',\r\n        metakeywords: '',\r\n        metadescription: '',\r\n        categories: [],\r\n        isSubmitted: false,\r\n        transferRate: '',\r\n        stock: 1,\r\n        options: cleanUpCategories(props.masterStore.state.categories)\r\n    });\r\n\r\n    const removeImage = (f, i) => {\r\n        let newImageFile = state.selectedFiles.filter((item, id) => {\r\n            return item !== f && id !== i\r\n        });\r\n\r\n        setState({\r\n            selectedFiles: newImageFile\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!props.userStore.state.storeLoaded) return;\r\n        const checkifApproved = (storeId) => {\r\n            let checkApproval = props.userStore.state.stores.filter(item => {\r\n                return item.storeId == storeId && item.approved == true\r\n            });\r\n\r\n            if (checkApproval.length > 0) return true;\r\n            return false;\r\n        }\r\n        if (!checkifApproved(storeId)) props.history.push(`/store/get-approved/${storeId}`);\r\n        setState({...state, isLoading: false});\r\n    }, [props.userStore.state.storeLoaded, props.userStore.state.stores])\r\n\r\n    useEffect(() => {\r\n        props.userStore.trackApproval(storeId, (result) => {\r\n            if (_.isUndefined(result)) return;\r\n            if (result.approved == false) {\r\n               (async () => {\r\n                if (_.isNull(props.userStore.state.user)) return;\r\n                await props.userStore.getUserStore();\r\n                props.history.push(`/store/get-approved/${storeId}`);\r\n               })();\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (_.isEmpty(Object.keys(props.masterStore.state.categories))) return;\r\n        if (state.options.length > 0) return;\r\n        setState({...state, options: cleanUpCategories(props.masterStore.state.categories)});\r\n    }, [props.masterStore.state.categories]);\r\n\r\n    const handleAcceptedFiles = (files) => {\r\n        let newFiles = files.filter(item => {\r\n            return String(item.type).includes('image');\r\n        })\r\n        newFiles.map(file => Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n            formattedSize: formatBytes(file.size)\r\n        }));\r\n\r\n        setState({ ...state, selectedFiles: newFiles });\r\n    }\r\n\r\n    const formatBytes = (bytes, decimals = 2) => {\r\n        if (bytes === 0) return '0 Bytes';\r\n        const k = 1024;\r\n        const dm = decimals < 0 ? 0 : decimals;\r\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n\r\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n    }\r\n\r\n    const cancel = () => {\r\n        setState({\r\n            ...state, \r\n            selectedFiles: [],\r\n            productname: '',\r\n            manufacturename: '',\r\n            manufacturebrand: '',\r\n            pastprice: 0.00,\r\n            currentprice: 0.00,\r\n            isError: false,\r\n            errMsg: '',\r\n            productdesc: '',\r\n            metaname: '',\r\n            metakeywords: '',\r\n            metadescription: '',\r\n            categories: [],\r\n            transferRate: '',\r\n            stock: 1\r\n        });\r\n    }\r\n\r\n    const cancelForm = e => {\r\n        e.preventDefault();\r\n        cancel();\r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n        if (state.isError) {\r\n            setTimeout(() => {setState({...state, isError: false, errMsg: ''})}, 10000);\r\n        }\r\n    }, [state.isError]);\r\n\r\n    const submitProduct = async (e) => {\r\n        e.preventDefault();\r\n        setState({...state, isSubmitted: true});\r\n        if (!(parseInt(state.currentprice) > 0)) return setState({...state, isError: true, errMsg: 'Add a valid price', isSubmitted: false});\r\n        if (_.isEmpty(state.productname) || String(state.productname).length <= 3) return setState({...state, isError: true, errMsg: 'Enter a valid product name', isSubmitted: false});\r\n        if (_.isEmpty(state.productdesc) || String(state.productdesc).length < 10) return setState({...state, isError: true, errMsg: 'Make your product description presentable', isSubmitted: false});\r\n        if (!(state.selectedFiles.length > 0)) return setState({...state, isError: true, errMsg: 'Add at least one image', isSubmitted: false});\r\n        if (!_.isEmpty(state.metaname)) {\r\n            if (String(state.metaname).length <= 3) return setState({...state, isError: true, errMsg: 'Add valid meta tags information', isSubmitted: false});\r\n            if (_.isEmpty(state.metakeywords) || String(state.metakeywords).length < 2) return setState({...state, isError: true, errMsg: 'Add valid meta tags information', isSubmitted: false});\r\n        }\r\n\r\n        let values = {\r\n            selectedFiles: state.selectedFiles,\r\n            productname: state.productname,\r\n            manufacturename: state.manufacturename,\r\n            manufacturebrand: state.manufacturebrand,\r\n            pastprice: state.pastprice,\r\n            currentprice: state.currentprice,\r\n            productdesc: state.productdesc,\r\n            metaname: state.metaname,\r\n            metakeywords: state.metakeywords,\r\n            metadescription: state.metadescription,\r\n            categories: state.categories,\r\n            storeId: storeId,\r\n            stock: state.stock,\r\n        }\r\n        try {\r\n            \r\n            let images = [];\r\n            await Promise.all(values.selectedFiles.map(async (files) => {\r\n                let url = await props.userStore.uploadImage(files, transferRate => {\r\n                    setState({...state, transferRate: transferRate, isSubmitted: true});\r\n                });\r\n                images.push(url);\r\n            }));\r\n\r\n            values['images'] = images;\r\n            let result = await props.userStore.createProduct(values);\r\n            cancel();\r\n            props.history.push(`/${result}`);\r\n\r\n        } catch(err) {\r\n            console.log(err);\r\n            setState({...state, isError: true, errMsg: 'An error as occurred', isSubmitted: false});\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                state.isLoading ? (\r\n                    <div style={{position: 'fixed', top: '0%', width: '100%', height: '100%', left: '0%', backgroundColor: '#f8f8fb'}}>\r\n                        <div style={{position: 'relative', top: '45%', left: '50%'}} className=\"d-none d-md-block\">\r\n                            <div className=\"lds-ring-x\"><div></div><div></div><div></div><div></div></div>\r\n                        </div>\r\n                        <div style={{position: 'relative', top: '45%', left: '40%'}} className=\"d-md-none\">\r\n                            <div className=\"lds-ring-x\"><div></div><div></div><div></div><div></div></div>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"page-content\">\r\n                         <div onClick={() => {setState({...state, errMsg: '', isError: false})}}>\r\n                            <ErrorMessage isError={state.isError} message={state.errMsg} />\r\n                        </div>\r\n                        <Container fluid>\r\n\r\n                            {/* Render Breadcrumb */}\r\n                            <Breadcrumbs title={storeId} breadcrumbItem=\"Add Product\" />\r\n                            \r\n                            <Row>\r\n                                <Col xs=\"12\">\r\n                                    <Card>\r\n                                        <CardBody>\r\n\r\n                                            <CardTitle>Provide Product Information</CardTitle>\r\n                                            <CardSubtitle className=\"mb-3\">\r\n                                                Fill all information below\r\n                                            </CardSubtitle>\r\n\r\n                                            <Form>\r\n                                                <Row>\r\n                                                    <Col sm=\"6\">\r\n                                                        <FormGroup>\r\n                                                            <Label htmlFor=\"productname\">Product Name</Label>\r\n                                                            <Input \r\n                                                                onChange={e => setState({...state, productname: e.target.value})} \r\n                                                                id=\"productname\" name=\"productname\" type=\"text\" className=\"form-control\" value={state.productname} />\r\n                                                        </FormGroup>\r\n                                                        <FormGroup>\r\n                                                            <Label htmlFor=\"manufacturername\">Manufacturer Name</Label>\r\n                                                            <Input \r\n                                                                onChange={e => setState({...state, manufacturename: e.target.value})}\r\n                                                                id=\"manufacturername\" name=\"manufacturername\" type=\"text\" className=\"form-control\" value={state.manufacturename} />\r\n                                                        </FormGroup>\r\n                                                        <FormGroup>\r\n                                                            <Label htmlFor=\"manufacturerbrand\">Manufacturer Brand</Label>\r\n                                                            <Input \r\n                                                                onChange={e => setState({...state, manufacturebrand: e.target.value})}\r\n                                                                id=\"manufacturerbrand\" name=\"manufacturerbrand\" type=\"text\" className=\"form-control\" value={state.manufacturebrand} />\r\n                                                        </FormGroup>\r\n                                                        <FormGroup>\r\n                                                            <Label htmlFor=\"price\">Past Price ($)</Label>\r\n                                                            <Input \r\n                                                                onChange={e => setState({...state, pastprice: e.target.value})}\r\n                                                                id=\"pastprice\" name=\"pastprice\" type=\"number\" className=\"form-control\" value={state.pastprice} />\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n\r\n                                                    <Col sm=\"6\">\r\n                                                        <FormGroup>\r\n                                                            <Label htmlFor=\"price\">Current Price ($)</Label>\r\n                                                            <Input \r\n                                                                onChange={e => setState({...state, currentprice: e.target.value})}\r\n                                                                id=\"price\" name=\"price\" type=\"number\" className=\"form-control\" value={state.currentprice} />\r\n                                                        </FormGroup>\r\n                                                        <FormGroup>\r\n                                                            <Label htmlFor=\"productdesc\">Product Description</Label>\r\n                                                            <textarea \r\n                                                                onChange={e => setState({...state, productdesc: e.target.value})}\r\n                                                                className=\"form-control\" id=\"productdesc\" rows=\"5\" value={state.productdesc}></textarea>\r\n                                                        </FormGroup>\r\n                                                        <FormGroup className=\"select2-container\">\r\n                                                            <Label className=\"control-label\">Features</Label>\r\n                                                            <Select \r\n                                                                onChange={e => {\r\n                                                                    setState({...state, categories: e.map(i => i.value)});\r\n                                                                }}\r\n                                                                classNamePrefix=\"select2-selection\" placeholder=\"Choose Category\" title=\"Category\" options={state.options} isMulti />\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Form>\r\n\r\n                                        </CardBody>\r\n                                    </Card>\r\n\r\n                                    <Card>\r\n                                        <CardBody>\r\n                                            <CardTitle className=\"mb-3\">Product Images</CardTitle>\r\n                                            <Form>\r\n                                                <Dropzone\r\n                                                    onDrop={acceptedFiles =>\r\n                                                        handleAcceptedFiles(acceptedFiles)\r\n                                                    }\r\n                                                >\r\n                                                    {({ getRootProps, getInputProps }) => (\r\n                                                        <div className=\"dropzone\">\r\n                                                            <div\r\n                                                                className=\"dz-message needsclick\"\r\n                                                                {...getRootProps()}\r\n                                                            >\r\n                                                                <input {...getInputProps()} />\r\n                                                                <div className=\"dz-message needsclick\">\r\n                                                                    <div className=\"mb-3\">\r\n                                                                        <i className=\"display-4 text-muted bx bxs-cloud-upload\"></i>\r\n                                                                    </div>\r\n                                                                    <h4>Drop files here or click to upload.</h4>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    )}\r\n                                                </Dropzone>\r\n                                                <div\r\n                                                    className=\"dropzone-previews mt-3\"\r\n                                                    id=\"file-previews\"\r\n                                                >\r\n                                                    {state.selectedFiles.map((f, i) => {\r\n                                                        return (\r\n                                                            <Card\r\n                                                                onClick={e => removeImage(f, i)}\r\n                                                                className=\"mt-1 mb-0 shadow-none border dz-processing dz-image-preview dz-success dz-complete\"\r\n                                                                key={i + \"-file\"}\r\n                                                            >\r\n                                                                <div className=\"p-2\">\r\n                                                                    <Row className=\"align-items-center\">\r\n                                                                        <Col className=\"col-auto\">\r\n                                                                            <img\r\n                                                                                data-dz-thumbnail=\"\"\r\n                                                                                height=\"80\"\r\n                                                                                className=\"avatar-sm rounded bg-light\"\r\n                                                                                alt={f.name}\r\n                                                                                src={f.preview}\r\n                                                                            />\r\n                                                                        </Col>\r\n                                                                        <Col>\r\n                                                                            <Link\r\n                                                                                to=\"#\"\r\n                                                                                className=\"text-muted font-weight-bold\"\r\n                                                                            >\r\n                                                                                {f.name}\r\n                                                                            </Link>\r\n                                                                            <p className=\"mb-0\">\r\n                                                                                <strong>{f.formattedSize}</strong>\r\n                                                                            </p>\r\n                                                                        </Col>\r\n                                                                    </Row>\r\n                                                                </div>\r\n                                                            </Card>\r\n                                                        );\r\n                                                    })}\r\n                                                </div>\r\n                                            </Form>\r\n                                        </CardBody>\r\n                                    </Card>\r\n\r\n                                    <Card>\r\n                                        <CardBody>\r\n\r\n                                            <CardTitle>Meta Data</CardTitle>\r\n                                            <Form>\r\n                                                <Row>\r\n                                                    <Col sm={6}>\r\n                                                        <FormGroup>\r\n                                                            <Label htmlFor=\"metatitle\">Meta title</Label>\r\n                                                            <Input \r\n                                                                onChange={e => setState({...state, metaname: e.target.value})}\r\n                                                                id=\"metatitle\" name=\"metadataname\" placeholder=\"E.g Color, Size\" type=\"text\" className=\"form-control\" value={state.metaname} />\r\n                                                        </FormGroup>\r\n                                                        <FormGroup>\r\n                                                            <Label htmlFor=\"metakeywords\">Meta Keywords (Seperate with comma [,])</Label>\r\n                                                            <Input \r\n                                                                onChange={e => setState({...state, metakeywords: e.target.value})}\r\n                                                                id=\"metakeywords\" name=\"metadatavalue\" placeholder=\"E.g Red, Black, XL, XS\" type=\"text\" className=\"form-control\" value={state.metakeywords} />\r\n                                                        </FormGroup>\r\n                                                        <FormGroup>\r\n                                                            <Label htmlFor=\"price\">How many are in stock</Label>\r\n                                                            <Input \r\n                                                                onChange={e => setState({...state, stock: e.target.value})}\r\n                                                                id=\"price\" name=\"price\" type=\"number\" className=\"form-control\" value={state.stock} />\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n\r\n                                                    <Col sm={6}>\r\n                                                        <FormGroup>\r\n                                                            <Label htmlFor=\"metadescription\">Meta Description</Label>\r\n                                                            <textarea \r\n                                                                onChange={e => setState({...state, metadescription: e.target.value})}\r\n                                                                className=\"form-control\" id=\"metadescription\" rows=\"5\" value={state.metadescription}></textarea>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                </Row>\r\n\r\n                                                <Button\r\n                                                    onClick={() => {\r\n                                                            setState({...state, isSubmitted: true});\r\n                                                    }}\r\n                                                     disabled={state.isSubmitted} type=\"submit\" onClick={submitProduct} color=\"primary\" className=\"mr-1 waves-effect waves-light\">Save Changes</Button>\r\n                                                <Button disabled={state.isSubmitted} type=\"submit\" onClick={cancelForm} color=\"secondary\" className=\"waves-effect\">Cancel</Button>\r\n\r\n                                                {state.isSubmitted == true ? (\r\n                                                    <div \r\n                                                        style={{\r\n                                                            fontSize: 15, \r\n                                                            fontFamily: 'Sriracha, cursive',\r\n                                                         }}>\r\n                                                        Loading... <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div> {state.transferRate}\r\n                                                    </div>\r\n                                                ) : null}\r\n                                            </Form>\r\n                                        </CardBody>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </div>\r\n                )\r\n            }\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default withRouter(withTranslation()(stateWrapper(StoreAddProduct)));","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\routes\\middleware\\UserMiddleware.js",["435","436","437","438","439","440"],"import React, { useEffect } from \"react\";\r\nimport { Route,Redirect,withRouter } from \"react-router-dom\";\r\nimport { withTranslation } from 'react-i18next';\r\nimport * as _ from 'lodash';\r\nimport stateWrapper from \"../../containers/provider\";\r\nimport firebase from \"firebase/app\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n// Add the Firebase products that you want to use\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/functions\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/remote-config\";\r\nimport CONSTANTS from '../../App.constant';\r\n\r\nconst UserMiddleware = (superProps) => {\r\n\tconst Layout = superProps?.layout;\r\n\tconst Component = superProps?.component;\r\n\tconst path = superProps?.path;\r\n\treturn (\r\n\t\t<Route\r\n\t\t\tpath={path}\r\n\t\t\trender={(props) => {\r\n\t\t\t\treturn <Layout>\r\n\t\t\t\t\t<Component {...props} />\r\n\t\t\t\t</Layout>;\r\n\t\t\t}}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport default withRouter(withTranslation()(stateWrapper(UserMiddleware)));\r\n\r\n","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\components\\UserLayout\\index.js",[],"C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\components\\UserLayout\\Footer.js",[],"C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\components\\UserLayout\\Header.js",["441","442","443","444","445","446","447","448","449","450","451"],"C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\pages\\Store\\StoreProductDetails.js",["452","453","454","455","456","457","458"],"import React, { Component, useEffect, useState } from 'react';\r\nimport { Container, Row, Col, Card, CardBody, Button, Nav, NavItem, NavLink, TabContent, TabPane, Table, Media } from \"reactstrap\";\r\nimport classnames from 'classnames';\r\nimport stateWrapper from '../../containers/provider';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { withTranslation } from 'react-i18next';\r\n\r\n//Import Star Ratings\r\nimport StarRatings from 'react-star-ratings';\r\n\r\n//Import Product Images\r\nimport img4 from \"../../assets/images/product/img-4.png\";\r\nimport img6 from \"../../assets/images/product/img-6.png\";\r\nimport img7 from \"../../assets/images/product/img-7.png\";\r\nimport img8 from \"../../assets/images/product/img-8.png\";\r\nimport avatar2 from \"../../assets/images/users/avatar-2.jpg\";\r\nimport avatar4 from \"../../assets/images/users/avatar-4.jpg\";\r\nimport avatar5 from \"../../assets/images/users/avatar-5.jpg\";\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from '../../components/Common/Breadcrumb';\r\n\r\nconst StoreProductDetail = props => {\r\n    const productId = props.match.params?.productId;\r\n    useEffect(() => {\r\n        (async () => {\r\n            let result = await props.masterStore.getProduct({\r\n                id: productId, //If the value is '' it would return all the products\r\n            });\r\n\r\n            console.log(result);\r\n            console.log(\"Properties of this component\", props);\r\n        })();\r\n    }, []);\r\n\r\n    const [state, setState] = useState({\r\n        comments: [\r\n            { id: 1, img: avatar2, name: \"Brian\", description: \"If several languages coalesce, the grammar of the resulting language.\", date: \"5 hrs ago\" },\r\n            {\r\n                id: 2, img: avatar4, name: \"Denver\", description: \"To an English person, it will seem like simplified English, as a skeptical Cambridge\", date: \"07 Oct, 2019\",\r\n                childComment: [\r\n                    { id: 1, img: avatar5, name: \"Henry\", description: \"Their separate existence is a myth. For science, music, sport, etc.\", date: \"08 Oct, 2019\" },\r\n                ]\r\n            },\r\n            { id: 3, img: \"Null\", name: \"Neal\", description: \"Everyone realizes why a new common language would be desirable.\", date: \"05 Oct, 2019\" },\r\n        ],\r\n        recentProducts: [\r\n            { id: 1, img: img7, name: \"Wirless Headphone\", link: \"\", rating: 4, oldPrice: 240, newPrice: 225 },\r\n            { id: 2, img: img4, name: \"Phone patterned cases\", link: \"\", rating: 3, oldPrice: 150, newPrice: 145 },\r\n            { id: 3, img: img6, name: \"Phone Dark Patterned cases\", link: \"\", rating: 4, oldPrice: 138, newPrice: 135 },\r\n        ],\r\n        activeTab: '1',\r\n    })\r\n\r\n    const toggleTab = (tab) => {\r\n        if (state.activeTab !== tab) {\r\n            setState({\r\n                activeTab: tab\r\n            });\r\n        }\r\n    }\r\n\r\n    const imageShow = (img, id) => {\r\n        var expandImg = document.getElementById(\"expandedImg\" + id);\r\n        expandImg.src = img;\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"page-content\">\r\n                <Container>\r\n                    <Breadcrumbs title=\"Ecommerce\" breadcrumbItem=\"Product Detail\" />\r\n                    <Row>\r\n                        <Col>\r\n                            <Card>\r\n                                <CardBody>\r\n                                    <Row>\r\n                                        <Col xl=\"6\">\r\n                                            <div className=\"product-detai-imgs\">\r\n                                                <Row>\r\n                                                    <Col md=\"2\" xs=\"3\">\r\n                                                        <Nav className=\"flex-column\" pills>\r\n                                                            <NavItem>\r\n                                                                <NavLink\r\n                                                                    className={classnames({ active: state.activeTab === '1' })}\r\n                                                                    onClick={() => { toggleTab('1'); }}\r\n                                                                >\r\n                                                                    <img src={img7} alt=\"\" onClick={() => { imageShow(img7, 1) }} className=\"img-fluid mx-auto d-block rounded\" />\r\n                                                                </NavLink>\r\n                                                            </NavItem>\r\n                                                            <NavItem>\r\n                                                                <NavLink\r\n                                                                    className={classnames({ active: state.activeTab === '2' })}\r\n                                                                    onClick={() => { toggleTab('2'); }}\r\n                                                                >\r\n                                                                    <img src={img8} alt=\"\" onClick={() => { imageShow(img8, 2) }} className=\"img-fluid mx-auto d-block rounded\" />\r\n                                                                </NavLink>\r\n                                                            </NavItem>\r\n                                                            <NavItem>\r\n                                                                <NavLink\r\n                                                                    className={classnames({ active: state.activeTab === '3' })}\r\n                                                                    onClick={() => { this.toggleTab('3'); }}\r\n                                                                >\r\n                                                                    <img src={img7} alt=\"\" onClick={() => { imageShow(img7, 3) }} className=\"img-fluid mx-auto d-block rounded\" />\r\n                                                                </NavLink>\r\n                                                            </NavItem>\r\n                                                            <NavItem>\r\n                                                                <NavLink\r\n                                                                    className={classnames({ active: state.activeTab === '4' })}\r\n                                                                    onClick={() => { toggleTab('4'); }}\r\n                                                                >\r\n                                                                    <img src={img8} alt=\"\" onClick={() => { imageShow(img8, 4) }} className=\"img-fluid mx-auto d-block rounded\" />\r\n                                                                </NavLink>\r\n                                                            </NavItem>\r\n                                                        </Nav>\r\n                                                    </Col>\r\n                                                    <Col md={{ size: 7, offset: 1 }} xs=\"9\">\r\n                                                        <TabContent activeTab={state.activeTab}>\r\n                                                            <TabPane tabId=\"1\">\r\n                                                                <div>\r\n                                                                    <img src={img7} alt=\"\" id=\"expandedImg1\" className=\"img-fluid mx-auto d-block\" />\r\n                                                                </div>\r\n                                                            </TabPane>\r\n                                                            <TabPane tabId=\"2\">\r\n                                                                <div>\r\n                                                                    <img src={img8} id=\"expandedImg2\" alt=\"\" className=\"img-fluid mx-auto d-block\" />\r\n                                                                </div>\r\n                                                            </TabPane>\r\n                                                            <TabPane tabId=\"3\">\r\n                                                                <div>\r\n                                                                    <img src={img7} id=\"expandedImg3\" alt=\"\" className=\"img-fluid mx-auto d-block\" />\r\n                                                                </div>\r\n                                                            </TabPane>\r\n                                                            <TabPane tabId=\"4\">\r\n                                                                <div>\r\n                                                                    <img src={img8} id=\"expandedImg4\" alt=\"\" className=\"img-fluid mx-auto d-block\" />\r\n                                                                </div>\r\n                                                            </TabPane>\r\n                                                        </TabContent>\r\n                                                        <div className=\"text-center\">\r\n                                                            <Button type=\"button\" color=\"primary\" className=\"btn waves-effect waves-light mt-2 mr-1\">\r\n                                                                <i className=\"bx bx-cart mr-2\"></i> Add to cart\r\n                                                        </Button>\r\n                                                            <Button type=\"button\" color=\"success\" className=\"ml-1 btn waves-effect  mt-2 waves-light\">\r\n                                                                <i className=\"bx bx-shopping-bag mr-2\"></i>Buy now\r\n                                                        </Button>\r\n                                                        </div>\r\n\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </div>\r\n                                        </Col>\r\n\r\n                                        <Col xl=\"6\">\r\n                                            <div className=\"mt-4 mt-xl-3\">\r\n                                                <Link to=\"#\" className=\"text-primary\">Headphone</Link>\r\n                                                <h4 className=\"mt-1 mb-3\">Wireless Headphone (Black)</h4>\r\n\r\n                                                <div className=\"text-muted float-left mr-3 mb-3\">\r\n                                                    <StarRatings\r\n                                                        rating={4}\r\n                                                        starRatedColor=\"#F1B44C\"\r\n                                                        starEmptyColor=\"#2D363F\"\r\n                                                        numberOfStars={5}\r\n                                                        name='rating'\r\n                                                        starDimension=\"14px\"\r\n                                                        starSpacing=\"3px\"\r\n                                                    />\r\n                                                </div>\r\n                                                <p className=\"text-muted mb-4\">( 152 Customers Review )</p>\r\n\r\n                                                <h6 className=\"text-success text-uppercase\">20 % Off</h6>\r\n                                                <h5 className=\"mb-4\">Price : <span className=\"text-muted mr-2\"><del>$240 USD</del></span> <b>$225 USD</b></h5>\r\n                                                <p className=\"text-muted mb-4\">To achieve this, it would be necessary to have uniform grammar pronunciation and more common words If several languages coalesce</p>\r\n                                                <Row className=\"mb-3\">\r\n                                                    <Col md=\"6\">\r\n                                                        <div>\r\n                                                            <p className=\"text-muted\"><i className=\"bx bx-unlink font-size-16 align-middle text-primary mr-1\"></i> Wireless</p>\r\n                                                            <p className=\"text-muted\"><i className=\"bx bx-shape-triangle font-size-16 align-middle text-primary mr-1\"></i> Wireless Range : 10m</p>\r\n                                                            <p className=\"text-muted\"><i className=\"bx bx-battery font-size-16 align-middle text-primary mr-1\"></i> Battery life : 6hrs</p>\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                    <Col md=\"6\">\r\n                                                        <div>\r\n                                                            <p className=\"text-muted\"><i className=\"bx bx-user-voice font-size-16 align-middle text-primary mr-1\"></i> Bass</p>\r\n                                                            <p className=\"text-muted\"><i className=\"bx bx-cog font-size-16 align-middle text-primary mr-1\"></i> Warranty : 1 Year</p>\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                </Row>\r\n\r\n                                                <div className=\"product-color\">\r\n                                                    <h5 className=\"font-size-15\">Color :</h5>\r\n                                                    <Link to=\"#\" className=\"active\">\r\n                                                        <div className=\"product-color-item border rounded\">\r\n                                                            <img src={img7} alt=\"\" className=\"avatar-md\" />\r\n                                                        </div>\r\n                                                        <p>Black</p>\r\n                                                    </Link>\r\n                                                    <Link to=\"#\">\r\n                                                        <div className=\"product-color-item border rounded\">\r\n                                                            <img src={img7} alt=\"\" className=\"avatar-md\" />\r\n                                                        </div>\r\n                                                        <p>Blue</p>\r\n                                                    </Link>\r\n                                                    <Link to=\"#\">\r\n                                                        <div className=\"product-color-item border rounded\">\r\n                                                            <img src={img7} alt=\"\" className=\"avatar-md\" />\r\n                                                        </div>\r\n                                                        <p>Gray</p>\r\n                                                    </Link>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <div className=\"mt-5\">\r\n                                        <h5 className=\"mb-3\">Specifications :</h5>\r\n\r\n                                        <div className=\"table-responsive\">\r\n                                            <Table className=\"table mb-0 table-bordered\">\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <th scope=\"row\" style={{ width: \"400px\" }}>Category</th>\r\n                                                        <td>Headphone</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <th scope=\"row\">Brand</th>\r\n                                                        <td>JBL</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <th scope=\"row\">Color</th>\r\n                                                        <td>Black</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <th scope=\"row\">Connectivity</th>\r\n                                                        <td>Bluetooth</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <th scope=\"row\">Warranty Summary</th>\r\n                                                        <td>1 Year</td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </Table>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"mt-5\">\r\n                                        <h5 className=\"mb-4\">Reviews :</h5>\r\n                                        {\r\n                                            state.comments.map((comment, k) =>\r\n                                                <Media className={comment.id === 1 ? \"border-bottom\" : \"border-bottom mt-3\"} key={\"__media__\" + k}>\r\n                                                    {\r\n                                                        comment.img !== \"Null\" ?\r\n                                                            <img src={comment.img} className=\"avatar-xs mr-3 rounded-circle\" alt=\"img\" />\r\n                                                            : <div className=\"avatar-xs mr-3\">\r\n                                                                <span className=\"avatar-title bg-soft-primary text-primary rounded-circle font-size-16\">\r\n                                                                    N\r\n                                                            </span>\r\n                                                            </div>\r\n                                                    }\r\n                                                    <Media body>\r\n                                                        <h5 className=\"mt-0 mb-1 font-size-15\">{comment.name}</h5>\r\n                                                        <p className=\"text-muted\">{comment.description}</p>\r\n                                                        <ul className=\"list-inline float-sm-right\">\r\n                                                            <li className=\"list-inline-item\">\r\n                                                                <Link to=\"#\"><i className=\"far fa-thumbs-up mr-1\"></i> Like</Link>\r\n                                                            </li>\r\n                                                            <li className=\"list-inline-item\">\r\n                                                                <Link to=\"#\"><i className=\"far fa-comment-dots mr-1\"></i> Comment</Link>\r\n                                                            </li>\r\n                                                        </ul>\r\n                                                        <div className=\"text-muted font-size-12\"><i className=\"far fa-calendar-alt text-primary mr-1\"></i>{comment.date}</div>\r\n                                                        {\r\n                                                            comment.childComment ?\r\n                                                                comment.childComment.map((child, key) =>\r\n                                                                    <Media className=\"mt-4\" key={\"_media_\" + key}>\r\n                                                                        <img src={child.img} className=\"avatar-xs mr-3 rounded-circle\" alt=\"img\" />\r\n                                                                        <Media body>\r\n                                                                            <h5 className=\"mt-0 mb-1 font-size-15\">{child.name}</h5>\r\n                                                                            <p className=\"text-muted\">{child.description}</p>\r\n                                                                            <ul className=\"list-inline float-sm-right\">\r\n                                                                                <li className=\"list-inline-item\">\r\n                                                                                    <Link to=\"#\"><i className=\"far fa-thumbs-up mr-1\"></i> Like</Link>\r\n                                                                                </li>\r\n                                                                                <li className=\"list-inline-item\">\r\n                                                                                    <Link to=\"#\"><i className=\"far fa-comment-dots mr-1\"></i> Comment</Link>\r\n                                                                                </li>\r\n                                                                            </ul>\r\n                                                                            <div className=\"text-muted font-size-12\"><i className=\"far fa-calendar-alt text-primary mr-1\"></i> {child.date}</div>\r\n                                                                        </Media>\r\n                                                                    </Media>\r\n                                                                )\r\n\r\n                                                                : null\r\n                                                        }\r\n                                                    </Media>\r\n                                                </Media>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row className=\"mt-3\">\r\n                        <Col lg={12}>\r\n                            <div>\r\n                                <h5 className=\"mb-3\">Recent product :</h5>\r\n\r\n                                <Row>\r\n                                    {\r\n                                        state.recentProducts.map((product, key) =>\r\n                                            <Col xl=\"4\" sm=\"6\" key={\"__product__\" + key}>\r\n                                                <Card>\r\n                                                    <CardBody>\r\n                                                        <Row className=\"align-items-center\">\r\n                                                            <Col md=\"4\">\r\n                                                                <img src={product.img} alt=\"\" className=\"img-fluid mx-auto d-block\" />\r\n                                                            </Col>\r\n                                                            <Col md=\"8\">\r\n                                                                <div className=\"text-center text-md-left pt-3 pt-md-0\">\r\n                                                                    <h5 className=\"mb-3 text-truncate\"><Link to=\"#\" className=\"text-dark\">{product.name}</Link></h5>\r\n                                                                    <div className=\"text-muted mb-3\">\r\n                                                                        <StarRatings\r\n                                                                            rating={product.rating}\r\n                                                                            starRatedColor=\"#F1B44C\"\r\n                                                                            starEmptyColor=\"#2D363F\"\r\n                                                                            numberOfStars={5}\r\n                                                                            name='rating'\r\n                                                                            starDimension=\"14px\"\r\n                                                                            starSpacing=\"3px\"\r\n                                                                        />\r\n                                                                    </div>\r\n                                                                    <h5 className=\"my-0\"><span className=\"text-muted mr-2\"><del>${product.oldPrice}</del></span> <b>${product.newPrice}</b></h5>\r\n                                                                </div>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </CardBody>\r\n                                                </Card>\r\n                                            </Col>\r\n                                        )\r\n                                    }\r\n\r\n                                </Row>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Container>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default withRouter(withTranslation()(stateWrapper(StoreProductDetail)));","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\pages\\Store\\StoreProducts.js",["459","460","461","462","463","464","465","466","467"],"C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\pages\\Store\\GeneralStoreProducts.js",["468"],"C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\pages\\Store\\Cart.js",[],"C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\pages\\Store\\Checkout.js",[],"C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\pages\\Authentication\\LoginX.js",["469","470","471","472","473","474","475","476"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport _ from 'lodash';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { Row, Col, CardBody, Card, Alert,Container, Label } from \"reactstrap\";\r\nimport { withTranslation } from 'react-i18next';\r\nimport { AvForm, AvField, AvGroup, AvInput, AvFeedback, AvRadioGroup, AvRadio, AvCheckboxGroup, AvCheckbox } from 'availity-reactstrap-validation';\r\nimport \"../../styles/Login.scss\";\r\nimport logo from \"../../assets/images/jumga logo.png\";\r\nimport team1 from \"../../assets/images/team1.png\";\r\nimport team2 from \"../../assets/images/team2.png\";\r\nimport team3 from \"../../assets/images/team3.png\";\r\nimport team4 from \"../../assets/images/team4.png\";\r\nimport team5 from \"../../assets/images/team5.png\";\r\nimport stadium from \"../../assets/images/stadium.jpg\";\r\nimport stateWrapper from '../../containers/provider';\r\nimport ErrorMessage from '../../components/Common/ErrorMessage';\r\n\r\n\r\n const Login = (props) => {\r\n    const [state, setState] = useState({\r\n        loading: false,\r\n        doesEmailExists: true,\r\n        postSubmitError: false,\r\n        postSubmitMessage: '',\r\n        error: {\r\n            email: 'Email is required',\r\n            password: 'Password is required',\r\n            watch: {\r\n                email: '',\r\n                password: ''\r\n            }\r\n        },\r\n        email: '',\r\n        password: ''\r\n    });\r\n    const form = useRef();\r\n    async function  handleValidSubmit(event, values) {\r\n        event.preventDefault();\r\n        console.log(values);\r\n        let doesEmailExists = await processEmail(state.email);\r\n        if (!doesEmailExists) return;\r\n        let done = await props.userStore.signIn(values, props);\r\n        if (!done.status) {\r\n            await checkError(done?.message);\r\n            return;\r\n        }\r\n\r\n        props.history.push('/');\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     props.userStore.logOut(props);\r\n    //     console.log('jerr')\r\n    // }, [])\r\n\r\n    useEffect(() => {\r\n        if (state.postSubmitError) {\r\n            setTimeout(() => {setState({...state, postSubmitError: false, postSubmitMessage: ''})}, 10000);\r\n        }\r\n    }, [state.postSubmitError]);\r\n\r\n    const processEmail = async (e) => {\r\n\r\n        let checker = await props.userStore.checkIfEmailExists(e);\r\n        if (!checker?.status) {\r\n            let error = state.error;\r\n            error.watch = {\r\n                ...error.watch,\r\n                email: `This email does not exist`\r\n            }\r\n            await setState({\r\n                ...state, \r\n                doesEmailExists: !checker?.status, \r\n                error\r\n            });\r\n            return checker?.status;\r\n        }\r\n    \r\n        await setState({ ...state, doesEmailExists: !checker?.status});\r\n        return checker?.status;\r\n      }\r\n\r\n    const checkError = async (e) => {\r\n        await setState({\r\n            ...state,  \r\n            postSubmitError: true,\r\n            postSubmitMessage: e,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>  \r\n            <div onClick={() => {setState({...state, postSubmitMessage: '', postSubmitError: false})}}>\r\n                <ErrorMessage isError={state.postSubmitError} message={state.postSubmitMessage} />\r\n            </div>\r\n            <div>\r\n                <Link to=\"/\">\r\n                    <img className=\"logo d-none d-md-inline-block\" src={logo} alt=\"logo\" />\r\n                    <img className=\"logo-small d-md-none\" src={logo} alt=\"logo\" />\r\n                </Link>\r\n            </div>\r\n            <div className=\"account-pages my-5 pt-sm-5\">\r\n                <Container>\r\n                    <div>\r\n                        <img className=\"avatar  team1 d-none d-md-inline-block\" src={team1} alt=\"team1\" />\r\n                        <img className=\"avatar team2 d-none d-md-inline-block\" src={team2} alt=\"team2\" />\r\n                        <img className=\"avatar team3 d-none d-md-inline-block\" src={team3} alt=\"team3\" />\r\n                        <img className=\"avatar team4 d-none d-md-inline-block\" src={team4} alt=\"team4\" />\r\n                        <img className=\"avatar team5 d-none d-md-inline-block\" src={team5} alt=\"team5\" />\r\n                        <img className=\"avatar  team1-small d-md-none\" src={team1} alt=\"team1\" />\r\n                        <img className=\"avatar team2-small d-md-none\" src={team2} alt=\"team2\" />\r\n                        <img className=\"avatar team3-small d-md-none\" src={team3} alt=\"team3\" />\r\n                        <img className=\"avatar team4-small d-md-none\" src={team4} alt=\"team4\" />\r\n                        <img className=\"avatar team5-small d-md-none\" src={team5} alt=\"team5\" />\r\n                    </div>\r\n                    <Row className=\"justify-content-center overflow-hidden\">\r\n                        <Col className=\"box\" style={{padding:0}} lg={9} md={12} sm={12}>\r\n                            <Row>\r\n                                <Col style={{padding: 30}} md={6} lg={4} xl={6} sm={12}>\r\n                                        <Card className=\"overflow-hidden border-0\">\r\n                                            <div>\r\n                                                <Row>\r\n                                                    <Col className=\"col-12\">\r\n                                                        <div className=\"text-primary text-center text-dark\">\r\n                                                            <h5 className=\"text-primary text-dark\">Welcome back !</h5>\r\n                                                            <p>We're so excited to see you again!</p>\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </div>\r\n                                            <CardBody className=\"pt-0 border-0\">\r\n                                                <div className=\"p-2\">\r\n\r\n                                                    <AvForm ref={form} className=\"form-horizontal\" onValidSubmit={(e,v) => { handleValidSubmit(e,v) }}>\r\n                                                        <AvGroup>\r\n                                                            <Label className=\"form-label\" for=\"email\">EMAIL</Label>\r\n                                                            <AvInput \r\n                                                                onChange={e =>\r\n                                                                    setState({\r\n                                                                    ...state, \r\n                                                                    email: e.target.value,\r\n                                                                    error: {\r\n                                                                        ...state.error,\r\n                                                                        watch: {\r\n                                                                            ...state.error.watch,\r\n                                                                            email: ''\r\n                                                                        }\r\n                                                                    }\r\n                                                                })} \r\n                                                                name=\"email\" \r\n                                                                id=\"email\" \r\n                                                                required \r\n                                                                type=\"email\"\r\n                                                            />\r\n                                                            <AvFeedback><i className=\"error-field\">{state.error.email}</i></AvFeedback>\r\n                                                            <i className=\"error-field\">{state.error.watch.email}</i>\r\n                                                        </AvGroup>\r\n\r\n                                                        <AvGroup>\r\n                                                            <Label className=\"form-label\" for=\"password\">PASSWORD</Label>\r\n                                                            <AvInput \r\n                                                                onChange={e => \r\n                                                                    setState({\r\n                                                                        ...state, \r\n                                                                        password: e.target.value,\r\n                                                                        error: {\r\n                                                                            ...state.error,\r\n                                                                            watch: {\r\n                                                                                ...state.error.watch,\r\n                                                                                password: ''\r\n                                                                            }\r\n                                                                        }\r\n                                                                    })\r\n                                                                } \r\n                                                                name=\"password\" \r\n                                                                validate={{\r\n                                                                    minLength: { value: 6, errorMessage: \"Password must be more than 5 letters\"}\r\n                                                                }}\r\n                                                                id=\"password\" \r\n                                                                required \r\n                                                                type=\"password\"\r\n                                                            />\r\n                                                            <AvFeedback><i className=\"error-field\">{state.error.password}</i></AvFeedback>\r\n                                                            <i className=\"error-field\">{state.error.watch.password}</i>\r\n                                                        </AvGroup>\r\n\r\n                                                        <div className=\"mt-4\">\r\n                                                            <Link to=\"/forgot-password\" className=\"text-muted text-primary link\"><i className=\"mdi mdi-lock mr-1\"></i> Forgot your password?</Link>\r\n                                                        </div>\r\n                                                        <div className=\"mt-3\">\r\n                                                            <button\r\n                                                                disabled={state.loading} className=\"btn btn-primary btn-block waves-effect waves-light btn-dark\" type=\"submit\" style={{backgroundColor: '#EE5C43', borderColor: '#EE5C43'}}>\r\n                                                                Login\r\n                                                            </button>\r\n                                                        </div>\r\n                                                        <div className=\"mt-4 link-ext\">\r\n                                                            Need an account?<Link to=\"/store/register\" className=\"link text-primary\"> Register</Link>\r\n                                                        </div>\r\n                                                    </AvForm>\r\n                                                </div>\r\n                                            </CardBody>\r\n                                        </Card>\r\n                                    </Col> \r\n                                <Col md={6} lg={6} xl={6} sm={12}>\r\n                                    <img className=\"stadium\" src={stadium} alt=\"stadium\" />\r\n                                    <div className=\"writing\">\r\n                                        <div className=\"text-to-show\">\r\n                                            A market place for all\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        </React.Fragment>\r\n     );\r\n    }\r\n\r\nexport default withRouter(withTranslation()(stateWrapper(Login)))","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\pages\\Authentication\\CreateX.js",["477","478","479","480","481","482","483","484","485"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport _ from 'lodash';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { Row, Col, CardBody, Card, Alert,Container, Label } from \"reactstrap\";\r\nimport ErrorMessage from '../../components/Common/ErrorMessage';\r\nimport { AvForm, AvField, AvGroup, AvInput, AvFeedback, AvRadioGroup, AvRadio, AvCheckboxGroup, AvCheckbox } from 'availity-reactstrap-validation';\r\nimport { withTranslation } from 'react-i18next';\r\nimport stateWrapper from \"../../containers/provider\";\r\nimport \"../../styles/Login.scss\";\r\nimport logo from \"../../assets/images/jumga logo.png\";\r\nimport team1 from \"../../assets/images/team1.png\";\r\nimport team2 from \"../../assets/images/team2.png\";\r\nimport team3 from \"../../assets/images/team3.png\";\r\nimport team4 from \"../../assets/images/team4.png\";\r\nimport team5 from \"../../assets/images/team5.png\";\r\nimport stadium from \"../../assets/images/stadium.jpg\";\r\nimport instance from '../../helpers/axiosly';\r\nimport { configParams } from '../../config';\r\n\r\n/**\r\n * TODO: Add terms and condition\r\n */\r\n const Create = (props) => {\r\n    const [state, setState] = useState({\r\n        loading: false,\r\n        error: {\r\n            email: 'Email is required',\r\n            password: 'Password is required',\r\n            username: 'Store name is required',\r\n            watch: {\r\n                email: '',\r\n                password: '',\r\n                username: ''\r\n            }\r\n        },\r\n        email: '',\r\n        password: '',\r\n        username: '',\r\n        doesStoreNameExists: true,\r\n        doesEmailExists: true,\r\n        imageFile: null,\r\n        imageSrc: null,\r\n        userType: 'Business',\r\n        postSubmitError: false,\r\n        postSubmitMessage: ''\r\n    });\r\n\r\n    const form = useRef();\r\n    const useImageRef = useRef();\r\n    const callImageInput = () => {\r\n        document.getElementById(\"imageFile\").click();\r\n    }\r\n  async function  handleValidSubmit(event, values) {\r\n    event.preventDefault();\r\n    let doesEmailExists = await processEmail(state.email);\r\n    // let doesStoreNameExists = await processStoreName(state.username);\r\n\r\n\r\n    if (doesEmailExists) return;\r\n    let newValues = {\r\n        ...values,\r\n        imageFile: state.imageFile,\r\n        userType: state.userType,\r\n        downloadURL: null\r\n    }\r\n\r\n    let create = async () => {\r\n            console.log(newValues);\r\n            await props.userStore.signUp(newValues, checkError);\r\n            props.history.push('/');\r\n    }\r\n\r\n    if (_.isNull(newValues.imageFile)) {\r\n        await create();\r\n        return;\r\n    }\r\n    let snaps = await props.userStore.uploadImage(newValues.imageFile, e => {});\r\n    console.log(snaps);\r\n    newValues.downloadURL = snaps;\r\n    await create();\r\n    return;\r\n  }\r\n  const showPreviewAndSetValue = (e) => {\r\n    if(e.target.files && e.target.files[0]) {\r\n        let imageFile = e.target.files[0];\r\n        console.log(imageFile);\r\n        if (String(imageFile.type).includes(\"image\")) {\r\n            const reader = new FileReader();\r\n            reader.onload = x => {\r\n                setState({\r\n                    ...state,\r\n                    imageFile,\r\n                    imageSrc: x.target.result\r\n                })\r\n            }\r\n            reader.readAsDataURL(imageFile);\r\n        } else {\r\n            setState({\r\n                ...state,\r\n                imageFile: null,\r\n                imageSrc: null\r\n            })\r\n        }\r\n    } else {\r\n        setState({\r\n            ...state,\r\n            imageFile: null,\r\n            imageSrc: null\r\n        })\r\n    }\r\n  }\r\n  const checkError =(e) => {\r\n    console.log(e);\r\n    setState({\r\n        ...state,\r\n        postSubmitError: true,\r\n        postSubmitMessage: e\r\n    });\r\n  }\r\n  const processEmail = async (e) => {\r\n\r\n    let checker = await props.userStore.checkIfEmailExists(e);\r\n    if (checker?.status) {\r\n        let error = state.error;\r\n        error.watch = {\r\n            ...error.watch,\r\n            email: `This email already exists`\r\n        }\r\n        await setState({\r\n            ...state, \r\n            doesEmailExists: checker?.status, \r\n            error\r\n        });\r\n        return checker?.status;\r\n    }\r\n\r\n    await setState({ ...state, doesEmailExists: checker?.status});\r\n    return checker?.status;\r\n  }\r\n\r\n  useEffect(() => {\r\n        if (state.postSubmitError) {\r\n            setTimeout(() => {setState({...state, postSubmitError: false, postSubmitMessage: ''})}, 10000);\r\n        }\r\n    }, [state.postSubmitError]);\r\n    return (\r\n        <React.Fragment> \r\n            <div onClick={() => {setState({...state, postSubmitMessage: '', postSubmitError: false})}}>\r\n                <ErrorMessage isError={state.postSubmitError} message={state.postSubmitMessage} />\r\n            </div>\r\n            <div>\r\n                <Link to=\"/\">\r\n                    <img className=\"logo d-none d-md-inline-block\" src={logo} alt=\"logo\" />\r\n                    <img className=\"logo-small d-md-none\" src={logo} alt=\"logo\" />\r\n                </Link>\r\n            </div>\r\n            <div className=\"account-pages my-5 pt-sm-5\">\r\n                <Container>\r\n                    <div>\r\n                        <img className=\"avatar  team1 d-none d-md-inline-block\" src={team1} alt=\"team1\" />\r\n                        <img className=\"avatar team2 d-none d-md-inline-block\" src={team2} alt=\"team2\" />\r\n                        <img className=\"avatar team3 d-none d-md-inline-block\" src={team3} alt=\"team3\" />\r\n                        <img className=\"avatar team4 d-none d-md-inline-block\" src={team4} alt=\"team4\" />\r\n                        <img className=\"avatar team5 d-none d-md-inline-block\" src={team5} alt=\"team5\" />\r\n                        <img className=\"avatar  team1-small d-md-none\" src={team1} alt=\"team1\" />\r\n                        <img className=\"avatar team2-small d-md-none\" src={team2} alt=\"team2\" />\r\n                        <img className=\"avatar team3-small d-md-none\" src={team3} alt=\"team3\" />\r\n                        <img className=\"avatar team4-small d-md-none\" src={team4} alt=\"team4\" />\r\n                        <img className=\"avatar team5-small d-md-none\" src={team5} alt=\"team5\" />\r\n                    </div>\r\n                    <Row className=\"justify-content-center overflow-hidden\">\r\n                        <Col className=\"box\" style={{padding:0}} lg={9} md={12} sm={12}>\r\n                            <Row>\r\n                                <Col style={{padding: 30}} md={6} lg={4} xl={6} sm={12}>\r\n                                        <Card className=\"overflow-hidden border-0\">\r\n                                            <div>\r\n                                                <Row>\r\n                                                    <Col className=\"col-12\">\r\n                                                        <div className=\"text-primary text-center text-dark\">\r\n                                                            <h5 className=\"text-primary text-dark\">JOIN US!</h5>\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </div>\r\n                                            <CardBody className=\"pt-0 border-0\">\r\n                                                <div className=\"p-2\">\r\n\r\n                                                    <AvForm ref={form} className=\"form-horizontal\" onValidSubmit={(e,v) => { handleValidSubmit(e,v) }}>\r\n                                                        <div className=\"business-logo\">Business logo</div>\r\n                                                        <center  className=\"avatar-container\">\r\n                                                            <div \r\n                                                                onClick={callImageInput} \r\n                                                                className=\"user-avatar\"\r\n                                                                style={{\r\n                                                                    backgroundImage: `url(${state.imageSrc != null ? state.imageSrc : stadium})`,\r\n                                                                    backgroundSize: 'cover',\r\n                                                                    backgroundRepeat: 'no-repeat'\r\n                                                                }}\r\n                                                            >\r\n                                                                <svg \r\n                                                                    version=\"1.1\" \r\n                                                                    id=\"Layer_1\" \r\n                                                                    xmlns=\"http://www.w3.org/2000/svg\" \r\n                                                                    x=\"0px\" y=\"0px\"\r\n                                                                    viewBox=\"0 0 512 512\" \r\n                                                                    className=\"avatar-icon\"\r\n                                                                >\r\n                                                                    <g>\r\n                                                                        <g>\r\n                                                                            <g>\r\n                                                                                <circle cx=\"256\" cy=\"277.333\" r=\"106.667\"/>\r\n                                                                                <path d=\"M469.333,106.667h-67.656c-8.552,0-16.583-3.333-22.635-9.375l-39-39c-10.073-10.073-23.469-15.625-37.719-15.625\r\n                                                                                    h-92.646c-14.25,0-27.646,5.552-37.719,15.625l-39,39c-6.052,6.042-14.083,9.375-22.635,9.375H42.667\r\n                                                                                    C19.135,106.667,0,125.802,0,149.333v277.333c0,23.531,19.135,42.667,42.667,42.667h426.667\r\n                                                                                    c23.531,0,42.667-19.135,42.667-42.667V149.333C512,125.802,492.865,106.667,469.333,106.667z M256,405.333\r\n                                                                                    c-70.583,0-128-57.417-128-128s57.417-128,128-128s128,57.417,128,128S326.583,405.333,256,405.333z M426.667,213.333\r\n                                                                                    c-11.76,0-21.333-9.573-21.333-21.333s9.573-21.333,21.333-21.333S448,180.24,448,192S438.427,213.333,426.667,213.333z\"/>\r\n                                                                            </g>\r\n                                                                        </g>\r\n                                                                    </g>\r\n                                                                    <g>\r\n                                                                    </g>\r\n                                                                    <g>\r\n                                                                    </g>\r\n                                                                    <g>\r\n                                                                    </g>\r\n                                                                    <g>\r\n                                                                    </g>\r\n                                                                    <g>\r\n                                                                    </g>\r\n                                                                    <g>\r\n                                                                    </g>\r\n                                                                    <g>\r\n                                                                    </g>\r\n                                                                    <g>\r\n                                                                    </g>\r\n                                                                    <g>\r\n                                                                    </g>\r\n                                                                    <g>\r\n                                                                    </g>\r\n                                                                    <g>\r\n                                                                    </g>\r\n                                                                    <g>\r\n                                                                    </g>\r\n                                                                    <g>\r\n                                                                    </g>\r\n                                                                    <g>\r\n                                                                    </g>\r\n                                                                    <g>\r\n                                                                    </g>\r\n                                                                    </svg>\r\n\r\n                                                            </div>\r\n                                                        </center>\r\n\r\n                                                        <AvGroup>\r\n                                                            <Label className=\"form-label\" for=\"email\">EMAIL</Label>\r\n                                                            <AvInput\r\n                                                                onChange={e =>  setState({\r\n                                                                    ...state, \r\n                                                                    email: e.target.value,\r\n                                                                    error: {\r\n                                                                        ...state.error,\r\n                                                                        watch: {\r\n                                                                            ...state.error.watch,\r\n                                                                            email: ''\r\n                                                                        }\r\n                                                                    }\r\n                                                                })} \r\n                                                                name=\"email\" \r\n                                                                id=\"email\" \r\n                                                                required \r\n                                                                type=\"email\"\r\n                                                            />\r\n                                                            <AvFeedback><i className=\"error-field\">{state.error.email}</i></AvFeedback>\r\n                                                            <i className=\"error-field\">{state.error.watch.email}</i>\r\n                                                        </AvGroup>\r\n\r\n                                                        <AvGroup>\r\n                                                            <Label className=\"form-label\" for=\"username\">FULL NAME</Label>\r\n                                                            <AvInput \r\n                                                                onChange={e => setState({\r\n                                                                    ...state, \r\n                                                                    username: e.target.value,\r\n                                                                    error: {\r\n                                                                        ...state.error,\r\n                                                                        watch: {\r\n                                                                            ...state.error.watch,\r\n                                                                            username: ''\r\n                                                                        }\r\n                                                                    }\r\n                                                                })} \r\n                                                                validate={{\r\n                                                                    minLength: { value: 3, errorMessage: \"Username must be more than 3 letters\"}\r\n                                                                }}\r\n                                                                name=\"username\" \r\n                                                                id=\"username\" \r\n                                                                required\r\n                                                            />\r\n                                                            <AvFeedback>\r\n                                                                <i className=\"error-field\">{state.error.username}</i>\r\n                                                            </AvFeedback>\r\n                                                            <i className=\"error-field\">{state.error.watch.username}</i>\r\n                                                        </AvGroup>\r\n\r\n                                                        <AvGroup>\r\n                                                            <Label className=\"form-label\" for=\"password\">PASSWORD</Label>\r\n                                                            <AvInput \r\n                                                                onChange={e => \r\n                                                                    setState({\r\n                                                                        ...state, \r\n                                                                        password: e.target.value,\r\n                                                                        error: {\r\n                                                                            ...state.error,\r\n                                                                            watch: {\r\n                                                                                ...state.error.watch,\r\n                                                                                password: ''\r\n                                                                            }\r\n                                                                        }\r\n                                                                    })\r\n                                                                } \r\n                                                                validate={{\r\n                                                                    minLength: { value: 6, errorMessage: \"Password must be more than 5 letters\"}\r\n                                                                }}\r\n                                                                name=\"password\" \r\n                                                                id=\"password\" \r\n                                                                required \r\n                                                                type=\"password\"\r\n                                                            />\r\n                                                            <AvFeedback><i className=\"error-field\">{state.error.password}</i></AvFeedback>\r\n                                                            <i className=\"error-field\">{state.error.watch.password}</i>\r\n                                                        </AvGroup>\r\n                                                            \r\n                                                        <input\r\n                                                            ref={useImageRef} \r\n                                                            onChange={showPreviewAndSetValue} \r\n                                                            name=\"imageFile\" \r\n                                                            id=\"imageFile\"\r\n                                                            type=\"file\"\r\n                                                            accept=\"image/*\"\r\n                                                            hidden\r\n                                                        />\r\n\r\n                                                        <div className=\"mt-3\">\r\n                                                            <button\r\n                                                                disabled={state.loading} className=\"btn btn-primary btn-block waves-effect waves-light btn-dark\" type=\"submit\"\r\n                                                                style={{backgroundColor: '#EE5C43', borderColor: '#EE5C43'}}\r\n                                                            >\r\n                                                                Submit\r\n                                                            </button>\r\n                                                        </div>\r\n                                                        <div className=\"mt-3 link-ext\">\r\n                                                            By clicking the “Submit” button, you agree to Jumga’s <Link to=\"/terms-and-condition\" className=\"link text-pprimary\">terms of acceptable use</Link>.\r\n                                                        </div>\r\n                                                        <div className=\"mt-4 link-ext\">\r\n                                                            Have an account?<Link to=\"/store/login\" className=\"link text-primary\">Login</Link>\r\n                                                        </div>\r\n                                                    </AvForm>\r\n                                                </div>\r\n                                            </CardBody>\r\n                                        </Card>\r\n                                    </Col> \r\n                                <Col md={6} lg={6} xl={6} sm={12}>\r\n                                    <img className=\"stadium stadium-create\" src={stadium} alt=\"stadium\" />\r\n                                    <div className=\"writing\">\r\n                                        <div className=\"text-to-show\">\r\n                                            A market place for all\r\n                                        </div>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        </React.Fragment>\r\n     );\r\n    }\r\n\r\nexport default withRouter(withTranslation()(stateWrapper(Create)))","C:\\Users\\HP\\Desktop\\vicks\\flutterwave\\jumga-client\\src\\pages\\Utility\\pages-404.js",[],{"ruleId":"486","replacedBy":"487"},{"ruleId":"488","replacedBy":"489"},{"ruleId":"490","severity":1,"message":"491","line":1,"column":28,"nodeType":"492","messageId":"493","endLine":1,"endColumn":37},{"ruleId":"490","severity":1,"message":"494","line":2,"column":42,"nodeType":"492","messageId":"493","endLine":2,"endColumn":47},{"ruleId":"490","severity":1,"message":"495","line":7,"column":8,"nodeType":"492","messageId":"493","endLine":7,"endColumn":22},{"ruleId":"490","severity":1,"message":"496","line":1,"column":8,"nodeType":"492","messageId":"493","endLine":1,"endColumn":13},{"ruleId":"490","severity":1,"message":"497","line":2,"column":10,"nodeType":"492","messageId":"493","endLine":2,"endColumn":18},{"ruleId":"490","severity":1,"message":"498","line":61,"column":7,"nodeType":"492","messageId":"493","endLine":61,"endColumn":24},{"ruleId":"486","replacedBy":"499"},{"ruleId":"488","replacedBy":"500"},{"ruleId":"490","severity":1,"message":"491","line":1,"column":17,"nodeType":"492","messageId":"493","endLine":1,"endColumn":26},{"ruleId":"490","severity":1,"message":"497","line":2,"column":16,"nodeType":"492","messageId":"493","endLine":2,"endColumn":24},{"ruleId":"490","severity":1,"message":"501","line":3,"column":8,"nodeType":"492","messageId":"493","endLine":3,"endColumn":17},{"ruleId":"490","severity":1,"message":"491","line":1,"column":17,"nodeType":"492","messageId":"493","endLine":1,"endColumn":26},{"ruleId":"490","severity":1,"message":"502","line":4,"column":13,"nodeType":"492","messageId":"493","endLine":4,"endColumn":14},{"ruleId":"490","severity":1,"message":"503","line":6,"column":8,"nodeType":"492","messageId":"493","endLine":6,"endColumn":16},{"ruleId":"490","severity":1,"message":"504","line":7,"column":16,"nodeType":"492","messageId":"493","endLine":7,"endColumn":22},{"ruleId":"490","severity":1,"message":"505","line":1,"column":17,"nodeType":"492","messageId":"493","endLine":1,"endColumn":25},{"ruleId":"490","severity":1,"message":"491","line":1,"column":27,"nodeType":"492","messageId":"493","endLine":1,"endColumn":36},{"ruleId":"490","severity":1,"message":"502","line":2,"column":8,"nodeType":"492","messageId":"493","endLine":2,"endColumn":9},{"ruleId":"490","severity":1,"message":"506","line":3,"column":21,"nodeType":"492","messageId":"493","endLine":3,"endColumn":24},{"ruleId":"490","severity":1,"message":"507","line":3,"column":26,"nodeType":"492","messageId":"493","endLine":3,"endColumn":29},{"ruleId":"490","severity":1,"message":"508","line":3,"column":31,"nodeType":"492","messageId":"493","endLine":3,"endColumn":37},{"ruleId":"490","severity":1,"message":"509","line":3,"column":39,"nodeType":"492","messageId":"493","endLine":3,"endColumn":43},{"ruleId":"490","severity":1,"message":"510","line":3,"column":45,"nodeType":"492","messageId":"493","endLine":3,"endColumn":53},{"ruleId":"490","severity":1,"message":"511","line":3,"column":55,"nodeType":"492","messageId":"493","endLine":3,"endColumn":64},{"ruleId":"490","severity":1,"message":"512","line":3,"column":66,"nodeType":"492","messageId":"493","endLine":3,"endColumn":71},{"ruleId":"490","severity":1,"message":"513","line":3,"column":73,"nodeType":"492","messageId":"493","endLine":3,"endColumn":84},{"ruleId":"490","severity":1,"message":"514","line":3,"column":86,"nodeType":"492","messageId":"493","endLine":3,"endColumn":95},{"ruleId":"490","severity":1,"message":"515","line":3,"column":97,"nodeType":"492","messageId":"493","endLine":3,"endColumn":108},{"ruleId":"490","severity":1,"message":"516","line":3,"column":110,"nodeType":"492","messageId":"493","endLine":3,"endColumn":115},{"ruleId":"490","severity":1,"message":"517","line":3,"column":117,"nodeType":"492","messageId":"493","endLine":3,"endColumn":122},{"ruleId":"490","severity":1,"message":"518","line":5,"column":22,"nodeType":"492","messageId":"493","endLine":5,"endColumn":26},{"ruleId":"490","severity":1,"message":"502","line":2,"column":8,"nodeType":"492","messageId":"493","endLine":2,"endColumn":9},{"ruleId":"490","severity":1,"message":"519","line":4,"column":36,"nodeType":"492","messageId":"493","endLine":4,"endColumn":41},{"ruleId":"490","severity":1,"message":"520","line":6,"column":18,"nodeType":"492","messageId":"493","endLine":6,"endColumn":25},{"ruleId":"490","severity":1,"message":"521","line":6,"column":57,"nodeType":"492","messageId":"493","endLine":6,"endColumn":69},{"ruleId":"490","severity":1,"message":"522","line":6,"column":71,"nodeType":"492","messageId":"493","endLine":6,"endColumn":78},{"ruleId":"490","severity":1,"message":"523","line":6,"column":80,"nodeType":"492","messageId":"493","endLine":6,"endColumn":95},{"ruleId":"490","severity":1,"message":"524","line":6,"column":97,"nodeType":"492","messageId":"493","endLine":6,"endColumn":107},{"ruleId":"525","severity":1,"message":"526","line":60,"column":8,"nodeType":"527","endLine":60,"endColumn":31,"suggestions":"528"},{"ruleId":"490","severity":1,"message":"519","line":4,"column":36,"nodeType":"492","messageId":"493","endLine":4,"endColumn":41},{"ruleId":"490","severity":1,"message":"520","line":6,"column":18,"nodeType":"492","messageId":"493","endLine":6,"endColumn":25},{"ruleId":"490","severity":1,"message":"521","line":6,"column":57,"nodeType":"492","messageId":"493","endLine":6,"endColumn":69},{"ruleId":"490","severity":1,"message":"522","line":6,"column":71,"nodeType":"492","messageId":"493","endLine":6,"endColumn":78},{"ruleId":"490","severity":1,"message":"523","line":6,"column":80,"nodeType":"492","messageId":"493","endLine":6,"endColumn":95},{"ruleId":"490","severity":1,"message":"524","line":6,"column":97,"nodeType":"492","messageId":"493","endLine":6,"endColumn":107},{"ruleId":"490","severity":1,"message":"529","line":17,"column":8,"nodeType":"492","messageId":"493","endLine":17,"endColumn":16},{"ruleId":"490","severity":1,"message":"530","line":18,"column":10,"nodeType":"492","messageId":"493","endLine":18,"endColumn":22},{"ruleId":"525","severity":1,"message":"526","line":145,"column":8,"nodeType":"527","endLine":145,"endColumn":31,"suggestions":"531"},{"ruleId":"532","severity":1,"message":"533","line":72,"column":21,"nodeType":"534","messageId":"535","endLine":79,"endColumn":22},{"ruleId":"536","severity":1,"message":"537","line":199,"column":33,"nodeType":"538","messageId":"539","endLine":199,"endColumn":35},{"ruleId":"536","severity":1,"message":"537","line":199,"column":61,"nodeType":"538","messageId":"539","endLine":199,"endColumn":63},{"ruleId":"540","severity":1,"message":"541","line":263,"column":66,"nodeType":"542","messageId":"543","endLine":263,"endColumn":67,"suggestions":"544"},{"ruleId":"540","severity":1,"message":"545","line":263,"column":68,"nodeType":"542","messageId":"543","endLine":263,"endColumn":69,"suggestions":"546"},{"ruleId":"540","severity":1,"message":"547","line":263,"column":70,"nodeType":"542","messageId":"543","endLine":263,"endColumn":71,"suggestions":"548"},{"ruleId":"490","severity":1,"message":"549","line":302,"column":17,"nodeType":"492","messageId":"493","endLine":302,"endColumn":21},{"ruleId":"550","severity":1,"message":"551","line":5,"column":1,"nodeType":"552","endLine":29,"endColumn":3},{"ruleId":"536","severity":1,"message":"553","line":78,"column":29,"nodeType":"538","messageId":"539","endLine":78,"endColumn":31},{"ruleId":"490","severity":1,"message":"506","line":3,"column":10,"nodeType":"492","messageId":"493","endLine":3,"endColumn":13},{"ruleId":"490","severity":1,"message":"507","line":3,"column":15,"nodeType":"492","messageId":"493","endLine":3,"endColumn":18},{"ruleId":"490","severity":1,"message":"494","line":5,"column":10,"nodeType":"492","messageId":"493","endLine":5,"endColumn":15},{"ruleId":"490","severity":1,"message":"497","line":5,"column":16,"nodeType":"492","messageId":"493","endLine":5,"endColumn":24},{"ruleId":"490","severity":1,"message":"554","line":23,"column":10,"nodeType":"492","messageId":"493","endLine":23,"endColumn":16},{"ruleId":"490","severity":1,"message":"555","line":23,"column":18,"nodeType":"492","messageId":"493","endLine":23,"endColumn":27},{"ruleId":"490","severity":1,"message":"556","line":24,"column":10,"nodeType":"492","messageId":"493","endLine":24,"endColumn":18},{"ruleId":"490","severity":1,"message":"557","line":24,"column":20,"nodeType":"492","messageId":"493","endLine":24,"endColumn":31},{"ruleId":"490","severity":1,"message":"558","line":25,"column":10,"nodeType":"492","messageId":"493","endLine":25,"endColumn":19},{"ruleId":"490","severity":1,"message":"559","line":25,"column":21,"nodeType":"492","messageId":"493","endLine":25,"endColumn":33},{"ruleId":"490","severity":1,"message":"560","line":41,"column":9,"nodeType":"492","messageId":"493","endLine":41,"endColumn":17},{"ruleId":"490","severity":1,"message":"561","line":15,"column":7,"nodeType":"492","messageId":"493","endLine":15,"endColumn":19},{"ruleId":"490","severity":1,"message":"491","line":1,"column":17,"nodeType":"492","messageId":"493","endLine":1,"endColumn":26},{"ruleId":"490","severity":1,"message":"505","line":1,"column":28,"nodeType":"492","messageId":"493","endLine":1,"endColumn":36},{"ruleId":"490","severity":1,"message":"506","line":2,"column":10,"nodeType":"492","messageId":"493","endLine":2,"endColumn":13},{"ruleId":"490","severity":1,"message":"507","line":2,"column":15,"nodeType":"492","messageId":"493","endLine":2,"endColumn":18},{"ruleId":"490","severity":1,"message":"510","line":2,"column":20,"nodeType":"492","messageId":"493","endLine":2,"endColumn":28},{"ruleId":"490","severity":1,"message":"509","line":2,"column":30,"nodeType":"492","messageId":"493","endLine":2,"endColumn":34},{"ruleId":"490","severity":1,"message":"519","line":2,"column":36,"nodeType":"492","messageId":"493","endLine":2,"endColumn":41},{"ruleId":"490","severity":1,"message":"562","line":2,"column":42,"nodeType":"492","messageId":"493","endLine":2,"endColumn":51},{"ruleId":"490","severity":1,"message":"563","line":2,"column":53,"nodeType":"492","messageId":"493","endLine":2,"endColumn":58},{"ruleId":"490","severity":1,"message":"494","line":3,"column":10,"nodeType":"492","messageId":"493","endLine":3,"endColumn":15},{"ruleId":"490","severity":1,"message":"497","line":3,"column":16,"nodeType":"492","messageId":"493","endLine":3,"endColumn":24},{"ruleId":"490","severity":1,"message":"564","line":9,"column":10,"nodeType":"492","messageId":"493","endLine":9,"endColumn":30},{"ruleId":"490","severity":1,"message":"501","line":15,"column":8,"nodeType":"492","messageId":"493","endLine":15,"endColumn":17},{"ruleId":"536","severity":1,"message":"537","line":48,"column":33,"nodeType":"538","messageId":"539","endLine":48,"endColumn":35},{"ruleId":"536","severity":1,"message":"537","line":55,"column":33,"nodeType":"538","messageId":"539","endLine":55,"endColumn":35},{"ruleId":"536","severity":1,"message":"537","line":55,"column":61,"nodeType":"538","messageId":"539","endLine":55,"endColumn":63},{"ruleId":"525","severity":1,"message":"565","line":83,"column":8,"nodeType":"527","endLine":83,"endColumn":47,"suggestions":"566"},{"ruleId":"525","severity":1,"message":"526","line":91,"column":8,"nodeType":"527","endLine":91,"endColumn":36,"suggestions":"567"},{"ruleId":"525","severity":1,"message":"568","line":98,"column":8,"nodeType":"527","endLine":98,"endColumn":73,"suggestions":"569"},{"ruleId":"525","severity":1,"message":"526","line":104,"column":8,"nodeType":"527","endLine":104,"endColumn":23,"suggestions":"570"},{"ruleId":"536","severity":1,"message":"537","line":113,"column":39,"nodeType":"538","messageId":"539","endLine":113,"endColumn":41},{"ruleId":"536","severity":1,"message":"537","line":113,"column":67,"nodeType":"538","messageId":"539","endLine":113,"endColumn":69},{"ruleId":"536","severity":1,"message":"537","line":160,"column":33,"nodeType":"538","messageId":"539","endLine":160,"endColumn":35},{"ruleId":"525","severity":1,"message":"571","line":169,"column":8,"nodeType":"527","endLine":169,"endColumn":10,"suggestions":"572"},{"ruleId":"536","severity":1,"message":"537","line":215,"column":105,"nodeType":"538","messageId":"539","endLine":215,"endColumn":107},{"ruleId":"536","severity":1,"message":"537","line":215,"column":133,"nodeType":"538","messageId":"539","endLine":215,"endColumn":135},{"ruleId":"573","severity":1,"message":"574","line":244,"column":73,"nodeType":"575","endLine":244,"endColumn":139},{"ruleId":"490","severity":1,"message":"504","line":3,"column":16,"nodeType":"492","messageId":"493","endLine":3,"endColumn":22},{"ruleId":"490","severity":1,"message":"529","line":13,"column":8,"nodeType":"492","messageId":"493","endLine":13,"endColumn":16},{"ruleId":"490","severity":1,"message":"502","line":2,"column":8,"nodeType":"492","messageId":"493","endLine":2,"endColumn":9},{"ruleId":"490","severity":1,"message":"508","line":6,"column":31,"nodeType":"492","messageId":"493","endLine":6,"endColumn":37},{"ruleId":"490","severity":1,"message":"511","line":6,"column":55,"nodeType":"492","messageId":"493","endLine":6,"endColumn":64},{"ruleId":"490","severity":1,"message":"512","line":6,"column":66,"nodeType":"492","messageId":"493","endLine":6,"endColumn":71},{"ruleId":"490","severity":1,"message":"513","line":6,"column":73,"nodeType":"492","messageId":"493","endLine":6,"endColumn":84},{"ruleId":"490","severity":1,"message":"514","line":6,"column":86,"nodeType":"492","messageId":"493","endLine":6,"endColumn":95},{"ruleId":"490","severity":1,"message":"515","line":6,"column":97,"nodeType":"492","messageId":"493","endLine":6,"endColumn":108},{"ruleId":"490","severity":1,"message":"516","line":6,"column":110,"nodeType":"492","messageId":"493","endLine":6,"endColumn":115},{"ruleId":"490","severity":1,"message":"517","line":6,"column":117,"nodeType":"492","messageId":"493","endLine":6,"endColumn":122},{"ruleId":"490","severity":1,"message":"518","line":10,"column":22,"nodeType":"492","messageId":"493","endLine":10,"endColumn":26},{"ruleId":"490","severity":1,"message":"491","line":1,"column":17,"nodeType":"492","messageId":"493","endLine":1,"endColumn":26},{"ruleId":"490","severity":1,"message":"502","line":4,"column":13,"nodeType":"492","messageId":"493","endLine":4,"endColumn":14},{"ruleId":"490","severity":1,"message":"503","line":6,"column":8,"nodeType":"492","messageId":"493","endLine":6,"endColumn":16},{"ruleId":"490","severity":1,"message":"504","line":7,"column":16,"nodeType":"492","messageId":"493","endLine":7,"endColumn":22},{"ruleId":"490","severity":1,"message":"558","line":33,"column":10,"nodeType":"492","messageId":"493","endLine":33,"endColumn":19},{"ruleId":"490","severity":1,"message":"559","line":33,"column":21,"nodeType":"492","messageId":"493","endLine":33,"endColumn":33},{"ruleId":"525","severity":1,"message":"576","line":45,"column":6,"nodeType":"527","endLine":45,"endColumn":8,"suggestions":"577"},{"ruleId":"490","severity":1,"message":"502","line":2,"column":8,"nodeType":"492","messageId":"493","endLine":2,"endColumn":9},{"ruleId":"490","severity":1,"message":"520","line":4,"column":18,"nodeType":"492","messageId":"493","endLine":4,"endColumn":25},{"ruleId":"490","severity":1,"message":"578","line":4,"column":45,"nodeType":"492","messageId":"493","endLine":4,"endColumn":55},{"ruleId":"490","severity":1,"message":"521","line":4,"column":57,"nodeType":"492","messageId":"493","endLine":4,"endColumn":69},{"ruleId":"490","severity":1,"message":"522","line":4,"column":71,"nodeType":"492","messageId":"493","endLine":4,"endColumn":78},{"ruleId":"490","severity":1,"message":"523","line":4,"column":80,"nodeType":"492","messageId":"493","endLine":4,"endColumn":95},{"ruleId":"490","severity":1,"message":"524","line":4,"column":97,"nodeType":"492","messageId":"493","endLine":4,"endColumn":107},{"ruleId":"490","severity":1,"message":"508","line":6,"column":31,"nodeType":"492","messageId":"493","endLine":6,"endColumn":37},{"ruleId":"490","severity":1,"message":"511","line":6,"column":55,"nodeType":"492","messageId":"493","endLine":6,"endColumn":64},{"ruleId":"490","severity":1,"message":"512","line":6,"column":66,"nodeType":"492","messageId":"493","endLine":6,"endColumn":71},{"ruleId":"490","severity":1,"message":"513","line":6,"column":73,"nodeType":"492","messageId":"493","endLine":6,"endColumn":84},{"ruleId":"490","severity":1,"message":"514","line":6,"column":86,"nodeType":"492","messageId":"493","endLine":6,"endColumn":95},{"ruleId":"490","severity":1,"message":"515","line":6,"column":97,"nodeType":"492","messageId":"493","endLine":6,"endColumn":108},{"ruleId":"490","severity":1,"message":"516","line":6,"column":110,"nodeType":"492","messageId":"493","endLine":6,"endColumn":115},{"ruleId":"490","severity":1,"message":"517","line":6,"column":117,"nodeType":"492","messageId":"493","endLine":6,"endColumn":122},{"ruleId":"490","severity":1,"message":"579","line":9,"column":8,"nodeType":"492","messageId":"493","endLine":9,"endColumn":19},{"ruleId":"490","severity":1,"message":"518","line":10,"column":22,"nodeType":"492","messageId":"493","endLine":10,"endColumn":26},{"ruleId":"490","severity":1,"message":"580","line":13,"column":10,"nodeType":"492","messageId":"493","endLine":13,"endColumn":21},{"ruleId":"581","severity":1,"message":"582","line":30,"column":34,"nodeType":"583","messageId":"584","endLine":30,"endColumn":36},{"ruleId":"581","severity":1,"message":"582","line":34,"column":38,"nodeType":"583","messageId":"584","endLine":34,"endColumn":40},{"ruleId":"581","severity":1,"message":"582","line":37,"column":32,"nodeType":"583","messageId":"584","endLine":37,"endColumn":34},{"ruleId":"525","severity":1,"message":"526","line":57,"column":8,"nodeType":"527","endLine":57,"endColumn":22,"suggestions":"585"},{"ruleId":"581","severity":1,"message":"586","line":83,"column":62,"nodeType":"583","messageId":"587","endLine":83,"endColumn":64},{"ruleId":"536","severity":1,"message":"537","line":84,"column":39,"nodeType":"538","messageId":"539","endLine":84,"endColumn":41},{"ruleId":"490","severity":1,"message":"588","line":151,"column":53,"nodeType":"492","messageId":"493","endLine":151,"endColumn":57},{"ruleId":"490","severity":1,"message":"589","line":3,"column":10,"nodeType":"492","messageId":"493","endLine":3,"endColumn":23},{"ruleId":"490","severity":1,"message":"590","line":5,"column":8,"nodeType":"492","messageId":"493","endLine":5,"endColumn":19},{"ruleId":"490","severity":1,"message":"591","line":5,"column":22,"nodeType":"492","messageId":"493","endLine":5,"endColumn":30},{"ruleId":"490","severity":1,"message":"562","line":6,"column":10,"nodeType":"492","messageId":"493","endLine":6,"endColumn":19},{"ruleId":"490","severity":1,"message":"506","line":6,"column":21,"nodeType":"492","messageId":"493","endLine":6,"endColumn":24},{"ruleId":"490","severity":1,"message":"507","line":6,"column":26,"nodeType":"492","messageId":"493","endLine":6,"endColumn":29},{"ruleId":"490","severity":1,"message":"508","line":6,"column":31,"nodeType":"492","messageId":"493","endLine":6,"endColumn":37},{"ruleId":"490","severity":1,"message":"509","line":6,"column":39,"nodeType":"492","messageId":"493","endLine":6,"endColumn":43},{"ruleId":"490","severity":1,"message":"510","line":6,"column":45,"nodeType":"492","messageId":"493","endLine":6,"endColumn":53},{"ruleId":"490","severity":1,"message":"511","line":6,"column":55,"nodeType":"492","messageId":"493","endLine":6,"endColumn":64},{"ruleId":"490","severity":1,"message":"512","line":6,"column":66,"nodeType":"492","messageId":"493","endLine":6,"endColumn":71},{"ruleId":"490","severity":1,"message":"513","line":6,"column":73,"nodeType":"492","messageId":"493","endLine":6,"endColumn":84},{"ruleId":"490","severity":1,"message":"514","line":6,"column":86,"nodeType":"492","messageId":"493","endLine":6,"endColumn":95},{"ruleId":"490","severity":1,"message":"515","line":6,"column":97,"nodeType":"492","messageId":"493","endLine":6,"endColumn":108},{"ruleId":"490","severity":1,"message":"516","line":6,"column":110,"nodeType":"492","messageId":"493","endLine":6,"endColumn":115},{"ruleId":"490","severity":1,"message":"517","line":6,"column":117,"nodeType":"492","messageId":"493","endLine":6,"endColumn":122},{"ruleId":"490","severity":1,"message":"518","line":8,"column":22,"nodeType":"492","messageId":"493","endLine":8,"endColumn":26},{"ruleId":"536","severity":1,"message":"537","line":21,"column":37,"nodeType":"538","messageId":"539","endLine":21,"endColumn":39},{"ruleId":"536","severity":1,"message":"537","line":21,"column":65,"nodeType":"538","messageId":"539","endLine":21,"endColumn":67},{"ruleId":"525","severity":1,"message":"592","line":29,"column":8,"nodeType":"527","endLine":29,"endColumn":73,"suggestions":"593"},{"ruleId":"536","severity":1,"message":"537","line":34,"column":33,"nodeType":"538","messageId":"539","endLine":34,"endColumn":35},{"ruleId":"525","severity":1,"message":"594","line":44,"column":8,"nodeType":"527","endLine":44,"endColumn":10,"suggestions":"595"},{"ruleId":"490","severity":1,"message":"491","line":1,"column":17,"nodeType":"492","messageId":"493","endLine":1,"endColumn":26},{"ruleId":"490","severity":1,"message":"505","line":1,"column":28,"nodeType":"492","messageId":"493","endLine":1,"endColumn":36},{"ruleId":"490","severity":1,"message":"502","line":4,"column":13,"nodeType":"492","messageId":"493","endLine":4,"endColumn":14},{"ruleId":"490","severity":1,"message":"503","line":6,"column":8,"nodeType":"492","messageId":"493","endLine":6,"endColumn":16},{"ruleId":"490","severity":1,"message":"504","line":7,"column":16,"nodeType":"492","messageId":"493","endLine":7,"endColumn":22},{"ruleId":"490","severity":1,"message":"504","line":3,"column":16,"nodeType":"492","messageId":"493","endLine":3,"endColumn":22},{"ruleId":"490","severity":1,"message":"596","line":16,"column":10,"nodeType":"492","messageId":"493","endLine":16,"endColumn":13},{"ruleId":"490","severity":1,"message":"597","line":6,"column":8,"nodeType":"492","messageId":"493","endLine":6,"endColumn":13},{"ruleId":"490","severity":1,"message":"598","line":1,"column":28,"nodeType":"492","messageId":"493","endLine":1,"endColumn":34},{"ruleId":"581","severity":1,"message":"582","line":18,"column":35,"nodeType":"583","messageId":"584","endLine":18,"endColumn":37},{"ruleId":"581","severity":1,"message":"582","line":20,"column":53,"nodeType":"583","messageId":"584","endLine":20,"endColumn":55},{"ruleId":"581","severity":1,"message":"582","line":23,"column":56,"nodeType":"583","messageId":"584","endLine":23,"endColumn":58},{"ruleId":"536","severity":1,"message":"537","line":65,"column":37,"nodeType":"538","messageId":"539","endLine":65,"endColumn":39},{"ruleId":"536","severity":1,"message":"537","line":65,"column":65,"nodeType":"538","messageId":"539","endLine":65,"endColumn":67},{"ruleId":"525","severity":1,"message":"599","line":73,"column":8,"nodeType":"527","endLine":73,"endColumn":73,"suggestions":"600"},{"ruleId":"536","severity":1,"message":"537","line":78,"column":33,"nodeType":"538","messageId":"539","endLine":78,"endColumn":35},{"ruleId":"525","severity":1,"message":"594","line":86,"column":8,"nodeType":"527","endLine":86,"endColumn":10,"suggestions":"601"},{"ruleId":"525","severity":1,"message":"526","line":92,"column":8,"nodeType":"527","endLine":92,"endColumn":44,"suggestions":"602"},{"ruleId":"525","severity":1,"message":"526","line":147,"column":8,"nodeType":"527","endLine":147,"endColumn":23,"suggestions":"603"},{"ruleId":"604","severity":1,"message":"605","line":396,"column":97,"nodeType":"606","endLine":396,"endColumn":120},{"ruleId":"536","severity":1,"message":"537","line":399,"column":68,"nodeType":"538","messageId":"539","endLine":399,"endColumn":70},{"ruleId":"490","severity":1,"message":"491","line":1,"column":17,"nodeType":"492","messageId":"493","endLine":1,"endColumn":26},{"ruleId":"490","severity":1,"message":"497","line":2,"column":16,"nodeType":"492","messageId":"493","endLine":2,"endColumn":24},{"ruleId":"490","severity":1,"message":"502","line":4,"column":13,"nodeType":"492","messageId":"493","endLine":4,"endColumn":14},{"ruleId":"490","severity":1,"message":"503","line":6,"column":8,"nodeType":"492","messageId":"493","endLine":6,"endColumn":16},{"ruleId":"490","severity":1,"message":"504","line":7,"column":16,"nodeType":"492","messageId":"493","endLine":7,"endColumn":22},{"ruleId":"490","severity":1,"message":"501","line":15,"column":8,"nodeType":"492","messageId":"493","endLine":15,"endColumn":17},{"ruleId":"490","severity":1,"message":"506","line":3,"column":10,"nodeType":"492","messageId":"493","endLine":3,"endColumn":13},{"ruleId":"490","severity":1,"message":"507","line":3,"column":15,"nodeType":"492","messageId":"493","endLine":3,"endColumn":18},{"ruleId":"490","severity":1,"message":"494","line":5,"column":10,"nodeType":"492","messageId":"493","endLine":5,"endColumn":15},{"ruleId":"490","severity":1,"message":"497","line":5,"column":16,"nodeType":"492","messageId":"493","endLine":5,"endColumn":24},{"ruleId":"490","severity":1,"message":"554","line":22,"column":10,"nodeType":"492","messageId":"493","endLine":22,"endColumn":16},{"ruleId":"490","severity":1,"message":"555","line":22,"column":18,"nodeType":"492","messageId":"493","endLine":22,"endColumn":27},{"ruleId":"490","severity":1,"message":"556","line":23,"column":10,"nodeType":"492","messageId":"493","endLine":23,"endColumn":18},{"ruleId":"490","severity":1,"message":"557","line":23,"column":20,"nodeType":"492","messageId":"493","endLine":23,"endColumn":31},{"ruleId":"490","severity":1,"message":"558","line":24,"column":10,"nodeType":"492","messageId":"493","endLine":24,"endColumn":19},{"ruleId":"490","severity":1,"message":"559","line":24,"column":21,"nodeType":"492","messageId":"493","endLine":24,"endColumn":33},{"ruleId":"490","severity":1,"message":"560","line":28,"column":9,"nodeType":"492","messageId":"493","endLine":28,"endColumn":17},{"ruleId":"490","severity":1,"message":"607","line":1,"column":17,"nodeType":"492","messageId":"493","endLine":1,"endColumn":26},{"ruleId":"490","severity":1,"message":"517","line":3,"column":99,"nodeType":"492","messageId":"493","endLine":3,"endColumn":104},{"ruleId":"490","severity":1,"message":"608","line":17,"column":8,"nodeType":"492","messageId":"493","endLine":17,"endColumn":12},{"ruleId":"525","severity":1,"message":"609","line":68,"column":8,"nodeType":"527","endLine":68,"endColumn":10,"suggestions":"610"},{"ruleId":"525","severity":1,"message":"609","line":72,"column":8,"nodeType":"527","endLine":72,"endColumn":19,"suggestions":"611"},{"ruleId":"536","severity":1,"message":"537","line":112,"column":38,"nodeType":"538","messageId":"539","endLine":112,"endColumn":40},{"ruleId":"536","severity":1,"message":"537","line":155,"column":145,"nodeType":"538","messageId":"539","endLine":155,"endColumn":147},{"ruleId":"490","severity":1,"message":"511","line":3,"column":47,"nodeType":"492","messageId":"493","endLine":3,"endColumn":56},{"ruleId":"490","severity":1,"message":"563","line":3,"column":64,"nodeType":"492","messageId":"493","endLine":3,"endColumn":69},{"ruleId":"490","severity":1,"message":"612","line":13,"column":8,"nodeType":"492","messageId":"493","endLine":13,"endColumn":18},{"ruleId":"536","severity":1,"message":"537","line":40,"column":37,"nodeType":"538","messageId":"539","endLine":40,"endColumn":39},{"ruleId":"536","severity":1,"message":"537","line":40,"column":65,"nodeType":"538","messageId":"539","endLine":40,"endColumn":67},{"ruleId":"525","severity":1,"message":"599","line":48,"column":8,"nodeType":"527","endLine":48,"endColumn":73,"suggestions":"613"},{"ruleId":"536","severity":1,"message":"537","line":53,"column":33,"nodeType":"538","messageId":"539","endLine":53,"endColumn":35},{"ruleId":"525","severity":1,"message":"594","line":61,"column":8,"nodeType":"527","endLine":61,"endColumn":10,"suggestions":"614"},{"ruleId":"525","severity":1,"message":"615","line":73,"column":8,"nodeType":"527","endLine":73,"endColumn":10,"suggestions":"616"},{"ruleId":"525","severity":1,"message":"617","line":64,"column":8,"nodeType":"527","endLine":64,"endColumn":10,"suggestions":"618"},{"ruleId":"490","severity":1,"message":"502","line":2,"column":8,"nodeType":"492","messageId":"493","endLine":2,"endColumn":9},{"ruleId":"490","severity":1,"message":"519","line":4,"column":36,"nodeType":"492","messageId":"493","endLine":4,"endColumn":41},{"ruleId":"490","severity":1,"message":"520","line":6,"column":18,"nodeType":"492","messageId":"493","endLine":6,"endColumn":25},{"ruleId":"490","severity":1,"message":"521","line":6,"column":57,"nodeType":"492","messageId":"493","endLine":6,"endColumn":69},{"ruleId":"490","severity":1,"message":"522","line":6,"column":71,"nodeType":"492","messageId":"493","endLine":6,"endColumn":78},{"ruleId":"490","severity":1,"message":"523","line":6,"column":80,"nodeType":"492","messageId":"493","endLine":6,"endColumn":95},{"ruleId":"490","severity":1,"message":"524","line":6,"column":97,"nodeType":"492","messageId":"493","endLine":6,"endColumn":107},{"ruleId":"525","severity":1,"message":"526","line":60,"column":8,"nodeType":"527","endLine":60,"endColumn":31,"suggestions":"619"},{"ruleId":"490","severity":1,"message":"519","line":4,"column":36,"nodeType":"492","messageId":"493","endLine":4,"endColumn":41},{"ruleId":"490","severity":1,"message":"520","line":6,"column":18,"nodeType":"492","messageId":"493","endLine":6,"endColumn":25},{"ruleId":"490","severity":1,"message":"521","line":6,"column":57,"nodeType":"492","messageId":"493","endLine":6,"endColumn":69},{"ruleId":"490","severity":1,"message":"522","line":6,"column":71,"nodeType":"492","messageId":"493","endLine":6,"endColumn":78},{"ruleId":"490","severity":1,"message":"523","line":6,"column":80,"nodeType":"492","messageId":"493","endLine":6,"endColumn":95},{"ruleId":"490","severity":1,"message":"524","line":6,"column":97,"nodeType":"492","messageId":"493","endLine":6,"endColumn":107},{"ruleId":"490","severity":1,"message":"529","line":17,"column":8,"nodeType":"492","messageId":"493","endLine":17,"endColumn":16},{"ruleId":"490","severity":1,"message":"530","line":18,"column":10,"nodeType":"492","messageId":"493","endLine":18,"endColumn":22},{"ruleId":"525","severity":1,"message":"526","line":145,"column":8,"nodeType":"527","endLine":145,"endColumn":31,"suggestions":"620"},"no-native-reassign",["621"],"no-negated-in-lhs",["622"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Authmiddleware' is defined but never used.","'React' is defined but never used.","'Redirect' is defined but never used.","'jumgaAdmminRoutes' is assigned a value but never used.",["621"],["622"],"'CONSTANTS' is defined but never used.","'_' is defined but never used.","'firebase' is defined but never used.","'uuidv4' is defined but never used.","'useState' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'CardBody' is defined but never used.","'CardTitle' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'Media' is defined but never used.","'Table' is defined but never used.","'Link' is defined but never used.","'Alert' is defined but never used.","'AvField' is defined but never used.","'AvRadioGroup' is defined but never used.","'AvRadio' is defined but never used.","'AvCheckboxGroup' is defined but never used.","'AvCheckbox' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.","ArrayExpression",["623"],"'instance' is defined but never used.","'configParams' is defined but never used.",["624"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-escape","Unnecessary escape character: \\@.","Literal","unnecessaryEscape",["625","626"],"Unnecessary escape character: \\\".",["627","628"],"Unnecessary escape character: \\'.",["629","630"],"'user' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Expected '!==' and instead saw '!='.","'search' is assigned a value but never used.","'setsearch' is assigned a value but never used.","'megaMenu' is assigned a value but never used.","'setmegaMenu' is assigned a value but never used.","'socialDrp' is assigned a value but never used.","'setsocialDrp' is assigned a value but never used.","'isMobile' is assigned a value but never used.","'configParams' is assigned a value but never used.","'Container' is defined but never used.","'Label' is defined but never used.","'firebaseConfigParams' is defined but never used.","React Hook useEffect has a missing dependency: 'processCurrency'. Either include it or remove the dependency array.",["631"],["632"],"React Hook useEffect has missing dependencies: 'checkIfStoreExists', 'checkifApproved', 'props.history', 'state', and 'storeId'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["633"],["634"],"React Hook useEffect has missing dependencies: 'props.history', 'props.userStore', 'storeId', and 'windowRef'. Either include them or remove the dependency array.",["635"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","React Hook useEffect has a missing dependency: 'props.masterStore'. Either include it or remove the dependency array.",["636"],"'AvFeedback' is defined but never used.","'storefront2' is defined but never used.","'createStore' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["637"],"Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","'name' is assigned a value but never used.","'LazyLoadImage' is defined but never used.","'CreateStore' is defined but never used.","'Backdrop' is defined but never used.","React Hook useEffect has missing dependencies: 'props.history' and 'storeId'. Either include them or remove the dependency array.",["638"],"React Hook useEffect has missing dependencies: 'props.history', 'props.userStore', and 'storeId'. Either include them or remove the dependency array.",["639"],"'get' is defined but never used.","'thank' is defined but never used.","'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'props.history', 'state', and 'storeId'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["640"],["641"],["642"],["643"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Component' is defined but never used.","'img8' is defined but never used.","React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.",["644"],["645"],"'Nouislider' is defined but never used.",["646"],["647"],"React Hook useEffect has missing dependencies: 'props' and 'storeId'. Either include them or remove the dependency array.",["648"],"React Hook useEffect has missing dependencies: 'props' and 'searchId'. Either include them or remove the dependency array.",["649"],["650"],["651"],"no-global-assign","no-unsafe-negation",{"desc":"652","fix":"653"},{"desc":"652","fix":"654"},{"messageId":"655","fix":"656","desc":"657"},{"messageId":"658","fix":"659","desc":"660"},{"messageId":"655","fix":"661","desc":"657"},{"messageId":"658","fix":"662","desc":"660"},{"messageId":"655","fix":"663","desc":"657"},{"messageId":"658","fix":"664","desc":"660"},{"desc":"665","fix":"666"},{"desc":"667","fix":"668"},{"desc":"669","fix":"670"},{"desc":"671","fix":"672"},{"desc":"673","fix":"674"},{"desc":"675","fix":"676"},{"desc":"677","fix":"678"},{"desc":"679","fix":"680"},{"desc":"681","fix":"682"},{"desc":"683","fix":"684"},{"desc":"681","fix":"685"},{"desc":"686","fix":"687"},{"desc":"671","fix":"688"},{"desc":"689","fix":"690"},{"desc":"691","fix":"692"},{"desc":"683","fix":"693"},{"desc":"681","fix":"694"},{"desc":"695","fix":"696"},{"desc":"697","fix":"698"},{"desc":"652","fix":"699"},{"desc":"652","fix":"700"},"Update the dependencies array to be: [state, state.postSubmitError]",{"range":"701","text":"702"},{"range":"703","text":"702"},"removeEscape",{"range":"704","text":"705"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"706","text":"707"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"708","text":"705"},{"range":"709","text":"707"},{"range":"710","text":"705"},{"range":"711","text":"707"},"Update the dependencies array to be: [processCurrency, props.masterStore.state.remoteConfigs]",{"range":"712","text":"713"},"Update the dependencies array to be: [props.userStore.state.user, state]",{"range":"714","text":"715"},"Update the dependencies array to be: [checkIfStoreExists, checkifApproved, props.history, props.userStore.state.storeLoaded, props.userStore.state.stores, state, storeId]",{"range":"716","text":"717"},"Update the dependencies array to be: [state, state.isError]",{"range":"718","text":"719"},"Update the dependencies array to be: [props.history, props.userStore, storeId, windowRef]",{"range":"720","text":"721"},"Update the dependencies array to be: [props.masterStore]",{"range":"722","text":"723"},"Update the dependencies array to be: [props.isOpen, state]",{"range":"724","text":"725"},"Update the dependencies array to be: [props.history, props.userStore.state.storeLoaded, props.userStore.state.stores, storeId]",{"range":"726","text":"727"},"Update the dependencies array to be: [props.history, props.userStore, storeId]",{"range":"728","text":"729"},"Update the dependencies array to be: [props.history, props.userStore.state.storeLoaded, props.userStore.state.stores, state, storeId]",{"range":"730","text":"731"},{"range":"732","text":"729"},"Update the dependencies array to be: [props.masterStore.state.categories, state]",{"range":"733","text":"734"},{"range":"735","text":"719"},"Update the dependencies array to be: [loadData]",{"range":"736","text":"737"},"Update the dependencies array to be: [loadData, productId]",{"range":"738","text":"739"},{"range":"740","text":"731"},{"range":"741","text":"729"},"Update the dependencies array to be: [props, storeId]",{"range":"742","text":"743"},"Update the dependencies array to be: [props, searchId]",{"range":"744","text":"745"},{"range":"746","text":"702"},{"range":"747","text":"702"},[2192,2215],"[state, state.postSubmitError]",[4530,4553],[8506,8507],"",[8506,8506],"\\",[8508,8509],[8508,8508],[8510,8511],[8510,8510],[3006,3045],"[processCurrency, props.masterStore.state.remoteConfigs]",[3241,3269],"[props.userStore.state.user, state]",[3592,3657],"[checkIfStoreExists, checkifApproved, props.history, props.userStore.state.storeLoaded, props.userStore.state.stores, state, storeId]",[3823,3838],"[state, state.isError]",[6245,6247],"[props.history, props.userStore, storeId, windowRef]",[1333,1335],"[props.masterStore]",[2017,2031],"[props.isOpen, state]",[1241,1306],"[props.history, props.userStore.state.storeLoaded, props.userStore.state.stores, storeId]",[1865,1867],"[props.history, props.userStore, storeId]",[2576,2641],"[props.history, props.userStore.state.storeLoaded, props.userStore.state.stores, state, storeId]",[3105,3107],[3366,3402],"[props.masterStore.state.categories, state]",[5014,5029],[3131,3133],"[loadData]",[3190,3201],"[loadData, productId]",[2037,2102],[2566,2568],[2941,2943],"[props, storeId]",[2928,2930],"[props, searchId]",[2181,2204],[4519,4542]]